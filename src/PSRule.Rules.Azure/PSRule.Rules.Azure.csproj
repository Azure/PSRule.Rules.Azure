<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <AssemblyName>Azure.PSRule</AssemblyName>
    <RootNamespace>PSRule.Rules.Azure</RootNamespace>
    <TargetFramework>netstandard2.0</TargetFramework>
    <LangVersion>9.0</LangVersion>
    <OutputType>Library</OutputType>
    <ProjectGuid>{bce66f73-3809-4740-b3c3-f52958e7ab51}</ProjectGuid>
    <NeutralLanguage>en-US</NeutralLanguage>
    <GenerateAssemblyInfo>true</GenerateAssemblyInfo>
    <!-- <TreatWarningsAsErrors>true</TreatWarningsAsErrors> -->
    <Authors>Bernie White</Authors>
    <AssemblyTitle>PSRule for Azure</AssemblyTitle>
    <RepositoryUrl>https://github.com/Azure/PSRule.Rules.Azure</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageProjectUrl>https://aka.ms/ps-rule-azure</PackageProjectUrl>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageId>Azure.PSRule</PackageId>
    <PackageTags>PSRule;</PackageTags>
    <EnableNuget>true</EnableNuget>
    <Version>0.0.1</Version>
    <Company>Microsoft Corporation</Company>
    <Copyright>Copyright (c) Microsoft Corporation. Licensed under the MIT License.</Copyright>
    <Description>Validate Azure resources and infrastructure as code using PSRule.

This project uses GitHub Issues to track bugs and feature requests. See GitHub project for more information.</Description>
    <PackageReleaseNotes>For a list of changes see https://aka.ms/ps-rule-azure/changelog.</PackageReleaseNotes>
    <PackageIcon>package_icon.png</PackageIcon>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>

  <PropertyGroup>
    <AnalysisMode>AllEnabledByDefault</AnalysisMode>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
  </PropertyGroup>

  <PropertyGroup>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <DebugType>portable</DebugType>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>

  <PropertyGroup Condition="'$(OS)' == 'Windows_NT'">
    <DefineConstants>Windows</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TF_BUILD)' == 'true'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <PropertyGroup Condition="'$(GITHUB_ACTIONS)' == 'true'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\..\docs\assets\package_icon.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Include="README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="6.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
    <PackageReference Include="PowerShellStandard.Library" Version="5.1.1" PrivateAssets="All" />
    <PackageReference Include="YamlDotNet" Version="11.2.1" />
  </ItemGroup>

  <ItemGroup>
    <TypeFiles Include="../../data/**/*.min.json">
      <CompressedFile>$(IntermediateOutputPath)/generated/%(RecursiveDir)%(Filename)%(Extension).deflated</CompressedFile>
      <LogicalName>$([System.String]::new('%(RecursiveDir)%(Filename)%(Extension).deflated').Replace('\', '/').ToLowerInvariant())</LogicalName>
    </TypeFiles>
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Resources\Diagnostics.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Diagnostics.resx</DependentUpon>
    </Compile>
    <Compile Update="Resources\PSRuleResources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>PSRuleResources.resx</DependentUpon>
    </Compile>
    <Compile Update="Resources\ReasonStrings.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>ReasonStrings.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Resources\Diagnostics.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Diagnostics.Designer.cs</LastGenOutput>
      <LogicalName>PSRule.Rules.Azure.Resources.Diagnostics.resources</LogicalName>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources\PSRuleResources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>PSRuleResources.Designer.cs</LastGenOutput>
      <LogicalName>PSRule.Rules.Azure.Resources.PSRuleResources.resources</LogicalName>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources\ReasonStrings.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>ReasonStrings.Designer.cs</LastGenOutput>
      <LogicalName>PSRule.Rules.Azure.Resources.ReasonStrings.resources</LogicalName>
    </EmbeddedResource>
  </ItemGroup>

  <UsingTask TaskName="CompressType" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <SourceFile ParameterType="System.String" Required="true" />
      <TargetFile ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.IO" />
      <Using Namespace="System.IO.Compression" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          Directory.CreateDirectory(Path.GetDirectoryName(TargetFile));

          using (var inputStream = File.OpenRead(SourceFile))
          using (var outputStream = File.Create(TargetFile))
          using (var compressionStream = new DeflateStream(outputStream, CompressionLevel.Optimal))
          {
              inputStream.CopyTo(compressionStream);
          }
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <Target Name="BuildTool">
    <Exec Command="dotnet run --project ./src/PSRule.Rules.Azure.BuildTool -- provider" WorkingDirectory="..\.." ConsoleToMSBuild="true" >
      <Output TaskParameter="ConsoleOutput" PropertyName="OutputOfExec" />
    </Exec>
  </Target>

  <Target Name="CompressTypes" Inputs="@(TypeFiles)" Outputs="%(TypeFiles.CompressedFile)" DependsOnTargets="BuildTool">
    <CompressType SourceFile="%(TypeFiles.FullPath)" TargetFile="%(TypeFiles.CompressedFile)" />
  </Target>

  <Target Name="EmbedTypes" BeforeTargets="BeforeBuild" DependsOnTargets="CompressTypes">
    <ItemGroup>
      <EmbeddedResource Include="%(TypeFiles.CompressedFile)" LogicalName="%(LogicalName)" />
    </ItemGroup>
  </Target>

</Project>
