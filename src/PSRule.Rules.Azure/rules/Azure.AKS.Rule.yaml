# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

#
# Rules for Azure Kubernetes Service (AKS)
#

#region Rules

---
# Synopsis: AKS clusters should have minimum number of nodes for failover and updates
apiVersion: github.com/microsoft/PSRule/v1
kind: Rule
metadata:
  name: Azure.AKS.MinNodeCount
  ref: AZR-000024
  tags:
    release: 'GA'
    ruleSet: '2020_06'
spec:
  type:
  - Microsoft.ContainerService/managedClusters
  condition:
    field: 'Properties.agentPoolProfiles[0].count'
    greaterOrEquals: 3

---
# Synopsis: Configure AKS clusters to use managed identities for managing cluster infrastructure.
apiVersion: github.com/microsoft/PSRule/v1
kind: Rule
metadata:
  name: Azure.AKS.ManagedIdentity
  ref: AZR-000025
  tags:
    release: 'GA'
    ruleSet: '2020_06'
    Azure.WAF/pillar: 'Security'
  labels:
    Azure.ASB.v3/control: [ 'IM-1', 'IM-2' ]
spec:
  type:
  - Microsoft.ContainerService/managedClusters
  condition:
    field: 'Identity.Type'
    in:
      - 'SystemAssigned'
      - 'UserAssigned'

---
# Synopsis: Use a Standard load-balancer with AKS clusters.
apiVersion: github.com/microsoft/PSRule/v1
kind: Rule
metadata:
  name: Azure.AKS.StandardLB
  ref: AZR-000026
  tags:
    release: 'GA'
    ruleSet: '2020_06'
spec:
  type:
  - Microsoft.ContainerService/managedClusters
  condition:
    field: 'Properties.networkProfile.loadBalancerSku'
    equals: 'standard'

---
# Synopsis: Deploy AKS clusters with Network Policies enabled.
apiVersion: github.com/microsoft/PSRule/v1
kind: Rule
metadata:
  name: Azure.AKS.NetworkPolicy
  ref: AZR-000027
  tags:
    release: 'GA'
    ruleSet: '2020_06'
    Azure.WAF/pillar: 'Security'
  labels:
    Azure.ASB.v3/control: 'NS-1'
spec:
  type:
  - Microsoft.ContainerService/managedClusters
  condition:
    field: Properties.networkProfile.networkPolicy
    in:
    - azure
    - calico

---
# Synopsis: AKS clusters should use Azure Policy add-on.
apiVersion: github.com/microsoft/PSRule/v1
kind: Rule
metadata:
  name: Azure.AKS.AzurePolicyAddOn
  ref: AZR-000028
  tags:
    release: 'GA'
    ruleSet: '2020_12'
    Azure.WAF/pillar: 'Security'
  labels:
    Azure.ASB.v3/control: 'AM-2'
spec:
  type:
  - Microsoft.ContainerService/managedClusters
  condition:
    field: 'Properties.addonProfiles.azurePolicy.enabled'
    equals: true

---
# Synopsis: Use AKS-managed Azure AD to simplify authorization and improve security.
apiVersion: github.com/microsoft/PSRule/v1
kind: Rule
metadata:
  name: Azure.AKS.ManagedAAD
  ref: AZR-000029
  tags:
    release: 'GA'
    ruleSet: '2021_06'
    Azure.WAF/pillar: 'Security'
  labels:
    Azure.ASB.v3/control: [ 'IM-1', 'IM-2' ]
spec:
  type:
  - Microsoft.ContainerService/managedClusters
  condition:
    field: 'Properties.aadProfile.managed'
    equals: true

---
# Synopsis: Restrict access to API server endpoints to authorized IP addresses.
apiVersion: github.com/microsoft/PSRule/v1
kind: Rule
metadata:
  name: Azure.AKS.AuthorizedIPs
  ref: AZR-000030
  tags:
    release: 'GA'
    ruleSet: '2021_06'
    Azure.WAF/pillar: 'Security'
  labels:
    Azure.ASB.v3/control: 'NS-1'
spec:
  type:
  - Microsoft.ContainerService/managedClusters
  condition:
    field: 'Properties.apiServerAccessProfile.authorizedIPRanges'
    greaterOrEquals: 1

---
# Synopsis: Enforce named user accounts with RBAC assigned permissions.
apiVersion: github.com/microsoft/PSRule/v1
kind: Rule
metadata:
  name: Azure.AKS.LocalAccounts
  ref: AZR-000031
  tags:
    release: 'preview'
    ruleSet: '2021_06'
    Azure.WAF/pillar: 'Security'
  labels:
    Azure.ASB.v3/control: [ 'IM-1', 'PA-7' ]
spec:
  type:
  - Microsoft.ContainerService/managedClusters
  condition:
    field: 'Properties.disableLocalAccounts'
    equals: true

---
# Synopsis: Use Azure RBAC for Kubernetes Authorization with AKS clusters.
apiVersion: github.com/microsoft/PSRule/v1
kind: Rule
metadata:
  name: Azure.AKS.AzureRBAC
  ref: AZR-000032
  tags:
    release: 'GA'
    ruleSet: '2021_06'
    Azure.WAF/pillar: 'Security'
  labels:
    Azure.ASB.v3/control: [ 'IM-1', 'PA-7' ]
spec:
  type:
  - Microsoft.ContainerService/managedClusters
  condition:
    field: 'Properties.aadProfile.enableAzureRbac'
    equals: true

---
# Synopsis: Deploy AKS clusters with Secrets Store CSI Driver and store Secrets in Key Vault.
apiVersion: github.com/microsoft/PSRule/v1
kind: Rule
metadata:
  name: Azure.AKS.SecretStore
  ref: AZR-000033
  tags:
    release: 'GA'
    ruleSet: '2021_12'
    Azure.WAF/pillar: 'Security'
  labels:
    Azure.ASB.v3/control: 'IM-8'
spec:
  type:
  - Microsoft.ContainerService/managedClusters
  condition:
    field: Properties.addonProfiles.azureKeyvaultSecretsProvider.enabled
    equals: true

---
# Synopsis: Enable autorotation of Secrets Store CSI Driver secrets for AKS clusters.
apiVersion: github.com/microsoft/PSRule/v1
kind: Rule
metadata:
  name: Azure.AKS.SecretStoreRotation
  ref: AZR-000034
  tags:
    release: 'GA'
    ruleSet: '2021_12'
    Azure.WAF/pillar: 'Security'
  labels:
    Azure.ASB.v3/control: 'DP-7'
spec:
  type:
  - Microsoft.ContainerService/managedClusters
  with:
  - Azure.AKS.SecretStoreEnabled
  condition:
    field: Properties.addonProfiles.azureKeyvaultSecretsProvider.config.enableSecretRotation
    equals: 'true'

---
# Synopsis: Disable HTTP application routing add-on in AKS clusters.
apiVersion: github.com/microsoft/PSRule/v1
kind: Rule
metadata:
  name: Azure.AKS.HttpAppRouting
  ref: AZR-000035
  tags:
    release: 'GA'
    ruleSet: '2021_12'
    Azure.WAF/pillar: 'Security'
  labels:
    Azure.ASB.v3/control: [ 'NS-1', 'DP-4' ]
spec:
  type:
  - Microsoft.ContainerService/managedClusters
  condition:
    anyOf:
    - field: Properties.addonProfiles.httpApplicationRouting.enabled
      exists: false
    - field: Properties.addonProfiles.httpApplicationRouting.enabled
      equals: false

---
# Synopsis: Configure AKS to automatically upgrade to newer supported AKS versions as they are made available.
apiVersion: github.com/microsoft/PSRule/v1
kind: Rule
metadata:
  name: Azure.AKS.AutoUpgrade
  ref: AZR-000036
  tags:
    release: 'GA'
    ruleSet: '2021_12'
    Azure.WAF/pillar: 'Security'
  labels:
    Azure.ASB.v3/control: 'PV-7'
spec:
  type:
  - Microsoft.ContainerService/managedClusters
  condition:
    allOf:
    - field: Properties.autoUpgradeProfile.upgradeChannel
      hasValue: true
    - field: Properties.autoUpgradeProfile.upgradeChannel
      notEquals: none

---
# Synopsis: Configure AKS clusters to use AAD pod identities to access Azure resources securely.
apiVersion: github.com/microsoft/PSRule/v1
kind: Rule
metadata:
  name: Azure.AKS.PodIdentity
  ref: AZR-000037
  tags:
    release: 'preview'
    ruleSet: '2021_12'
    Azure.WAF/pillar: 'Security'
  labels:
    Azure.ASB.v3/control: [ 'IM-1', 'IM-2' ]
spec:
  type:
  - Microsoft.ContainerService/managedClusters
  with:
    - Azure.AKS.AzureCNI
  condition:
    field: Properties.podIdentityProfile.enabled
    equals: true

---
# Synopsis: Deploy AKS cluster with role-based access control (RBAC) enabled.
apiVersion: github.com/microsoft/PSRule/v1
kind: Rule
metadata:
  name: Azure.AKS.UseRBAC
  ref: AZR-000038
  tags:
    release: 'GA'
    ruleSet: '2020_06'
    Azure.WAF/pillar: 'Security'
  labels:
    Azure.ASB.v3/control: [ 'IM-1','PA-7' ]
spec:
  type:
  - Microsoft.ContainerService/managedClusters
  condition:
    field: Properties.enableRBAC
    equals: true

---
# Synopsis: Azure Kubernetes Service (AKS) cluster names should meet naming requirements.
apiVersion: github.com/microsoft/PSRule/v1
kind: Rule
metadata:
  name: Azure.AKS.Name
  ref: AZR-000039
  tags:
    release: 'GA'
    ruleSet: '2020_06'
spec:
  type:
  - Microsoft.ContainerService/managedClusters
  condition:
    allOf:
    - name: '.'
      greaterOrEquals: 1
    - name: '.'
      lessOrEquals: 63
    # The name must contain between 1 to 63 characters inclusive.
    # The name only allows alphanumerics, underscores, and hyphens and must start and end with alphanumeric.
    - name: '.'
      match: '^[A-Za-z0-9](-|\w)*[A-Za-z0-9]$'

---
# Synopsis: Azure Kubernetes Service (AKS) cluster DNS prefix should meet naming requirements.
apiVersion: github.com/microsoft/PSRule/v1
kind: Rule
metadata:
  name: Azure.AKS.DNSPrefix
  ref: AZR-000040
  tags:
    release: 'GA'
    ruleSet: '2020_06'
spec:
  type:
  - Microsoft.ContainerService/managedClusters
  condition:
    allOf:
    - field: Properties.dnsPrefix
      greaterOrEquals: 1
    - field: Properties.dnsPrefix
      lessOrEquals: 54
    # The dnsPrefix must contain between 1 to 54 characters inclusive.
    # The dnsPrefix only allows alphanumerics, and hyphens and must start and end with alphanumeric.
    - field: Properties.dnsPrefix
      match: '^[A-Za-z0-9]((-|[A-Za-z0-9]){0,}[A-Za-z0-9]){0,}$'

---
# Synopsis: Enable Container insights to monitor AKS cluster workloads.
apiVersion: github.com/microsoft/PSRule/v1
kind: Rule
metadata:
  name: Azure.AKS.ContainerInsights
  ref: AZR-000041
  tags:
    release: 'GA'
    ruleSet: '2021_09'
    Azure.WAF/pillar: 'Security'
  labels:
    Azure.ASB.v3/control: 'LT-3'
spec:
  type:
  - Microsoft.ContainerService/managedClusters
  condition:
    field: Properties.addonProfiles.omsAgent.enabled
    equals: true

#endregion Rules

#region Selectors

---
# Synopsis: AKS clusters with Secret Store CSI Driver enabled.
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: Azure.AKS.SecretStoreEnabled
spec:
  if:
    allOf:
    - type: '.'
      equals: 'Microsoft.ContainerService/managedClusters'
    - field: Properties.addonProfiles.azureKeyvaultSecretsProvider.enabled
      equals: true

---
# Synopsis: AKS clusters that use Azure CNI network plugin.
apiVersion: github.com/microsoft/PSRule/v1
kind: Selector
metadata:
  name: Azure.AKS.AzureCNI
spec:
  if:
    allOf:
    - type: '.'
      equals: 'Microsoft.ContainerService/managedClusters' 
    - field: 'Properties.networkProfile.networkPlugin'
      equals: 'azure'

#endregion Selectors
