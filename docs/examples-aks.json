{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "_generator": {
            "name": "bicep",
            "version": "0.4.613.9944",
            "templateHash": "6304755602461575155"
        }
    },
    "parameters": {
        "clusterName": {
            "type": "string",
            "metadata": {
                "description": "The name of the AKS cluster."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Optional. The Azure region to deploy to.",
                "strongType": "location",
                "example": "EastUS",
                "ignore": true
            }
        },
        "identityName": {
            "type": "string",
            "metadata": {
                "description": "The name of the user assigned identity to used for cluster control plane."
            }
        },
        "dnsPrefix": {
            "type": "string",
            "metadata": {
                "description": "A DNS prefix to use with hosted Kubernetes API server FQDN."
            }
        },
        "osDiskSizeGB": {
            "type": "int",
            "defaultValue": 32,
            "minValue": 0,
            "metadata": {
                "description": "Disk size (in GiB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
            }
        },
        "systemVMSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "The size of cluster VM instances."
            }
        },
        "systemPoolMin": {
            "type": "int",
            "maxValue": 50,
            "minValue": 1,
            "metadata": {
                "description": "The minimum number of agent nodes for the system pool.",
                "example": 3
            }
        },
        "systemPoolMax": {
            "type": "int",
            "defaultValue": 3,
            "maxValue": 50,
            "minValue": 1,
            "metadata": {
                "description": "The maximum number of agent nodes for the system pool.",
                "example": 3
            }
        },
        "kubernetesVersion": {
            "type": "string",
            "defaultValue": "1.19.7",
            "metadata": {
                "description": "The version of Kubernetes."
            }
        },
        "systemPoolMaxPods": {
            "type": "int",
            "defaultValue": 50,
            "minValue": 30,
            "metadata": {
                "description": "Maximum number of pods that can run on nodes in the system pool."
            }
        },
        "workspaceId": {
            "type": "string",
            "metadata": {
                "description": "Specify the resource id of the OMS workspace.",
                "strongType": "Microsoft.OperationalInsights/workspaces"
            }
        },
        "vnetId": {
            "type": "string",
            "metadata": {
                "description": "The resource Id for the virtual network where the cluster and ACI will be deployed into.",
                "strongType": "Microsoft.Network/virtualNetworks"
            }
        },
        "systemPoolSubnet": {
            "type": "string",
            "metadata": {
                "description": "The name of the subnet do deploy cluster resources."
            }
        },
        "useSecretRotation": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Determines if the Key Vault provider automatically rotates secrets."
            }
        },
        "useOpenServiceMesh": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Determines if Open Service Mesh for Kubernetes is enabled."
            }
        },
        "clusterAdmins": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "The object Ids of groups that will be added with the cluster admin role."
            }
        },
        "pools": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "User cluster pools.",
                "example": [
                    {
                        "name": "",
                        "priority": "Regular",
                        "osType": "Linux",
                        "minCount": 0,
                        "maxCount": 2,
                        "vmSize": "Standard_D2s_v3"
                    }
                ]
            }
        },
        "upgradeChannel": {
            "type": "string",
            "defaultValue": "none",
            "allowedValues": [
                "none",
                "rapid",
                "stable",
                "patch"
            ],
            "metadata": {
                "description": "Determine if cluster upgrades are automatically applied."
            }
        },
        "tags": {
            "type": "object",
            "metadata": {
                "description": "Tags to apply to the resource.",
                "example": {
                    "service": "container-platform",
                    "env": "prod"
                }
            }
        }
    },
    "functions": [],
    "variables": {
        "copy": [
            {
                "name": "userPools",
                "count": "[length(range(0, length(parameters('pools'))))]",
                "input": {
                    "name": "[parameters('pools')[range(0, length(parameters('pools')))[copyIndex('userPools')]].name]",
                    "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                    "count": "[parameters('pools')[range(0, length(parameters('pools')))[copyIndex('userPools')]].minCount]",
                    "minCount": "[parameters('pools')[range(0, length(parameters('pools')))[copyIndex('userPools')]].minCount]",
                    "maxCount": "[parameters('pools')[range(0, length(parameters('pools')))[copyIndex('userPools')]].maxCount]",
                    "enableAutoScaling": true,
                    "maxPods": "[parameters('pools')[range(0, length(parameters('pools')))[copyIndex('userPools')]].maxPods]",
                    "vmSize": "[parameters('pools')[range(0, length(parameters('pools')))[copyIndex('userPools')]].vmSize]",
                    "osType": "[parameters('pools')[range(0, length(parameters('pools')))[copyIndex('userPools')]].osType]",
                    "type": "VirtualMachineScaleSets",
                    "vnetSubnetID": "[variables('clusterSubnetId')]",
                    "mode": "User",
                    "osDiskType": "Ephemeral",
                    "scaleSetPriority": "[parameters('pools')[range(0, length(parameters('pools')))[copyIndex('userPools')]].priority]"
                }
            }
        ],
        "serviceCidr": "192.168.0.0/16",
        "dnsServiceIP": "192.168.0.4",
        "dockerBridgeCidr": "172.17.0.1/16",
        "clusterSubnetId": "[format('{0}/subnets/{1}', parameters('vnetId'), parameters('systemPoolSubnet'))]",
        "allPools": "[union(variables('systemPools'), variables('userPools'))]",
        "systemPools": [
            {
                "name": "system",
                "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                "count": "[parameters('systemPoolMin')]",
                "minCount": "[parameters('systemPoolMin')]",
                "maxCount": "[parameters('systemPoolMax')]",
                "enableAutoScaling": true,
                "maxPods": "[parameters('systemPoolMaxPods')]",
                "vmSize": "[parameters('systemVMSize')]",
                "osType": "Linux",
                "type": "VirtualMachineScaleSets",
                "vnetSubnetID": "[variables('clusterSubnetId')]",
                "mode": "System",
                "osDiskType": "Ephemeral",
                "scaleSetPriority": "Regular"
            }
        ]
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "name": "[parameters('identityName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]"
        },
        {
            "type": "Microsoft.ContainerService/managedClusters",
            "apiVersion": "2021-07-01",
            "name": "[parameters('clusterName')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]": {}
                }
            },
            "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "enableRBAC": true,
                "dnsPrefix": "[parameters('dnsPrefix')]",
                "agentPoolProfiles": "[variables('allPools')]",
                "aadProfile": {
                    "managed": true,
                    "enableAzureRBAC": true,
                    "adminGroupObjectIDs": "[parameters('clusterAdmins')]",
                    "tenantID": "[subscription().tenantId]"
                },
                "networkProfile": {
                    "networkPlugin": "azure",
                    "networkPolicy": "azure",
                    "loadBalancerSku": "standard",
                    "serviceCidr": "[variables('serviceCidr')]",
                    "dnsServiceIP": "[variables('dnsServiceIP')]",
                    "dockerBridgeCidr": "[variables('dockerBridgeCidr')]"
                },
                "autoUpgradeProfile": {
                    "upgradeChannel": "[parameters('upgradeChannel')]"
                },
                "addonProfiles": {
                    "httpApplicationRouting": {
                        "enabled": false
                    },
                    "azurepolicy": {
                        "enabled": true,
                        "config": {
                            "version": "v2"
                        }
                    },
                    "omsagent": {
                        "enabled": true,
                        "config": {
                            "logAnalyticsWorkspaceResourceID": "[parameters('workspaceId')]"
                        }
                    },
                    "kubeDashboard": {
                        "enabled": false
                    },
                    "azureKeyvaultSecretsProvider": {
                        "enabled": true,
                        "config": {
                            "enableSecretRotation": "[string(parameters('useSecretRotation'))]"
                        }
                    },
                    "openServiceMesh": {
                        "enabled": "[parameters('useOpenServiceMesh')]"
                    }
                }
            },
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]"
            ]
        }
    ]
}