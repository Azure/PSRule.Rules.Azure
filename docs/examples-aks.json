{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.26.54.24096",
      "templateHash": "2536331348365960823"
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the AKS cluster."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. The Azure region to deploy to.",
        "strongType": "location",
        "example": "EastUS",
        "ignore": true
      }
    },
    "identityName": {
      "type": "string",
      "metadata": {
        "description": "The name of the user assigned identity to used for cluster control plane."
      }
    },
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "A DNS prefix to use with hosted Kubernetes API server FQDN."
      }
    },
    "osDiskSizeGB": {
      "type": "int",
      "defaultValue": 32,
      "minValue": 0,
      "metadata": {
        "description": "Disk size (in GiB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
      }
    },
    "systemVMSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "The size of cluster VM instances."
      }
    },
    "systemPoolMin": {
      "type": "int",
      "metadata": {
        "description": "The minimum number of agent nodes for the system pool.",
        "example": 3
      },
      "minValue": 1,
      "maxValue": 50
    },
    "systemPoolMax": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "The maximum number of agent nodes for the system pool.",
        "example": 3
      },
      "minValue": 1,
      "maxValue": 50
    },
    "kubernetesVersion": {
      "type": "string",
      "defaultValue": "1.27.9",
      "metadata": {
        "description": "The version of Kubernetes."
      }
    },
    "systemPoolMaxPods": {
      "type": "int",
      "defaultValue": 50,
      "minValue": 30,
      "metadata": {
        "description": "Maximum number of pods that can run on nodes in the system pool."
      }
    },
    "workspaceId": {
      "type": "string",
      "metadata": {
        "description": "Specify the resource id of the OMS workspace.",
        "strongType": "Microsoft.OperationalInsights/workspaces"
      }
    },
    "clusterSubnetId": {
      "type": "string",
      "metadata": {
        "description": "A reference to the subnet to deploy the cluster into."
      }
    },
    "clusterAdmins": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "The object Ids of groups that will be added with the cluster admin role."
      }
    },
    "pools": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "User cluster pools.",
        "example": [
          {
            "name": "",
            "priority": "Regular",
            "osType": "Linux",
            "minCount": 0,
            "maxCount": 2,
            "vmSize": "Standard_D2s_v3"
          }
        ]
      }
    }
  },
  "variables": {
    "copy": [
      {
        "name": "userPools",
        "count": "[length(range(0, length(parameters('pools'))))]",
        "input": {
          "name": "[parameters('pools')[range(0, length(parameters('pools')))[copyIndex('userPools')]].name]",
          "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
          "count": "[parameters('pools')[range(0, length(parameters('pools')))[copyIndex('userPools')]].minCount]",
          "minCount": "[parameters('pools')[range(0, length(parameters('pools')))[copyIndex('userPools')]].minCount]",
          "maxCount": "[parameters('pools')[range(0, length(parameters('pools')))[copyIndex('userPools')]].maxCount]",
          "enableAutoScaling": true,
          "maxPods": "[parameters('pools')[range(0, length(parameters('pools')))[copyIndex('userPools')]].maxPods]",
          "vmSize": "[parameters('pools')[range(0, length(parameters('pools')))[copyIndex('userPools')]].vmSize]",
          "osType": "[parameters('pools')[range(0, length(parameters('pools')))[copyIndex('userPools')]].osType]",
          "type": "VirtualMachineScaleSets",
          "vnetSubnetID": "[parameters('clusterSubnetId')]",
          "mode": "User",
          "osDiskType": "Ephemeral",
          "scaleSetPriority": "[parameters('pools')[range(0, length(parameters('pools')))[copyIndex('userPools')]].priority]"
        }
      }
    ],
    "serviceCidr": "192.168.0.0/16",
    "dnsServiceIP": "192.168.0.4",
    "allPools": "[union(variables('systemPools'), variables('userPools'))]",
    "systemPools": [
      {
        "name": "system",
        "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
        "count": "[parameters('systemPoolMin')]",
        "minCount": "[parameters('systemPoolMin')]",
        "maxCount": "[parameters('systemPoolMax')]",
        "enableAutoScaling": true,
        "maxPods": "[parameters('systemPoolMaxPods')]",
        "vmSize": "[parameters('systemVMSize')]",
        "osType": "Linux",
        "type": "VirtualMachineScaleSets",
        "vnetSubnetID": "[parameters('clusterSubnetId')]",
        "mode": "System",
        "osDiskType": "Ephemeral",
        "scaleSetPriority": "Regular"
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[parameters('identityName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.ContainerService/managedClusters",
      "apiVersion": "2024-01-01",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')))]": {}
        }
      },
      "properties": {
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "disableLocalAccounts": true,
        "enableRBAC": true,
        "dnsPrefix": "[parameters('dnsPrefix')]",
        "agentPoolProfiles": "[variables('allPools')]",
        "aadProfile": {
          "managed": true,
          "enableAzureRBAC": true,
          "adminGroupObjectIDs": "[parameters('clusterAdmins')]",
          "tenantID": "[subscription().tenantId]"
        },
        "networkProfile": {
          "networkPlugin": "azure",
          "networkPolicy": "azure",
          "loadBalancerSku": "standard",
          "serviceCidr": "[variables('serviceCidr')]",
          "dnsServiceIP": "[variables('dnsServiceIP')]"
        },
        "apiServerAccessProfile": {
          "authorizedIPRanges": [
            "0.0.0.0/32"
          ]
        },
        "autoUpgradeProfile": {
          "upgradeChannel": "stable"
        },
        "oidcIssuerProfile": {
          "enabled": true
        },
        "addonProfiles": {
          "azurepolicy": {
            "enabled": true
          },
          "omsagent": {
            "enabled": true,
            "config": {
              "logAnalyticsWorkspaceResourceID": "[parameters('workspaceId')]"
            }
          },
          "azureKeyvaultSecretsProvider": {
            "enabled": true,
            "config": {
              "enableSecretRotation": "true"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]"
      ]
    },
    {
      "type": "Microsoft.ContainerService/managedClusters",
      "apiVersion": "2024-01-01",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')))]": {}
        }
      },
      "properties": {
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "disableLocalAccounts": true,
        "enableRBAC": true,
        "dnsPrefix": "[parameters('dnsPrefix')]",
        "agentPoolProfiles": [
          {
            "name": "system",
            "osDiskSizeGB": 0,
            "minCount": 3,
            "maxCount": 5,
            "enableAutoScaling": true,
            "maxPods": 50,
            "vmSize": "Standard_D4s_v5",
            "type": "VirtualMachineScaleSets",
            "vnetSubnetID": "[parameters('clusterSubnetId')]",
            "mode": "System",
            "osDiskType": "Ephemeral"
          },
          {
            "name": "user",
            "osDiskSizeGB": 0,
            "minCount": 3,
            "maxCount": 20,
            "enableAutoScaling": true,
            "maxPods": 50,
            "vmSize": "Standard_D4s_v5",
            "type": "VirtualMachineScaleSets",
            "vnetSubnetID": "[parameters('clusterSubnetId')]",
            "mode": "User",
            "osDiskType": "Ephemeral"
          }
        ],
        "aadProfile": {
          "managed": true,
          "enableAzureRBAC": true,
          "adminGroupObjectIDs": "[parameters('clusterAdmins')]",
          "tenantID": "[subscription().tenantId]"
        },
        "networkProfile": {
          "networkPlugin": "azure",
          "networkPolicy": "azure",
          "loadBalancerSku": "standard",
          "serviceCidr": "[variables('serviceCidr')]",
          "dnsServiceIP": "[variables('dnsServiceIP')]"
        },
        "apiServerAccessProfile": {
          "authorizedIPRanges": [
            "0.0.0.0/32"
          ]
        },
        "autoUpgradeProfile": {
          "upgradeChannel": "stable"
        },
        "oidcIssuerProfile": {
          "enabled": true
        },
        "addonProfiles": {
          "azurepolicy": {
            "enabled": true
          },
          "omsagent": {
            "enabled": true,
            "config": {
              "logAnalyticsWorkspaceResourceID": "[parameters('workspaceId')]"
            }
          },
          "azureKeyvaultSecretsProvider": {
            "enabled": true,
            "config": {
              "enableSecretRotation": "true"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]"
      ]
    },
    {
      "type": "Microsoft.ContainerService/managedClusters",
      "apiVersion": "2024-01-01",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')))]": {}
        }
      },
      "properties": {
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "disableLocalAccounts": true,
        "enableRBAC": true,
        "dnsPrefix": "[parameters('dnsPrefix')]",
        "agentPoolProfiles": [
          {
            "name": "system",
            "osDiskSizeGB": 0,
            "minCount": 3,
            "maxCount": 5,
            "enableAutoScaling": true,
            "maxPods": 50,
            "vmSize": "Standard_D4s_v5",
            "type": "VirtualMachineScaleSets",
            "vnetSubnetID": "[parameters('clusterSubnetId')]",
            "mode": "System",
            "osDiskType": "Ephemeral"
          },
          {
            "name": "user",
            "osDiskSizeGB": 0,
            "minCount": 3,
            "maxCount": 20,
            "enableAutoScaling": true,
            "maxPods": 50,
            "vmSize": "Standard_D4s_v5",
            "type": "VirtualMachineScaleSets",
            "vnetSubnetID": "[parameters('clusterSubnetId')]",
            "mode": "User",
            "osDiskType": "Ephemeral"
          }
        ],
        "aadProfile": {
          "managed": true,
          "enableAzureRBAC": true,
          "adminGroupObjectIDs": "[parameters('clusterAdmins')]",
          "tenantID": "[subscription().tenantId]"
        },
        "networkProfile": {
          "networkPlugin": "azure",
          "networkPolicy": "azure",
          "loadBalancerSku": "standard",
          "serviceCidr": "[variables('serviceCidr')]",
          "dnsServiceIP": "[variables('dnsServiceIP')]"
        },
        "apiServerAccessProfile": {
          "enablePrivateCluster": true,
          "enablePrivateClusterPublicFQDN": false
        },
        "autoUpgradeProfile": {
          "upgradeChannel": "stable"
        },
        "oidcIssuerProfile": {
          "enabled": true
        },
        "addonProfiles": {
          "azurepolicy": {
            "enabled": true
          },
          "omsagent": {
            "enabled": true,
            "config": {
              "logAnalyticsWorkspaceResourceID": "[parameters('workspaceId')]"
            }
          },
          "azureKeyvaultSecretsProvider": {
            "enabled": true,
            "config": {
              "enableSecretRotation": "true"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]"
      ]
    }
  ]
}