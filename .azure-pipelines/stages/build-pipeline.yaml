# Azure DevOps
# Build pipeline for PSRule.Rules.Azure

parameters:
  version: ''
  buildConfiguration: 'Release'

steps:

# Install pipeline dependencies and build module
- powershell: ./scripts/pipeline-build.ps1 -File ./pipeline.build.ps1 -Configuration ${{ parameters.buildConfiguration }} -ModuleVersion $(Build.BuildNumber) -ReleaseVersion "$(Release.Version)"
  displayName: 'Build module'

# Pester test results
- task: PublishTestResults@2
  displayName: 'Publish Pester results'
  inputs:
    testRunTitle: 'Pester on $(imageName)'
    testRunner: NUnit
    testResultsFiles: 'reports/pester-unit.xml'
    mergeTestResults: true
    platform: $(imageName)
    configuration: $(buildConfiguration)
    publishRunAttachments: true
  condition: succeededOrFailed()

# PSRule results
# - task: PublishTestResults@2
#   displayName: 'Publish PSRule results'
#   inputs:
#     testRunTitle: 'PSRule on $(imageName)'
#     testRunner: NUnit
#     testResultsFiles: 'reports/rule.report.xml'
#     mergeTestResults: true
#     platform: $(imageName)
#     configuration: $(buildConfiguration)
#     publishRunAttachments: true
#   condition: succeededOrFailed()

# Publish Code Coverage Results
- task: PublishCodeCoverageResults@1
  displayName: 'Publish Pester code coverage'
  inputs:
    codeCoverageTool: 'JaCoCo'
    summaryFileLocation: 'reports/pester-coverage.xml'
    #reportDirectory: # Optional
    #additionalCodeCoverageFiles: # Optional
    #failIfCoverageEmpty: false # Optional
  condition: eq(variables['coverage'], 'true')

# Generate artifacts
- task: PublishBuildArtifacts@1
  displayName: 'Publish module'
  inputs:
    PathtoPublish: out/modules/PSRule.Rules.Azure
    ArtifactName: PSRule.Rules.Azure
  condition: and(succeeded(), eq(variables['publishModule'], 'true'))
