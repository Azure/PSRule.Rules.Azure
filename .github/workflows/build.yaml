#
# CI Pipeline
#

# NOTES:
# This workflow builds and tests module updates.

name: Build
on:
  # push:
  #   branches: [ main, 'release/*' ]
  # pull_request:
  #   branches: [ main, 'release/*' ]
  workflow_dispatch:

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.x

    - name: Install dependencies
      shell: pwsh
      run: ./.azure-pipelines/pipeline-deps.ps1

    - name: Build module
      shell: pwsh
      run: Invoke-Build -Configuration Release -AssertStyle GitHubActions

    - name: Upload module
      uses: actions/upload-artifact@v3
      with:
        name: module-release
        path: ./out/modules/PSRule.Rules.Azure/*
        if-no-files-found: error

    - name: Upload Test Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: Module.DotNet.TestResults
        path: ./reports/*.trx
        if-no-files-found: error

    - name: Upload Test Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: Module.PSRule.TestResults
        path: ./reports/ps-rule*.xml
        if-no-files-found: error

  Test:
    name: Test module (${{ matrix.rid }})
    runs-on: ${{ matrix.os }}
    needs: Build
    permissions:
      contents: read

    strategy:
      # Get full test results from all platforms.
      fail-fast: false

      matrix:
        include:
          - os: windows-latest
            rid: win-x64
          - os: ubuntu-latest
            rid: linux-x64
          - os: ubuntu-latest
            rid: linux-musl-x64
          - os: macos-latest
            rid: osx-x64

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.x

    - name: Install dependencies
      shell: pwsh
      run: ./.azure-pipelines/pipeline-deps.ps1

    - name: Download module
      uses: actions/download-artifact@v3
      with:
        name: module-release
        path: ./out/modules/PSRule.Rules.Azure

    - name: Test module
      shell: pwsh
      run: Invoke-Build TestModule -Configuration Release -AssertStyle GitHubActions
