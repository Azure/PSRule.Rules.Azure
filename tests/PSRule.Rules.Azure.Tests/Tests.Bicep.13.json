{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.16.2.56959",
      "templateHash": "15464645948943371395"
    }
  },
  "parameters": {
    "arrayToTest": {
      "type": "array",
      "defaultValue": [
        [
          "one",
          "two"
        ],
        [
          "three"
        ],
        [
          "four",
          "five"
        ]
      ]
    },
    "numbers": {
      "type": "array",
      "defaultValue": [
        0,
        1,
        2,
        3
      ]
    }
  },
  "variables": {
    "dogs": [
      {
        "name": "Evie",
        "age": 5,
        "interests": [
          "Ball",
          "Frisbee"
        ]
      },
      {
        "name": "Casper",
        "age": 3,
        "interests": [
          "Other dogs"
        ]
      },
      {
        "name": "Indy",
        "age": 2,
        "interests": [
          "Butter"
        ]
      },
      {
        "name": "Kira",
        "age": 8,
        "interests": [
          "Rubs"
        ]
      }
    ],
    "ages": "[map(variables('dogs'), lambda('dog', lambdaVariables('dog').age))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "vnet",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "654374419493010363"
            }
          },
          "variables": {
            "subnets": [
              {
                "name": "subnet1",
                "addressPrefix": "10.0.0.0/24"
              },
              {
                "name": "subnet2",
                "addressPrefix": "10.0.1.0/24"
              },
              {
                "name": "subnet3",
                "addressPrefix": "10.0.2.0/24"
              }
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-09-01",
              "name": "vnet1",
              "properties": {
                "copy": [
                  {
                    "name": "subnets",
                    "count": "[length(variables('subnets'))]",
                    "input": {
                      "name": "[variables('subnets')[copyIndex('subnets')].name]",
                      "properties": {
                        "addressPrefix": "[variables('subnets')[copyIndex('subnets')].addressPrefix]"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "subnets": {
              "type": "array",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', 'vnet1'), '2022-09-01').subnets]"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "arrayOutput": {
      "type": "array",
      "value": "[flatten(parameters('arrayToTest'))]"
    },
    "oldDogs": {
      "type": "array",
      "value": "[filter(variables('dogs'), lambda('dog', greaterOrEquals(lambdaVariables('dog').age, 5)))]"
    },
    "vnetId": {
      "type": "string",
      "value": "[filter(reference(resourceId('Microsoft.Resources/deployments', 'vnet'), '2022-09-01').outputs.subnets.value, lambda('s', equals(lambdaVariables('s').name, 'subnet1')))[0].id]"
    },
    "dogNames": {
      "type": "array",
      "value": "[map(variables('dogs'), lambda('dog', lambdaVariables('dog').name))]"
    },
    "sayHi": {
      "type": "array",
      "value": "[map(variables('dogs'), lambda('dog', format('Hello {0}!', lambdaVariables('dog').name)))]"
    },
    "mapObject": {
      "type": "array",
      "value": "[map(range(0, length(variables('dogs'))), lambda('i', createObject('i', lambdaVariables('i'), 'dog', variables('dogs')[lambdaVariables('i')].name, 'greeting', format('Ahoy, {0}!', variables('dogs')[lambdaVariables('i')].name))))]"
    },
    "totalAge": {
      "type": "int",
      "value": "[reduce(variables('ages'), 0, lambda('cur', 'next', add(lambdaVariables('cur'), lambdaVariables('next'))))]"
    },
    "totalAgeAdd1": {
      "type": "int",
      "value": "[reduce(variables('ages'), 1, lambda('cur', 'next', add(lambdaVariables('cur'), lambdaVariables('next'))))]"
    },
    "dogsByAge": {
      "type": "array",
      "value": "[sort(variables('dogs'), lambda('a', 'b', less(lambdaVariables('a').age, lambdaVariables('b').age)))]"
    },
    "objectMap": {
      "type": "object",
      "value": "[toObject(createArray(123, 456, 789), lambda('i', format('{0}', div(lambdaVariables('i'), 100))))]"
    },
    "objectMap2": {
      "type": "object",
      "value": "[toObject(parameters('numbers'), lambda('i', format('{0}', lambdaVariables('i'))), lambda('i', createObject('isEven', equals(mod(lambdaVariables('i'), 2), 0), 'isGreaterThan2', greater(lambdaVariables('i'), 2))))]"
    },
    "objectMapNull": {
      "type": "object",
      "value": "[toObject(createArray(123, 456, 789, null()), lambda('i', format('{0}', lambdaVariables('i'))))]"
    }
  }
}