{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "name": "Storage Account",
        "description": "A generic Storage Account."
    },
    "parameters": {
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Storage Account."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The Azure region to deploy to."
            }
        },
        "sku": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS"
            ],
            "metadata": {
                "description": "Crease the Storage Account as LRS or GRS."
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {
            },
            "metadata": {
                "description": "Tags to apply to the resource."
            }
        },
        "containers": {
            "type": "array",
            "defaultValue": [
            ],
            "metadata": {
                "description": "An array of storage containers to create on the storage account."
            }
        },
        "lifecycleRules": {
            "type": "array",
            "defaultValue": [
            ],
            "metadata": {
                "description": "An array of lifecycle management policies for the storage account."
            }
        },
        "softDeleteDays": {
            "type": "int",
            "defaultValue": 0,
            "minValue": 0,
            "maxValue": 365,
            "metadata": {
                "description": "The number of days to retain deleted blobs. When set to 0, soft delete is disabled."
            }
        }
    },
    "variables": {
        "softDeleteLookup": {
            "true": {
                "enabled": true,
                "days": "[parameters('softDeleteDays')]"
            },
            "false": {
                "enabled": false
            }
        },
        "deleteRetentionPolicy": "[if(equals(parameters('softDeleteDays'), 0), variables('softDeleteLookup')['false'], variables('softDeleteLookup')['true'])]"
    },
    "resources": [
        {
            "comments": "Storage Account",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('sku')]",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                    ],
                    "ipRules": [
                    ],
                    "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            },
            "tags": "[parameters('tags')]",
            "resources": [
                {
                    "comments": "Configure blob storage services",
                    "type": "Microsoft.Storage/storageAccounts/blobServices",
                    "apiVersion": "2019-06-01",
                    "name": "[concat(parameters('storageAccountName'), '/default')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
                    ],
                    "sku": {
                        "name": "[parameters('sku')]"
                    },
                    "properties": {
                        "cors": {
                            "corsRules": [
                            ]
                        },
                        "deleteRetentionPolicy": "[variables('deleteRetentionPolicy')]"
                    }
                }
            ]
        },
        {
            "comments": "Create a blob container",
            "condition": "[not(equals(length(parameters('containers')), 0))]",
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[if(equals(length(parameters('containers')), 0), concat(parameters('storageAccountName'), '/default/empty'), concat(parameters('storageAccountName'), '/default/', parameters('containers')[copyIndex('containerIndex')].name))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "copy": {
                "mode": "Parallel",
                "count": "[if(equals(length(parameters('containers')), 0), 1, length(parameters('containers')))]",
                "name": "containerIndex"
            },
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "comments": "Create blob lifecycle policy",
            "name": "[concat(parameters('storageAccountName'), '/default')]",
            "type": "Microsoft.Storage/storageAccounts/managementPolicies",
            "apiVersion": "2019-06-01",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "policy": {
                    "rules": "[parameters('lifecycleRules')]"
                }
            }
        }
    ]
}
