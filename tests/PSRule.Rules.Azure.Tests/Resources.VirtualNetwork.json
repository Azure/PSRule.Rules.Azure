[
    {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A",
        "Location": "region",
        "ResourceName": "route-A",
        "Name": "route-A",
        "Properties": {
            "disableBgpRoutePropagation": false,
            "routes": [],
            "subnets": [
                {
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/subnet-A"
                },
                {
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/subnet-B"
                }
            ]
        },
        "ResourceGroupName": "test-rg",
        "Type": "Microsoft.Network/routeTables",
        "ResourceType": "Microsoft.Network/routeTables",
        "Tags": null,
        "SubscriptionId": "00000000-0000-0000-0000-000000000000"
    },
    {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A",
        "Location": "region",
        "ResourceName": "vnet-A",
        "Name": "vnet-A",
        "Properties": {
            "addressSpace": {
                "addressPrefixes": [
                    "10.1.0.0/24"
                ]
            },
            "dhcpOptions": {
                "dnsServers": [
                    "10.1.0.36",
                    "168.63.129.16"
                ]
            },
            "subnets": [
                {
                    "name": "GatewaySubnet",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/GatewaySubnet",
                    "properties": {
                        "addressPrefix": "10.1.0.0/27",
                        "serviceEndpoints": [],
                        "delegations": []
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                },
                {
                    "name": "subnet-A",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/subnet-A",
                    "properties": {
                        "addressPrefix": "10.1.0.32/28",
                        "networkSecurityGroup": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A"
                        },
                        "routeTable": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
                        },
                        "serviceEndpoints": [],
                        "delegations": []
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                },
                {
                    "name": "subnet-B",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/subnet-B",
                    "properties": {
                        "addressPrefix": "10.1.0.48/28",
                        "networkSecurityGroup": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A"
                        },
                        "routeTable": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
                        },
                        "serviceEndpoints": [],
                        "delegations": []
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                },
                {
                    "name": "subnet-C",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/subnet-C",
                    "properties": {
                        "addressPrefix": "10.1.0.64/28",
                        "networkSecurityGroup": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A"
                        },
                        "routeTable": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
                        },
                        "serviceEndpoints": [],
                        "delegations": []
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                },
                {
                    "name": "subnet-D",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/subnet-D",
                    "properties": {
                        "addressPrefix": "10.1.0.80/28",
                        "networkSecurityGroup": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A"
                        },
                        "routeTable": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
                        },
                        "serviceEndpoints": [],
                        "delegations": []
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                }
            ],
            "virtualNetworkPeerings": [
                {
                    "name": "peer-B",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/virtualNetworkPeerings/peer-B",
                    "properties": {
                        "peeringState": "Connected",
                        "remoteVirtualNetwork": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-B"
                        },
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": false,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": false,
                        "doNotVerifyRemoteGateways": false,
                        "remoteAddressSpace": {
                            "addressPrefixes": [
                                "10.2.0.0/24"
                            ]
                        },
                        "routeServiceVips": {}
                    },
                    "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                }
            ],
            "enableDdosProtection": false,
            "enableVmProtection": false
        },
        "ResourceGroupName": "test-rg",
        "Type": "Microsoft.Network/virtualNetworks",
        "ResourceType": "Microsoft.Network/virtualNetworks",
        "Tags": null,
        "SubscriptionId": "00000000-0000-0000-0000-000000000000"
    },
    {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-B",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-B",
        "Location": "region",
        "ResourceName": "vnet-B",
        "Name": "vnet-B",
        "Properties": {
            "addressSpace": {
                "addressPrefixes": [
                    "10.2.0.0/24"
                ]
            },
            "dhcpOptions": {
                "dnsServers": [
                    "10.99.0.36"
                ]
            },
            "subnets": [
                {
                    "name": "GatewaySubnet",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-B/subnets/GatewaySubnet",
                    "properties": {
                        "addressPrefix": "10.2.0.0/27",
                        "serviceEndpoints": [],
                        "delegations": []
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                },
                {
                    "name": "subnet-A",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-B/subnets/subnet-A",
                    "properties": {
                        "addressPrefix": "10.2.0.32/28",
                        "networkSecurityGroup": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A"
                        },
                        "routeTable": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
                        },
                        "serviceEndpoints": [],
                        "delegations": []
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                },
                {
                    "name": "subnet-B",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-B/subnets/subnet-B",
                    "properties": {
                        "addressPrefix": "10.2.0.48/28",
                        "routeTable": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
                        },
                        "serviceEndpoints": [],
                        "delegations": []
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                },
                {
                    "name": "subnet-C",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-B/subnets/subnet-C",
                    "properties": {
                        "addressPrefix": "10.2.0.64/28",
                        "networkSecurityGroup": null,
                        "routeTable": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
                        },
                        "serviceEndpoints": [],
                        "delegations": []
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                },
                {
                    "name": "subnet-D",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-B/subnets/subnet-D",
                    "properties": {
                        "addressPrefix": "10.2.0.80/28",
                        "networkSecurityGroup": {},
                        "routeTable": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
                        },
                        "serviceEndpoints": [],
                        "delegations": []
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                }
            ],
            "virtualNetworkPeerings": [
                {
                    "name": "peer-A",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-B/virtualNetworkPeerings/peer-A",
                    "properties": {
                        "peeringState": "Connected",
                        "remoteVirtualNetwork": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A"
                        },
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": false,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": false,
                        "doNotVerifyRemoteGateways": false,
                        "remoteAddressSpace": {
                            "addressPrefixes": [
                                "10.1.0.0/24"
                            ]
                        },
                        "routeServiceVips": {}
                    },
                    "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                }
            ],
            "enableDdosProtection": false,
            "enableVmProtection": false
        },
        "ResourceGroupName": "test-rg",
        "Type": "Microsoft.Network/virtualNetworks",
        "ResourceType": "Microsoft.Network/virtualNetworks",
        "Tags": null,
        "SubscriptionId": "00000000-0000-0000-0000-000000000000"
    },
    {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-C",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-C",
        "Location": "region",
        "ResourceName": "vnet-C",
        "Name": "vnet-C",
        "Properties": {
            "addressSpace": {
                "addressPrefixes": [
                    "10.3.0.0/24"
                ]
            },
            "dhcpOptions": {
                "dnsServers": []
            },
            "subnets": [
                {
                    "name": "GatewaySubnet",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-C/subnets/GatewaySubnet",
                    "properties": {
                        "addressPrefix": "10.3.0.0/27",
                        "serviceEndpoints": [],
                        "delegations": []
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                },
                {
                    "name": "subnet-A",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-C/subnets/subnet-A",
                    "properties": {
                        "addressPrefix": "10.3.0.32/28",
                        "networkSecurityGroup": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A"
                        },
                        "routeTable": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
                        },
                        "serviceEndpoints": [],
                        "delegations": []
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                },
                {
                    "name": "subnet-B",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-C/subnets/subnet-B",
                    "properties": {
                        "addressPrefix": "10.3.0.48/28",
                        "routeTable": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
                        },
                        "serviceEndpoints": [],
                        "delegations": []
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                },
                {
                    "name": "subnet-C",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-C/subnets/subnet-C",
                    "properties": {
                        "addressPrefix": "10.3.0.64/28",
                        "networkSecurityGroup": null,
                        "routeTable": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
                        },
                        "serviceEndpoints": [],
                        "delegations": []
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                },
                {
                    "name": "subnet-D",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-C/subnets/subnet-D",
                    "properties": {
                        "addressPrefix": "10.3.0.80/28",
                        "networkSecurityGroup": {},
                        "routeTable": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
                        },
                        "serviceEndpoints": [],
                        "delegations": []
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                }
            ],
            "virtualNetworkPeerings": [
                {
                    "name": "peer-A",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-C/virtualNetworkPeerings/peer-A",
                    "properties": {
                        "peeringState": "Connected",
                        "remoteVirtualNetwork": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A"
                        },
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": false,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": false,
                        "doNotVerifyRemoteGateways": false,
                        "remoteAddressSpace": {
                            "addressPrefixes": [
                                "10.1.0.0/24"
                            ]
                        },
                        "routeServiceVips": {}
                    },
                    "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                },
                {
                    "name": "peer-D",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-C/virtualNetworkPeerings/peer-D",
                    "properties": {
                        "peeringState": "Disconnected",
                        "remoteVirtualNetwork": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-D"
                        },
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": false,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": false,
                        "doNotVerifyRemoteGateways": false,
                        "remoteAddressSpace": {
                            "addressPrefixes": [
                                "10.4.0.0/24"
                            ]
                        },
                        "routeServiceVips": {}
                    },
                    "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                }
            ],
            "enableDdosProtection": false,
            "enableVmProtection": false
        },
        "ResourceGroupName": "test-rg",
        "Type": "Microsoft.Network/virtualNetworks",
        "ResourceType": "Microsoft.Network/virtualNetworks",
        "Tags": null,
        "SubscriptionId": "00000000-0000-0000-0000-000000000000"
    },
    {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-D",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-D",
        "Location": "region",
        "ResourceName": "vnet-D",
        "Name": "vnet-D",
        "Properties": {
            "addressSpace": {
                "addressPrefixes": [
                    "10.4.0.0/24"
                ]
            },
            "dhcpOptions": {
                "dnsServers": [
                    "10.99.0.36",
                    "10.99.0.37"
                ]
            },
            "subnets": [
                {
                    "name": "GatewaySubnet",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-D/subnets/GatewaySubnet",
                    "properties": {
                        "addressPrefix": "10.4.0.0/27",
                        "serviceEndpoints": [],
                        "delegations": []
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                },
                {
                    "name": "subnet-A",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-D/subnets/subnet-A",
                    "properties": {
                        "addressPrefix": "10.4.0.32/28",
                        "networkSecurityGroup": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A"
                        },
                        "routeTable": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
                        },
                        "serviceEndpoints": [],
                        "delegations": []
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                },
                {
                    "name": "subnet-B",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-D/subnets/subnet-B",
                    "properties": {
                        "addressPrefix": "10.4.0.48/28",
                        "routeTable": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
                        },
                        "serviceEndpoints": [],
                        "delegations": []
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                },
                {
                    "name": "subnet-C",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-D/subnets/subnet-C",
                    "properties": {
                        "addressPrefix": "10.4.0.64/28",
                        "networkSecurityGroup": null,
                        "routeTable": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
                        },
                        "serviceEndpoints": [],
                        "delegations": []
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                },
                {
                    "name": "subnet-D",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-D/subnets/subnet-D",
                    "properties": {
                        "addressPrefix": "10.4.0.80/28",
                        "networkSecurityGroup": {},
                        "routeTable": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
                        },
                        "serviceEndpoints": [],
                        "delegations": []
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                }
            ],
            "virtualNetworkPeerings": [],
            "enableDdosProtection": false,
            "enableVmProtection": false
        },
        "ResourceGroupName": "test-rg",
        "Type": "Microsoft.Network/virtualNetworks",
        "ResourceType": "Microsoft.Network/virtualNetworks",
        "Tags": null,
        "SubscriptionId": "00000000-0000-0000-0000-000000000000"
    },
    {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A",
        "Location": "region",
        "ResourceName": "nsg-A",
        "Name": "nsg-A",
        "Properties": {
            "securityRules": [
                {
                    "name": "allow-rdp-inbound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A/securityRules/allow-rdp-inbound",
                    "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                    "properties": {
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "3389",
                        "destinationAddressPrefix": "VirtualNetwork",
                        "access": "Allow",
                        "priority": 400,
                        "direction": "Inbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": [],
                        "sourceApplicationSecurityGroups": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationSecurityGroups/asg-A"
                            }
                        ]
                    }
                },
                {
                    "name": "allow-dc-to-dc-inbound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A/securityRules/allow-dc-to-dc-inbound",
                    "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                    "properties": {
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "destinationAddressPrefix": "VirtualNetwork",
                        "access": "Allow",
                        "priority": 300,
                        "direction": "Inbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [
                            "10.1.0.32/28",
                            "10.2.0.32/28",
                            "10.3.0.32/28"
                        ],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "allow-dc-to-dc-outbound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A/securityRules/allow-dc-to-dc-outbound",
                    "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                    "properties": {
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "VirtualNetwork",
                        "access": "Allow",
                        "priority": 300,
                        "direction": "Outbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": [
                            "10.1.0.32/28",
                            "10.2.0.32/28",
                            "10.3.0.32/28"
                        ]
                    }
                },
                {
                    "name": "deny-rdp-double-hop-outbound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A/securityRules/deny-rdp-double-hop-outbound",
                    "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                    "properties": {
                        "description": "Prevent outbound RDP.",
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "3389",
                        "sourceAddressPrefix": "VirtualNetwork",
                        "destinationAddressPrefix": "*",
                        "access": "Deny",
                        "priority": 200,
                        "direction": "Outbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                }
            ],
            "defaultSecurityRules": [
                {
                    "name": "AllowVnetInBound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A/defaultSecurityRules/AllowVnetInBound",
                    "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
                    "properties": {
                        "description": "Allow inbound traffic from all VMs in VNET",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "VirtualNetwork",
                        "destinationAddressPrefix": "VirtualNetwork",
                        "access": "Allow",
                        "priority": 65000,
                        "direction": "Inbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "AllowAzureLoadBalancerInBound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A/defaultSecurityRules/AllowAzureLoadBalancerInBound",
                    "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
                    "properties": {
                        "description": "Allow inbound traffic from azure load balancer",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "AzureLoadBalancer",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 65001,
                        "direction": "Inbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "DenyAllInBound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A/defaultSecurityRules/DenyAllInBound",
                    "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
                    "properties": {
                        "description": "Deny all inbound traffic",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "*",
                        "access": "Deny",
                        "priority": 65500,
                        "direction": "Inbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "AllowVnetOutBound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A/defaultSecurityRules/AllowVnetOutBound",
                    "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
                    "properties": {
                        "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "VirtualNetwork",
                        "destinationAddressPrefix": "VirtualNetwork",
                        "access": "Allow",
                        "priority": 65000,
                        "direction": "Outbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "AllowInternetOutBound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A/defaultSecurityRules/AllowInternetOutBound",
                    "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
                    "properties": {
                        "description": "Allow outbound traffic from all VMs to Internet",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "Internet",
                        "access": "Allow",
                        "priority": 65001,
                        "direction": "Outbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "DenyAllOutBound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A/defaultSecurityRules/DenyAllOutBound",
                    "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
                    "properties": {
                        "description": "Deny all outbound traffic",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "*",
                        "access": "Deny",
                        "priority": 65500,
                        "direction": "Outbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                }
            ],
            "subnets": [
                {
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/subnet-A"
                }
            ]
        },
        "ResourceGroupName": "test-rg",
        "Type": "Microsoft.Network/networkSecurityGroups",
        "ResourceType": "Microsoft.Network/networkSecurityGroups",
        "Tags": null,
        "SubscriptionId": "00000000-0000-0000-0000-000000000000"
    },
    {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B",
        "Location": "region",
        "ResourceName": "nsg-B",
        "Name": "nsg-B",
        "Properties": {
            "securityRules": [
                {
                    "name": "allow-rdp-inbound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B/securityRules/allow-rdp-inbound",
                    "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                    "properties": {
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "3389",
                        "destinationAddressPrefix": "VirtualNetwork",
                        "access": "Allow",
                        "priority": 400,
                        "direction": "Inbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefix": "*",
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "allow-dc-to-dc-inbound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B/securityRules/allow-dc-to-dc-inbound",
                    "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                    "properties": {
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "destinationAddressPrefix": "VirtualNetwork",
                        "access": "Allow",
                        "priority": 300,
                        "direction": "Inbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [
                            "10.1.0.32/28",
                            "10.2.0.32/28",
                            "10.3.0.32/28"
                        ],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "allow-dc-to-dc-outbound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B/securityRules/allow-dc-to-dc-outbound",
                    "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                    "properties": {
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "VirtualNetwork",
                        "access": "Allow",
                        "priority": 300,
                        "direction": "Outbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": [
                            "10.1.0.32/28",
                            "10.2.0.32/28",
                            "10.3.0.32/28"
                        ]
                    }
                },
                {
                    "name": "deny-rdp-double-hop-outbound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B/securityRules/deny-rdp-double-hop-outbound",
                    "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                    "properties": {
                        "description": "Prevent outbound RDP.",
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "3389",
                        "sourceAddressPrefix": "VirtualNetwork",
                        "destinationAddressPrefix": "*",
                        "access": "Deny",
                        "priority": 200,
                        "direction": "Outbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                }
            ],
            "defaultSecurityRules": [
                {
                    "name": "AllowVnetInBound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B/defaultSecurityRules/AllowVnetInBound",
                    "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
                    "properties": {
                        "description": "Allow inbound traffic from all VMs in VNET",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "VirtualNetwork",
                        "destinationAddressPrefix": "VirtualNetwork",
                        "access": "Allow",
                        "priority": 65000,
                        "direction": "Inbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "AllowAzureLoadBalancerInBound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B/defaultSecurityRules/AllowAzureLoadBalancerInBound",
                    "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
                    "properties": {
                        "description": "Allow inbound traffic from azure load balancer",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "AzureLoadBalancer",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 65001,
                        "direction": "Inbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "DenyAllInBound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B/defaultSecurityRules/DenyAllInBound",
                    "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
                    "properties": {
                        "description": "Deny all inbound traffic",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "*",
                        "access": "Deny",
                        "priority": 65500,
                        "direction": "Inbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "AllowVnetOutBound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B/defaultSecurityRules/AllowVnetOutBound",
                    "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
                    "properties": {
                        "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "VirtualNetwork",
                        "destinationAddressPrefix": "VirtualNetwork",
                        "access": "Allow",
                        "priority": 65000,
                        "direction": "Outbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "AllowInternetOutBound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B/defaultSecurityRules/AllowInternetOutBound",
                    "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
                    "properties": {
                        "description": "Allow outbound traffic from all VMs to Internet",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "Internet",
                        "access": "Allow",
                        "priority": 65001,
                        "direction": "Outbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "DenyAllOutBound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B/defaultSecurityRules/DenyAllOutBound",
                    "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
                    "properties": {
                        "description": "Deny all outbound traffic",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "*",
                        "access": "Deny",
                        "priority": 65500,
                        "direction": "Outbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                }
            ],
            "subnets": []
        },
        "ResourceGroupName": "test-rg",
        "Type": "Microsoft.Network/networkSecurityGroups",
        "ResourceType": "Microsoft.Network/networkSecurityGroups",
        "Tags": null,
        "SubscriptionId": "00000000-0000-0000-0000-000000000000"
    },
    {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-C",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-C",
        "Location": "region",
        "ResourceName": "nsg-C",
        "Name": "nsg-C",
        "Properties": {
            "securityRules": [
                {
                    "name": "allow-dc-to-dc-inbound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-C/securityRules/allow-dc-to-dc-inbound",
                    "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                    "properties": {
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "destinationAddressPrefix": "VirtualNetwork",
                        "access": "Allow",
                        "priority": 300,
                        "direction": "Inbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [
                            "10.1.0.32/28",
                            "10.2.0.32/28",
                            "10.3.0.32/28"
                        ],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "deny-all-inbound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-C/securityRules/allow-rdp-inbound",
                    "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                    "properties": {
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "destinationAddressPrefix": "VirtualNetwork",
                        "access": "Deny",
                        "priority": 200,
                        "direction": "Inbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefix": "*",
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "allow-dc-to-dc-outbound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-C/securityRules/allow-dc-to-dc-outbound",
                    "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                    "properties": {
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "VirtualNetwork",
                        "access": "Allow",
                        "priority": 300,
                        "direction": "Outbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": [
                            "10.1.0.32/28",
                            "10.2.0.32/28",
                            "10.3.0.32/28"
                        ]
                    }
                }
            ],
            "defaultSecurityRules": [
                {
                    "name": "AllowVnetInBound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-C/defaultSecurityRules/AllowVnetInBound",
                    "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
                    "properties": {
                        "description": "Allow inbound traffic from all VMs in VNET",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "VirtualNetwork",
                        "destinationAddressPrefix": "VirtualNetwork",
                        "access": "Allow",
                        "priority": 65000,
                        "direction": "Inbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "AllowAzureLoadBalancerInBound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-C/defaultSecurityRules/AllowAzureLoadBalancerInBound",
                    "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
                    "properties": {
                        "description": "Allow inbound traffic from azure load balancer",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "AzureLoadBalancer",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 65001,
                        "direction": "Inbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "DenyAllInBound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-C/defaultSecurityRules/DenyAllInBound",
                    "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
                    "properties": {
                        "description": "Deny all inbound traffic",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "*",
                        "access": "Deny",
                        "priority": 65500,
                        "direction": "Inbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "AllowVnetOutBound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-C/defaultSecurityRules/AllowVnetOutBound",
                    "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
                    "properties": {
                        "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "VirtualNetwork",
                        "destinationAddressPrefix": "VirtualNetwork",
                        "access": "Allow",
                        "priority": 65000,
                        "direction": "Outbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "AllowInternetOutBound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-C/defaultSecurityRules/AllowInternetOutBound",
                    "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
                    "properties": {
                        "description": "Allow outbound traffic from all VMs to Internet",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "Internet",
                        "access": "Allow",
                        "priority": 65001,
                        "direction": "Outbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "DenyAllOutBound",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-C/defaultSecurityRules/DenyAllOutBound",
                    "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
                    "properties": {
                        "description": "Deny all outbound traffic",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "*",
                        "access": "Deny",
                        "priority": 65500,
                        "direction": "Outbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                }
            ],
            "networkInterfaces": []
        },
        "ResourceGroupName": "test-rg",
        "Type": "Microsoft.Network/networkSecurityGroups",
        "ResourceType": "Microsoft.Network/networkSecurityGroups",
        "Tags": null,
        "SubscriptionId": "00000000-0000-0000-0000-000000000000"
    },
    {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-A",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-A",
        "Location": "region",
        "ResourceName": "appgw-A",
        "Name": "appgw-A",
        "Properties": {
            "sku": {
                "name": "WAF_Medium",
                "tier": "WAF",
                "capacity": 2
            },
            "gatewayIPConfigurations": [
                {
                    "name": "appGatewayIpConfig",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-A/gatewayIPConfigurations/appGatewayIpConfig",
                    "properties": {
                        "subnet": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/subnet-A"
                        }
                    },
                    "type": "Microsoft.Network/applicationGateways/gatewayIPConfigurations"
                }
            ],
            "sslCertificates": [],
            "authenticationCertificates": [],
            "frontendIPConfigurations": [
                {
                    "name": "appGatewayFrontendIP",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-A/frontendIPConfigurations/appGatewayFrontendIP",
                    "type": "Microsoft.Network/applicationGateways/frontendIPConfigurations",
                    "properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "publicIPAddress": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/publicIPAddresses/appgw-A-ip"
                        },
                        "httpListeners": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-A/httpListeners/appGatewayHttpListener"
                            }
                        ]
                    }
                }
            ],
            "frontendPorts": [
                {
                    "name": "appGatewayFrontendPort",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-A/frontendPorts/appGatewayFrontendPort",
                    "properties": {
                        "port": 80,
                        "httpListeners": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-A/httpListeners/appGatewayHttpListener"
                            }
                        ]
                    },
                    "type": "Microsoft.Network/applicationGateways/frontendPorts"
                }
            ],
            "backendAddressPools": [
                {
                    "name": "appGatewayBackendPool",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-A/backendAddressPools/appGatewayBackendPool",
                    "properties": {
                        "backendAddresses": [],
                        "requestRoutingRules": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-A/requestRoutingRules/rule1"
                            }
                        ]
                    },
                    "type": "Microsoft.Network/applicationGateways/backendAddressPools"
                }
            ],
            "backendHttpSettingsCollection": [
                {
                    "name": "appGatewayBackendHttpSettings",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-A/backendHttpSettingsCollection/appGatewayBackendHttpSettings",
                    "properties": {
                        "port": 80,
                        "protocol": "Http",
                        "cookieBasedAffinity": "Disabled",
                        "pickHostNameFromBackendAddress": false,
                        "requestTimeout": 30,
                        "requestRoutingRules": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-A/requestRoutingRules/rule1"
                            }
                        ]
                    },
                    "type": "Microsoft.Network/applicationGateways/backendHttpSettingsCollection"
                }
            ],
            "httpListeners": [
                {
                    "name": "appGatewayHttpListener",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-A/httpListeners/appGatewayHttpListener",
                    "properties": {
                        "frontendIPConfiguration": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-A/frontendIPConfigurations/appGatewayFrontendIP"
                        },
                        "frontendPort": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-A/frontendPorts/appGatewayFrontendPort"
                        },
                        "protocol": "Http",
                        "requireServerNameIndication": false,
                        "requestRoutingRules": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-A/requestRoutingRules/rule1"
                            }
                        ]
                    },
                    "type": "Microsoft.Network/applicationGateways/httpListeners"
                }
            ],
            "urlPathMaps": [],
            "requestRoutingRules": [
                {
                    "name": "rule1",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-A/requestRoutingRules/rule1",
                    "properties": {
                        "ruleType": "Basic",
                        "httpListener": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-A/httpListeners/appGatewayHttpListener"
                        },
                        "backendAddressPool": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-A/backendAddressPools/appGatewayBackendPool"
                        },
                        "backendHttpSettings": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-A/backendHttpSettingsCollection/appGatewayBackendHttpSettings"
                        }
                    },
                    "type": "Microsoft.Network/applicationGateways/requestRoutingRules"
                }
            ],
            "probes": [],
            "rewriteRuleSets": [],
            "redirectConfigurations": [],
            "webApplicationFirewallConfiguration": {
                "enabled": true,
                "firewallMode": "Prevention",
                "ruleSetType": "OWASP",
                "ruleSetVersion": "2.2.9",
                "disabledRuleGroups": [],
                "requestBodyCheck": true,
                "maxRequestBodySizeInKb": 128,
                "fileUploadLimitInMb": 100
            },
            "sslPolicy": {
                "minProtocolVersion": "TLSv1_2"
            },
            "enableHttp2": true
        },
        "ResourceGroupName": "test-rg",
        "Type": "Microsoft.Network/applicationGateways",
        "ResourceType": "Microsoft.Network/applicationGateways",
        "Tags": null,
        "SubscriptionId": "00000000-0000-0000-0000-000000000000"
    },
    {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-B",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-B",
        "Location": "region",
        "ResourceName": "appgw-B",
        "Name": "appgw-B",
        "Properties": {
            "sku": {
                "name": "Standard_Small",
                "tier": "Standard",
                "capacity": 1
            },
            "gatewayIPConfigurations": [
                {
                    "name": "appGatewayIpConfig",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-B/gatewayIPConfigurations/appGatewayIpConfig",
                    "properties": {
                        "subnet": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/subnet-A"
                        }
                    },
                    "type": "Microsoft.Network/applicationGateways/gatewayIPConfigurations"
                }
            ],
            "sslCertificates": [],
            "authenticationCertificates": [],
            "frontendIPConfigurations": [
                {
                    "name": "appGatewayFrontendIP",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-B/frontendIPConfigurations/appGatewayFrontendIP",
                    "type": "Microsoft.Network/applicationGateways/frontendIPConfigurations",
                    "properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "publicIPAddress": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/publicIPAddresses/appgw-B-ip"
                        },
                        "httpListeners": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-B/httpListeners/appGatewayHttpListener"
                            }
                        ]
                    }
                }
            ],
            "frontendPorts": [
                {
                    "name": "appGatewayFrontendPort",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-B/frontendPorts/appGatewayFrontendPort",
                    "properties": {
                        "port": 80,
                        "httpListeners": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-B/httpListeners/appGatewayHttpListener"
                            }
                        ]
                    },
                    "type": "Microsoft.Network/applicationGateways/frontendPorts"
                }
            ],
            "backendAddressPools": [
                {
                    "name": "appGatewayBackendPool",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-B/backendAddressPools/appGatewayBackendPool",
                    "properties": {
                        "backendAddresses": [],
                        "requestRoutingRules": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-B/requestRoutingRules/rule1"
                            }
                        ]
                    },
                    "type": "Microsoft.Network/applicationGateways/backendAddressPools"
                }
            ],
            "backendHttpSettingsCollection": [
                {
                    "name": "appGatewayBackendHttpSettings",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-B/backendHttpSettingsCollection/appGatewayBackendHttpSettings",
                    "properties": {
                        "port": 80,
                        "protocol": "Http",
                        "cookieBasedAffinity": "Disabled",
                        "pickHostNameFromBackendAddress": false,
                        "requestTimeout": 30,
                        "requestRoutingRules": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-B/requestRoutingRules/rule1"
                            }
                        ]
                    },
                    "type": "Microsoft.Network/applicationGateways/backendHttpSettingsCollection"
                }
            ],
            "httpListeners": [
                {
                    "name": "appGatewayHttpListener",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-B/httpListeners/appGatewayHttpListener",
                    "properties": {
                        "frontendIPConfiguration": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-B/frontendIPConfigurations/appGatewayFrontendIP"
                        },
                        "frontendPort": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-B/frontendPorts/appGatewayFrontendPort"
                        },
                        "protocol": "Http",
                        "requireServerNameIndication": false,
                        "requestRoutingRules": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-B/requestRoutingRules/rule1"
                            }
                        ]
                    },
                    "type": "Microsoft.Network/applicationGateways/httpListeners"
                }
            ],
            "urlPathMaps": [],
            "requestRoutingRules": [
                {
                    "name": "rule1",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-B/requestRoutingRules/rule1",
                    "properties": {
                        "ruleType": "Basic",
                        "httpListener": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-B/httpListeners/appGatewayHttpListener"
                        },
                        "backendAddressPool": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-B/backendAddressPools/appGatewayBackendPool"
                        },
                        "backendHttpSettings": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-B/backendHttpSettingsCollection/appGatewayBackendHttpSettings"
                        }
                    },
                    "type": "Microsoft.Network/applicationGateways/requestRoutingRules"
                }
            ],
            "probes": [],
            "rewriteRuleSets": [],
            "redirectConfigurations": [],
            "webApplicationFirewallConfiguration": {
                "enabled": false,
                "firewallMode": "Detection",
                "ruleSetType": "OWASP",
                "ruleSetVersion": "3.0",
                "disabledRuleGroups": [],
                "requestBodyCheck": true,
                "maxRequestBodySizeInKb": 128,
                "fileUploadLimitInMb": 100
            },
            "enableHttp2": true
        },
        "ResourceGroupName": "test-rg",
        "Type": "Microsoft.Network/applicationGateways",
        "ResourceType": "Microsoft.Network/applicationGateways",
        "Tags": null,
        "SubscriptionId": "00000000-0000-0000-0000-000000000000"
    },
    {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-C",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-C",
        "Location": "region",
        "ManagedBy": null,
        "ResourceName": "appgw-C",
        "Name": "appgw-C",
        "Properties": {
            "provisioningState": "Succeeded",
            "sku": {
                "name": "WAF_v2",
                "tier": "WAF_v2"
            },
            "operationalState": "Running",
            "gatewayIPConfigurations": [
                {
                    "name": "appGatewayIpConfig",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-C/gatewayIPConfigurations/appGatewayIpConfig",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "subnet": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/service-aks/providers/Microsoft.Network/virtualNetworks/service-int-eus-vnet/subnets/appgw"
                        }
                    },
                    "type": "Microsoft.Network/applicationGateways/gatewayIPConfigurations"
                }
            ],
            "sslCertificates": [],
            "trustedRootCertificates": [],
            "frontendIPConfigurations": [
                {
                    "name": "appGwPublicFrontendIp",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-C/frontendIPConfigurations/appGwPublicFrontendIp",
                    "type": "Microsoft.Network/applicationGateways/frontendIPConfigurations",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "privateIPAllocationMethod": "Dynamic",
                        "publicIPAddress": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/publicIPAddresses/app-gw-ip"
                        },
                        "httpListeners": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-C/httpListeners/http-listener"
                            }
                        ]
                    }
                }
            ],
            "frontendPorts": [
                {
                    "name": "port_80",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-C/frontendPorts/port_80",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "port": 80,
                        "httpListeners": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-C/httpListeners/http-listener"
                            }
                        ]
                    },
                    "type": "Microsoft.Network/applicationGateways/frontendPorts"
                }
            ],
            "backendAddressPools": [
                {
                    "name": "backend",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-C/backendAddressPools/backend",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "backendAddresses": [
                            {
                                "fqdn": "website-A.azurewebsites.net"
                            }
                        ],
                        "requestRoutingRules": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-C/requestRoutingRules/http-rule"
                            }
                        ]
                    },
                    "type": "Microsoft.Network/applicationGateways/backendAddressPools"
                }
            ],
            "backendHttpSettingsCollection": [
                {
                    "name": "http-settings",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-C/backendHttpSettingsCollection/http-settings",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "port": 80,
                        "protocol": "Http",
                        "cookieBasedAffinity": "Enabled",
                        "pickHostNameFromBackendAddress": true,
                        "affinityCookieName": "ApplicationGatewayAffinity",
                        "path": null,
                        "requestTimeout": 20,
                        "probe": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-C/probes/http-settings3fb94afb-03a0-4169-a8c7-64a8cc5e001b"
                        },
                        "requestRoutingRules": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-C/requestRoutingRules/http-rule"
                            }
                        ]
                    },
                    "type": "Microsoft.Network/applicationGateways/backendHttpSettingsCollection"
                }
            ],
            "httpListeners": [
                {
                    "name": "http-listener",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-C/httpListeners/http-listener",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "frontendIPConfiguration": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-C/frontendIPConfigurations/appGwPublicFrontendIp"
                        },
                        "frontendPort": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-C/frontendPorts/port_80"
                        },
                        "protocol": "Http",
                        "requireServerNameIndication": false,
                        "requestRoutingRules": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-C/requestRoutingRules/http-rule"
                            }
                        ]
                    },
                    "type": "Microsoft.Network/applicationGateways/httpListeners"
                }
            ],
            "urlPathMaps": [],
            "requestRoutingRules": [
                {
                    "name": "http-rule",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-C/requestRoutingRules/http-rule",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "ruleType": "Basic",
                        "httpListener": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-C/httpListeners/http-listener"
                        },
                        "backendAddressPool": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-C/backendAddressPools/backend"
                        },
                        "backendHttpSettings": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-C/backendHttpSettingsCollection/http-settings"
                        }
                    },
                    "type": "Microsoft.Network/applicationGateways/requestRoutingRules"
                }
            ],
            "probes": [
                {
                    "name": "http-probe",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-C/probes/http-probe",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "protocol": "Http",
                        "host": "localhost",
                        "path": "/",
                        "interval": 30,
                        "timeout": 30,
                        "unhealthyThreshold": 3,
                        "pickHostNameFromBackendHttpSettings": false,
                        "minServers": 0,
                        "match": {
                            "body": "",
                            "statusCodes": [
                                "200-399"
                            ]
                        }
                    },
                    "type": "Microsoft.Network/applicationGateways/probes"
                },
                {
                    "name": "http-settings3fb94afb-03a0-4169-a8c7-64a8cc5e001b",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-C/probes/http-settings3fb94afb-03a0-4169-a8c7-64a8cc5e001b",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "protocol": "Http",
                        "path": "/",
                        "interval": 30,
                        "timeout": 30,
                        "unhealthyThreshold": 3,
                        "pickHostNameFromBackendHttpSettings": true,
                        "minServers": 0,
                        "match": {
                            "body": "",
                            "statusCodes": [
                                "200-399"
                            ]
                        },
                        "backendHttpSettings": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationGateways/appgw-C/backendHttpSettingsCollection/http-settings"
                            }
                        ]
                    },
                    "type": "Microsoft.Network/applicationGateways/probes"
                }
            ],
            "rewriteRuleSets": [],
            "redirectConfigurations": [],
            "webApplicationFirewallConfiguration": {
                "enabled": true,
                "firewallMode": "Prevention",
                "ruleSetType": "OWASP",
                "ruleSetVersion": "3.0",
                "disabledRuleGroups": [
                    {
                        "ruleGroupName": "REQUEST-921-PROTOCOL-ATTACK"
                    }
                ],
                "exclusions": [],
                "requestBodyCheck": true,
                "maxRequestBodySizeInKb": 128,
                "fileUploadLimitInMb": 100
            },
            "enableHttp2": false,
            "autoscaleConfiguration": {
                "minCapacity": 2,
                "maxCapacity": 3
            }
        },
        "ResourceGroupName": "test-rg",
        "Type": "Microsoft.Network/applicationGateways",
        "ResourceType": "Microsoft.Network/applicationGateways",
        "Tags": null,
        "SubscriptionId": "00000000-0000-0000-0000-000000000000"
    },
    {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkInterfaces/nic-A",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkInterfaces/nic-A",
        "Location": "region",
        "ResourceName": "nic-A",
        "Name": "nic-A",
        "Properties": {
            "ipConfigurations": [
                {
                    "name": "ipconfig1",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkInterfaces/nic-A/ipConfigurations/ipconfig1",
                    "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "privateIPAddress": "10.0.0.4",
                        "privateIPAllocationMethod": "Static",
                        "publicIPAddress": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/publicIPAddresses/nic-A-pip"
                        },
                        "subnet": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/subnet-A"
                        },
                        "primary": true,
                        "privateIPAddressVersion": "IPv4"
                    }
                }
            ],
            "dnsSettings": {
                "dnsServers": [
                    "8.8.8.8"
                ],
                "appliedDnsServers": [
                    "8.8.8.8"
                ],
                "internalDomainNameSuffix": "example.nn.internal.cloudapp.net"
            },
            "macAddress": "00-00-00-00-00-00",
            "enableAcceleratedNetworking": false,
            "enableIPForwarding": false,
            "primary": true,
            "virtualMachine": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachines/vm-A"
            },
            "hostedWorkloads": [],
            "tapConfigurations": []
        },
        "ResourceGroupName": "test-rg",
        "Type": "Microsoft.Network/networkInterfaces",
        "ResourceType": "Microsoft.Network/networkInterfaces",
        "Tags": null,
        "SubscriptionId": "00000000-0000-0000-0000-000000000000"
    },
    {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkInterfaces/nic-B",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkInterfaces/nic-B",
        "Location": "region",
        "ResourceName": "nic-B",
        "Name": "nic-B",
        "Properties": {
            "ipConfigurations": [
                {
                    "name": "ipconfig1",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkInterfaces/nic-B/ipConfigurations/ipconfig1",
                    "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "privateIPAddress": "10.0.0.5",
                        "privateIPAllocationMethod": "Static",
                        "publicIPAddress": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/publicIPAddresses/nic-B-pip"
                        },
                        "subnet": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/subnet-A"
                        },
                        "primary": true,
                        "privateIPAddressVersion": "IPv4"
                    }
                }
            ],
            "dnsSettings": {
                "dnsServers": [
                    "8.8.8.8"
                ],
                "appliedDnsServers": [
                    "8.8.8.8"
                ],
                "internalDomainNameSuffix": "example.nn.internal.cloudapp.net"
            },
            "macAddress": "00-00-00-00-00-00",
            "enableAcceleratedNetworking": false,
            "enableIPForwarding": false,
            "primary": true,
            "hostedWorkloads": [],
            "tapConfigurations": []
        },
        "ResourceGroupName": "test-rg",
        "Type": "Microsoft.Network/networkInterfaces",
        "ResourceType": "Microsoft.Network/networkInterfaces",
        "Tags": null,
        "SubscriptionId": "00000000-0000-0000-0000-000000000000"
    },
    {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes",
        "Location": "region",
        "ManagedBy": null,
        "ResourceName": "kubernetes",
        "Name": "kubernetes",
        "Properties": {
            "provisioningState": "Succeeded",
            "resourceGuid": "00000000-0000-0000-0000-000000000000",
            "frontendIPConfigurations": [
                {
                    "name": "frontend-A",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/frontendIPConfigurations/frontend-A",
                    "type": "Microsoft.Network/loadBalancers/frontendIPConfigurations",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "privateIPAllocationMethod": "Dynamic",
                        "publicIPAddress": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/publicIPAddresses/kubernetes-ip-A"
                        },
                        "loadBalancingRules": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/loadBalancingRules/rule-TCP-80"
                            },
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/loadBalancingRules/rule-TCP-443"
                            }
                        ],
                        "privateIPAddressVersion": "IPv4"
                    }
                }
            ],
            "backendAddressPools": [
                {
                    "name": "kubernetes",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/backendAddressPools/kubernetes",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "backendIPConfigurations": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/2/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
                            },
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/0/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
                            },
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/1/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
                            }
                        ],
                        "loadBalancingRules": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/loadBalancingRules/rule-TCP-80"
                            },
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/loadBalancingRules/rule-TCP-443"
                            }
                        ]
                    },
                    "type": "Microsoft.Network/loadBalancers/backendAddressPools"
                }
            ],
            "loadBalancingRules": [
                {
                    "name": "rule-TCP-80",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/loadBalancingRules/rule-TCP-80",
                    "type": "Microsoft.Network/loadBalancers/loadBalancingRules",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "frontendIPConfiguration": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/frontendIPConfigurations/frontend-A"
                        },
                        "frontendPort": 80,
                        "backendPort": 80,
                        "enableFloatingIP": true,
                        "idleTimeoutInMinutes": 4,
                        "protocol": "Tcp",
                        "enableDestinationServiceEndpoint": false,
                        "enableTcpReset": false,
                        "allowBackendPortConflict": false,
                        "loadDistribution": "Default",
                        "backendAddressPool": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/backendAddressPools/kubernetes"
                        },
                        "probe": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/probes/probe-TCP-80"
                        }
                    }
                },
                {
                    "name": "rule-TCP-443",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/loadBalancingRules/rule-TCP-443",
                    "type": "Microsoft.Network/loadBalancers/loadBalancingRules",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "frontendIPConfiguration": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/frontendIPConfigurations/frontend-A"
                        },
                        "frontendPort": 443,
                        "backendPort": 443,
                        "enableFloatingIP": true,
                        "idleTimeoutInMinutes": 4,
                        "protocol": "Tcp",
                        "enableDestinationServiceEndpoint": false,
                        "enableTcpReset": false,
                        "allowBackendPortConflict": false,
                        "loadDistribution": "Default",
                        "backendAddressPool": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/backendAddressPools/kubernetes"
                        },
                        "probe": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/probes/probe-TCP-443"
                        }
                    }
                }
            ],
            "probes": [
                {
                    "name": "probe-TCP-80",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/probes/probe-TCP-80",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "protocol": "Http",
                        "port": 32042,
                        "requestPath": "/healthz",
                        "intervalInSeconds": 5,
                        "numberOfProbes": 2,
                        "loadBalancingRules": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/loadBalancingRules/rule-TCP-80"
                            }
                        ]
                    },
                    "type": "Microsoft.Network/loadBalancers/probes"
                },
                {
                    "name": "probe-TCP-443",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/probes/probe-TCP-443",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "protocol": "Http",
                        "port": 32042,
                        "requestPath": "/healthz",
                        "intervalInSeconds": 5,
                        "numberOfProbes": 2,
                        "loadBalancingRules": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/loadBalancingRules/rule-TCP-443"
                            }
                        ]
                    },
                    "type": "Microsoft.Network/loadBalancers/probes"
                }
            ],
            "inboundNatRules": [],
            "inboundNatPools": []
        },
        "ResourceGroupName": "test-rg",
        "Type": "Microsoft.Network/loadBalancers",
        "ResourceType": "Microsoft.Network/loadBalancers",
        "Sku": {
            "Name": "Basic",
            "Tier": "Regional",
            "Size": null,
            "Family": null,
            "Model": null,
            "Capacity": null
        },
        "Tags": {},
        "SubscriptionId": "00000000-0000-0000-0000-000000000000"
    },
    {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A",
        "Location": "region",
        "ManagedBy": null,
        "ResourceName": "lb-A",
        "Name": "lb-A",
        "Properties": {
            "provisioningState": "Succeeded",
            "resourceGuid": "00000000-0000-0000-0000-000000000000",
            "frontendIPConfigurations": [
                {
                    "name": "frontend-A",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/frontendIPConfigurations/frontend-A",
                    "type": "Microsoft.Network/loadBalancers/frontendIPConfigurations",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "privateIPAllocationMethod": "Dynamic",
                        "publicIPAddress": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/publicIPAddresses/lb-A-ip-A"
                        },
                        "loadBalancingRules": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/loadBalancingRules/rule-TCP-80"
                            },
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/loadBalancingRules/rule-TCP-443"
                            }
                        ],
                        "privateIPAddressVersion": "IPv4"
                    }
                }
            ],
            "backendAddressPools": [
                {
                    "name": "lb-A",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/backendAddressPools/lb-A",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "backendIPConfigurations": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/2/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
                            },
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/0/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
                            },
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/1/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
                            }
                        ],
                        "loadBalancingRules": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/loadBalancingRules/rule-TCP-80"
                            },
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/loadBalancingRules/rule-TCP-443"
                            }
                        ]
                    },
                    "type": "Microsoft.Network/loadBalancers/backendAddressPools"
                }
            ],
            "loadBalancingRules": [
                {
                    "name": "rule-TCP-80",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/loadBalancingRules/rule-TCP-80",
                    "type": "Microsoft.Network/loadBalancers/loadBalancingRules",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "frontendIPConfiguration": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/frontendIPConfigurations/frontend-A"
                        },
                        "frontendPort": 80,
                        "backendPort": 80,
                        "enableFloatingIP": true,
                        "idleTimeoutInMinutes": 4,
                        "protocol": "Tcp",
                        "enableDestinationServiceEndpoint": false,
                        "enableTcpReset": false,
                        "allowBackendPortConflict": false,
                        "loadDistribution": "Default",
                        "backendAddressPool": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/backendAddressPools/lb-A"
                        },
                        "probe": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/probes/probe-TCP-80"
                        }
                    }
                },
                {
                    "name": "rule-TCP-443",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/loadBalancingRules/rule-TCP-443",
                    "type": "Microsoft.Network/loadBalancers/loadBalancingRules",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "frontendIPConfiguration": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/frontendIPConfigurations/frontend-A"
                        },
                        "frontendPort": 443,
                        "backendPort": 443,
                        "enableFloatingIP": true,
                        "idleTimeoutInMinutes": 4,
                        "protocol": "Tcp",
                        "enableDestinationServiceEndpoint": false,
                        "enableTcpReset": false,
                        "allowBackendPortConflict": false,
                        "loadDistribution": "Default",
                        "backendAddressPool": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/backendAddressPools/lb-A"
                        },
                        "probe": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/probes/probe-TCP-443"
                        }
                    }
                }
            ],
            "probes": [
                {
                    "name": "probe-TCP-80",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/probes/probe-TCP-80",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "protocol": "Http",
                        "port": 80,
                        "requestPath": "/healthz",
                        "intervalInSeconds": 5,
                        "numberOfProbes": 2,
                        "loadBalancingRules": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/loadBalancingRules/rule-TCP-80"
                            }
                        ]
                    },
                    "type": "Microsoft.Network/loadBalancers/probes"
                },
                {
                    "name": "probe-TCP-443",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/probes/probe-TCP-443",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "protocol": "Http",
                        "port": 80,
                        "requestPath": "/healthz",
                        "intervalInSeconds": 5,
                        "numberOfProbes": 2,
                        "loadBalancingRules": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/loadBalancingRules/rule-TCP-443"
                            }
                        ]
                    },
                    "type": "Microsoft.Network/loadBalancers/probes"
                }
            ],
            "inboundNatRules": [],
            "inboundNatPools": []
        },
        "ResourceGroupName": "test-rg",
        "Type": "Microsoft.Network/loadBalancers",
        "ResourceType": "Microsoft.Network/loadBalancers",
        "Sku": {
            "Name": "Basic",
            "Tier": "Regional",
            "Size": null,
            "Family": null,
            "Model": null,
            "Capacity": null
        },
        "Tags": null,
        "SubscriptionId": "00000000-0000-0000-0000-000000000000"
    },
    {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B",
        "Location": "region",
        "ManagedBy": null,
        "ResourceName": "lb-B",
        "Name": "lb-B",
        "Properties": {
            "provisioningState": "Succeeded",
            "resourceGuid": "00000000-0000-0000-0000-000000000000",
            "frontendIPConfigurations": [
                {
                    "name": "frontend-A",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/frontendIPConfigurations/frontend-A",
                    "type": "Microsoft.Network/loadBalancers/frontendIPConfigurations",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "privateIPAllocationMethod": "Dynamic",
                        "publicIPAddress": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/publicIPAddresses/lb-B-ip-A"
                        },
                        "loadBalancingRules": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/loadBalancingRules/rule-TCP-80"
                            },
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/loadBalancingRules/rule-TCP-443"
                            }
                        ],
                        "privateIPAddressVersion": "IPv4"
                    }
                }
            ],
            "backendAddressPools": [
                {
                    "name": "lb-B",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/backendAddressPools/lb-B",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "backendIPConfigurations": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/2/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
                            },
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/0/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
                            },
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/1/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
                            }
                        ],
                        "loadBalancingRules": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/loadBalancingRules/rule-TCP-80"
                            },
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/loadBalancingRules/rule-TCP-443"
                            }
                        ]
                    },
                    "type": "Microsoft.Network/loadBalancers/backendAddressPools"
                }
            ],
            "loadBalancingRules": [
                {
                    "name": "rule-TCP-80",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/loadBalancingRules/rule-TCP-80",
                    "type": "Microsoft.Network/loadBalancers/loadBalancingRules",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "frontendIPConfiguration": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/frontendIPConfigurations/frontend-A"
                        },
                        "frontendPort": 80,
                        "backendPort": 80,
                        "enableFloatingIP": true,
                        "idleTimeoutInMinutes": 4,
                        "protocol": "Tcp",
                        "enableDestinationServiceEndpoint": false,
                        "enableTcpReset": false,
                        "allowBackendPortConflict": false,
                        "loadDistribution": "Default",
                        "backendAddressPool": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/backendAddressPools/lb-B"
                        },
                        "probe": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/probes/probe-TCP-80"
                        }
                    }
                },
                {
                    "name": "rule-TCP-443",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/loadBalancingRules/rule-TCP-443",
                    "type": "Microsoft.Network/loadBalancers/loadBalancingRules",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "frontendIPConfiguration": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/frontendIPConfigurations/frontend-A"
                        },
                        "frontendPort": 443,
                        "backendPort": 443,
                        "enableFloatingIP": true,
                        "idleTimeoutInMinutes": 4,
                        "protocol": "Tcp",
                        "enableDestinationServiceEndpoint": false,
                        "enableTcpReset": false,
                        "allowBackendPortConflict": false,
                        "loadDistribution": "Default",
                        "backendAddressPool": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/backendAddressPools/lb-B"
                        },
                        "probe": {
                            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/probes/probe-TCP-443"
                        }
                    }
                }
            ],
            "probes": [
                {
                    "name": "probe-TCP-80",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/probes/probe-TCP-80",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "protocol": "Tcp",
                        "port": 80,
                        "intervalInSeconds": 5,
                        "numberOfProbes": 2,
                        "loadBalancingRules": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/loadBalancingRules/rule-TCP-80"
                            }
                        ]
                    },
                    "type": "Microsoft.Network/loadBalancers/probes"
                },
                {
                    "name": "probe-TCP-443",
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/probes/probe-TCP-443",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "protocol": "Tcp",
                        "port": 443,
                        "intervalInSeconds": 5,
                        "numberOfProbes": 2,
                        "loadBalancingRules": [
                            {
                                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/loadBalancingRules/rule-TCP-443"
                            }
                        ]
                    },
                    "type": "Microsoft.Network/loadBalancers/probes"
                }
            ],
            "inboundNatRules": [],
            "inboundNatPools": []
        },
        "ResourceGroupName": "test-rg",
        "Type": "Microsoft.Network/loadBalancers",
        "ResourceType": "Microsoft.Network/loadBalancers",
        "Sku": {
            "Name": "Basic",
            "Tier": "Regional",
            "Size": null,
            "Family": null,
            "Model": null,
            "Capacity": null
        },
        "Tags": null,
        "SubscriptionId": "00000000-0000-0000-0000-000000000000"
    }
]
