[
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A",
    "Location": "region",
    "ResourceName": "route-A",
    "Name": "route-A",
    "Properties": {
      "disableBgpRoutePropagation": false,
      "routes": [],
      "subnets": [
        {
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/subnet-A"
        },
        {
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/subnet-B"
        }
      ]
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/routeTables",
    "ResourceType": "Microsoft.Network/routeTables",
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000"
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A",
    "Location": "region",
    "ResourceName": "vnet-A",
    "Name": "vnet-A",
    "Properties": {
      "addressSpace": {
        "addressPrefixes": [
          "10.1.0.0/24"
        ]
      },
      "dhcpOptions": {
        "dnsServers": [
          "10.1.0.36",
          "168.63.129.16"
        ]
      },
      "subnets": [
        {
          "name": "GatewaySubnet",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/GatewaySubnet",
          "properties": {
            "addressPrefix": "10.1.0.0/27",
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        },
        {
          "name": "subnet-A",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/subnet-A",
          "properties": {
            "addressPrefix": "10.1.0.32/28",
            "networkSecurityGroup": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A"
            },
            "routeTable": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
            },
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        },
        {
          "name": "subnet-B",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/subnet-B",
          "properties": {
            "addressPrefix": "10.1.0.48/28",
            "networkSecurityGroup": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A"
            },
            "routeTable": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
            },
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        },
        {
          "name": "subnet-C",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/subnet-C",
          "properties": {
            "addressPrefix": "10.1.0.64/28",
            "networkSecurityGroup": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A"
            },
            "routeTable": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
            },
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        },
        {
          "name": "subnet-D",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/subnet-D",
          "properties": {
            "addressPrefix": "10.1.0.80/28",
            "networkSecurityGroup": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A"
            },
            "routeTable": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
            },
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        },
        {
          "name": "AzureFirewallSubnet",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/AzureFirewallSubnet",
          "properties": {
            "addressPrefix": "10.1.0.128/26",
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        },
        {
          "name": "AzureFirewallSubnet",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/AzureFirewallSubnet",
          "properties": {
            "addressPrefix": "10.1.0.128/26",
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        },
        {
          "name": "AzureFirewallManagementSubnet",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/AzureFirewallManagementSubnet",
          "properties": {
            "addressPrefix": "10.1.0.192/26",
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        }
      ],
      "virtualNetworkPeerings": [
        {
          "name": "peer-B",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/virtualNetworkPeerings/peer-B",
          "properties": {
            "peeringState": "Connected",
            "remoteVirtualNetwork": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-B"
            },
            "allowVirtualNetworkAccess": true,
            "allowForwardedTraffic": false,
            "allowGatewayTransit": false,
            "useRemoteGateways": false,
            "doNotVerifyRemoteGateways": false,
            "remoteAddressSpace": {
              "addressPrefixes": [
                "10.2.0.0/24"
              ]
            },
            "routeServiceVips": {}
          },
          "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
        }
      ],
      "enableDdosProtection": false,
      "enableVmProtection": false
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/virtualNetworks",
    "ResourceType": "Microsoft.Network/virtualNetworks",
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000"
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-B",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-B",
    "Location": "region",
    "ResourceName": "vnet-B",
    "Name": "vnet-B",
    "Properties": {
      "addressSpace": {
        "addressPrefixes": [
          "10.2.0.0/24"
        ]
      },
      "dhcpOptions": {
        "dnsServers": [
          "10.99.0.36"
        ]
      },
      "subnets": [
        {
          "name": "GatewaySubnet",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-B/subnets/GatewaySubnet",
          "properties": {
            "addressPrefix": "10.2.0.0/27",
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        },
        {
          "name": "AzureBastionSubnet",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-B/subnets/AzureBastionSubnet",
          "properties": {
            "addressPrefix": "10.2.0.0/26",
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        },
        {
          "name": "subnet-A",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-B/subnets/subnet-A",
          "properties": {
            "addressPrefix": "10.2.0.32/28",
            "networkSecurityGroup": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A"
            },
            "routeTable": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
            },
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        },
        {
          "name": "subnet-B",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-B/subnets/subnet-B",
          "properties": {
            "addressPrefix": "10.2.0.48/28",
            "routeTable": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
            },
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        },
        {
          "name": "subnet-C",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-B/subnets/subnet-C",
          "properties": {
            "addressPrefix": "10.2.0.64/28",
            "networkSecurityGroup": null,
            "routeTable": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
            },
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        },
        {
          "name": "subnet-D",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-B/subnets/subnet-D",
          "properties": {
            "addressPrefix": "10.2.0.80/28",
            "networkSecurityGroup": {},
            "routeTable": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
            },
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        }
      ],
      "virtualNetworkPeerings": [
        {
          "name": "peer-A",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-B/virtualNetworkPeerings/peer-A",
          "properties": {
            "peeringState": "Connected",
            "remoteVirtualNetwork": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A"
            },
            "allowVirtualNetworkAccess": true,
            "allowForwardedTraffic": false,
            "allowGatewayTransit": false,
            "useRemoteGateways": false,
            "doNotVerifyRemoteGateways": false,
            "remoteAddressSpace": {
              "addressPrefixes": [
                "10.1.0.0/24"
              ]
            },
            "routeServiceVips": {}
          },
          "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
        }
      ],
      "enableDdosProtection": false,
      "enableVmProtection": false
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/virtualNetworks",
    "ResourceType": "Microsoft.Network/virtualNetworks",
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000"
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-C",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-C",
    "Location": "region",
    "ResourceName": "vnet-C",
    "Name": "vnet-C",
    "Properties": {
      "addressSpace": {
        "addressPrefixes": [
          "10.3.0.0/24"
        ]
      },
      "dhcpOptions": {
        "dnsServers": []
      },
      "subnets": [
        {
          "name": "GatewaySubnet",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-C/subnets/GatewaySubnet",
          "properties": {
            "addressPrefix": "10.3.0.0/27",
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        },
        {
          "name": "subnet-A",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-C/subnets/subnet-A",
          "properties": {
            "addressPrefix": "10.3.0.32/28",
            "networkSecurityGroup": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A"
            },
            "routeTable": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
            },
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        },
        {
          "name": "subnet-B",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-C/subnets/subnet-B",
          "properties": {
            "addressPrefix": "10.3.0.48/28",
            "routeTable": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
            },
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        },
        {
          "name": "subnet-C",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-C/subnets/subnet-C",
          "properties": {
            "addressPrefix": "10.3.0.64/28",
            "networkSecurityGroup": null,
            "routeTable": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
            },
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        },
        {
          "name": "subnet-D",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-C/subnets/subnet-D",
          "properties": {
            "addressPrefix": "10.3.0.80/28",
            "networkSecurityGroup": {},
            "routeTable": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
            },
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        }
      ],
      "virtualNetworkPeerings": [
        {
          "name": "peer-A",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-C/virtualNetworkPeerings/peer-A",
          "properties": {
            "peeringState": "Connected",
            "remoteVirtualNetwork": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A"
            },
            "allowVirtualNetworkAccess": true,
            "allowForwardedTraffic": false,
            "allowGatewayTransit": false,
            "useRemoteGateways": false,
            "doNotVerifyRemoteGateways": false,
            "remoteAddressSpace": {
              "addressPrefixes": [
                "10.1.0.0/24"
              ]
            },
            "routeServiceVips": {}
          },
          "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
        },
        {
          "name": "peer-D",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-C/virtualNetworkPeerings/peer-D",
          "properties": {
            "peeringState": "Disconnected",
            "remoteVirtualNetwork": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-D"
            },
            "allowVirtualNetworkAccess": true,
            "allowForwardedTraffic": false,
            "allowGatewayTransit": false,
            "useRemoteGateways": false,
            "doNotVerifyRemoteGateways": false,
            "remoteAddressSpace": {
              "addressPrefixes": [
                "10.4.0.0/24"
              ]
            },
            "routeServiceVips": {}
          },
          "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
        }
      ],
      "enableDdosProtection": false,
      "enableVmProtection": false
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/virtualNetworks",
    "ResourceType": "Microsoft.Network/virtualNetworks",
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000"
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-D",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-D",
    "Location": "region",
    "ResourceName": "vnet-D",
    "Name": "vnet-D",
    "Properties": {
      "addressSpace": {
        "addressPrefixes": [
          "10.4.0.0/24"
        ]
      },
      "dhcpOptions": {
        "dnsServers": [
          "10.99.0.36",
          "10.99.0.37"
        ]
      },
      "subnets": [
        {
          "name": "subnet-A",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-D/subnets/subnet-A",
          "properties": {
            "addressPrefix": "10.4.0.32/28",
            "networkSecurityGroup": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A"
            },
            "routeTable": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
            },
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        },
        {
          "name": "subnet-B",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-D/subnets/subnet-B",
          "properties": {
            "addressPrefix": "10.4.0.48/28",
            "routeTable": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
            },
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        },
        {
          "name": "subnet-C",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-D/subnets/subnet-C",
          "properties": {
            "addressPrefix": "10.4.0.64/28",
            "networkSecurityGroup": null,
            "routeTable": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
            },
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        },
        {
          "name": "subnet-D",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-D/subnets/subnet-D",
          "properties": {
            "addressPrefix": "10.4.0.80/28",
            "networkSecurityGroup": {},
            "routeTable": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/routeTables/route-A"
            },
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        }
      ],
      "virtualNetworkPeerings": [],
      "enableDdosProtection": false,
      "enableVmProtection": false
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/virtualNetworks",
    "ResourceType": "Microsoft.Network/virtualNetworks",
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000",
    "resources": [
      {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-test/providers/Microsoft.Network/virtualNetworks/vnet-D/subnets/GatewaySubnet",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-test/providers/Microsoft.Network/virtualNetworks/vnet-D/subnets/GatewaySubnet",
        "Identity": null,
        "Kind": null,
        "Location": null,
        "ManagedBy": null,
        "ResourceName": "GatewaySubnet",
        "Name": "GatewaySubnet",
        "ExtensionResourceName": null,
        "ParentResource": "virtualNetworks/vnet-D",
        "Plan": null,
        "Properties": {
          "provisioningState": "Succeeded",
          "addressPrefix": "10.4.0.0/27",
          "networkSecurityGroup": {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-test/providers/Microsoft.Network/networkSecurityGroups/nsg-GatewaySubnet"
          },
          "routeTable": {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-test/providers/Microsoft.Network/routeTables/route-GatewaySubnet"
          },
          "ipConfigurations": [],
          "serviceEndpoints": [],
          "delegations": [],
          "privateEndpointNetworkPolicies": "Enabled",
          "privateLinkServiceNetworkPolicies": "Enabled"
        },
        "ResourceGroupName": "rg-test",
        "Type": "Microsoft.Network/virtualNetworks/subnets",
        "ResourceType": "Microsoft.Network/virtualNetworks/subnets",
        "ExtensionResourceType": null,
        "Sku": null,
        "SubscriptionId": null
      },
      {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-test/providers/Microsoft.Network/virtualNetworks/vnet-D/subnets/AzureBastionSubnet",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-test/providers/Microsoft.Network/virtualNetworks/vnet-D/subnets/AzureBastionSubnet",
        "Identity": null,
        "Kind": null,
        "Location": null,
        "ManagedBy": null,
        "ResourceName": "AzureBastionSubnet",
        "Name": "AzureBastionSubnet",
        "ExtensionResourceName": null,
        "ParentResource": "virtualNetworks/vnet-D",
        "Plan": null,
        "Properties": {
          "provisioningState": "Succeeded",
          "addressPrefix": "10.4.0.0/26",
          "networkSecurityGroup": {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-test/providers/Microsoft.Network/networkSecurityGroups/nsg-AzureBastionSubnet"
          },
          "routeTable": {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-test/providers/Microsoft.Network/routeTables/route-AzureBastionSubnet"
          },
          "ipConfigurations": [],
          "serviceEndpoints": [],
          "delegations": [],
          "privateEndpointNetworkPolicies": "Enabled",
          "privateLinkServiceNetworkPolicies": "Enabled"
        },
        "ResourceGroupName": "rg-test",
        "Type": "Microsoft.Network/virtualNetworks/subnets",
        "ResourceType": "Microsoft.Network/virtualNetworks/subnets",
        "ExtensionResourceType": null,
        "Sku": null,
        "SubscriptionId": null
      }
    ]
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-E",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-E",
    "Location": "region",
    "ResourceName": "vnet-E",
    "Name": "vnet-E",
    "Properties": {
      "addressSpace": {
        "addressPrefixes": [
          "10.5.0.0/24"
        ]
      },
      "dhcpOptions": {
        "dnsServers": [
          "10.99.0.36",
          "10.99.0.37"
        ]
      },
      "subnets": [],
      "virtualNetworkPeerings": [],
      "enableDdosProtection": false,
      "enableVmProtection": false
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/virtualNetworks",
    "ResourceType": "Microsoft.Network/virtualNetworks",
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000",
    "resources": [
      {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-test/providers/Microsoft.Network/virtualNetworks/vnet-E/subnets/AzureBastionSubnet",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-test/providers/Microsoft.Network/virtualNetworks/vnet-E/subnets/AzureBastionSubnet",
        "Identity": null,
        "Kind": null,
        "Location": null,
        "ManagedBy": null,
        "ResourceName": "AzureBastionSubnet",
        "Name": "AzureBastionSubnet",
        "ExtensionResourceName": null,
        "ParentResource": "virtualNetworks/vnet-E",
        "Plan": null,
        "Properties": {
          "provisioningState": "Succeeded",
          "addressPrefix": "10.5.0.0/26",
          "networkSecurityGroup": {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-test/providers/Microsoft.Network/networkSecurityGroups/nsg-AzureBastionSubnet"
          },
          "routeTable": {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-test/providers/Microsoft.Network/routeTables/route-AzureBastionSubnet"
          },
          "ipConfigurations": [],
          "serviceEndpoints": [],
          "delegations": [],
          "privateEndpointNetworkPolicies": "Enabled",
          "privateLinkServiceNetworkPolicies": "Enabled"
        },
        "ResourceGroupName": "rg-test",
        "Type": "Microsoft.Network/virtualNetworks/subnets",
        "ResourceType": "Microsoft.Network/virtualNetworks/subnets",
        "ExtensionResourceType": null,
        "Sku": null,
        "SubscriptionId": null
      },
      {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-test/providers/Microsoft.Network/virtualNetworks/vnet-E/subnets/GatewaySubnet",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-test/providers/Microsoft.Network/virtualNetworks/vnet-E/subnets/GatewaySubnet",
        "Identity": null,
        "Kind": null,
        "Location": null,
        "ManagedBy": null,
        "ResourceName": "GatewaySubnet",
        "Name": "GatewaySubnet",
        "ExtensionResourceName": null,
        "ParentResource": "virtualNetworks/vnet-E",
        "Plan": null,
        "Properties": {
          "provisioningState": "Succeeded",
          "addressPrefix": "10.5.0.0/27",
          "networkSecurityGroup": {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-test/providers/Microsoft.Network/networkSecurityGroups/nsg-GatewaySubnet"
          },
          "routeTable": {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-test/providers/Microsoft.Network/routeTables/route-GatewaySubnet"
          },
          "ipConfigurations": [],
          "serviceEndpoints": [],
          "delegations": [],
          "privateEndpointNetworkPolicies": "Enabled",
          "privateLinkServiceNetworkPolicies": "Enabled"
        },
        "ResourceGroupName": "rg-test",
        "Type": "Microsoft.Network/virtualNetworks/subnets",
        "ResourceType": "Microsoft.Network/virtualNetworks/subnets",
        "ExtensionResourceType": null,
        "Sku": null,
        "SubscriptionId": null
      },
      {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-test/providers/Microsoft.Network/virtualNetworks/vnet-E/subnets/AzureFirewallSubnet",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-test/providers/Microsoft.Network/virtualNetworks/vnet-E/subnets/AzureFirewallSubnet",
        "Identity": null,
        "Kind": null,
        "Location": null,
        "ManagedBy": null,
        "ResourceName": "AzureFirewallSubnet",
        "Name": "AzureFirewallSubnet",
        "ExtensionResourceName": null,
        "ParentResource": "virtualNetworks/vnet-E",
        "Plan": null,
        "Properties": {
          "provisioningState": "Succeeded",
          "addressPrefix": "10.5.0.0/27",
          "ipConfigurations": [],
          "serviceEndpoints": [],
          "delegations": [],
          "privateEndpointNetworkPolicies": "Enabled",
          "privateLinkServiceNetworkPolicies": "Enabled"
        },
        "ResourceGroupName": "rg-test",
        "Type": "Microsoft.Network/virtualNetworks/subnets",
        "ResourceType": "Microsoft.Network/virtualNetworks/subnets",
        "ExtensionResourceType": null,
        "Sku": null,
        "SubscriptionId": null
      }
    ]
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-F",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-F",
    "Location": "region",
    "ResourceName": "vnet-F",
    "Name": "vnet-F",
    "Properties": {
      "addressSpace": {
        "addressPrefixes": [
          "10.5.0.0/24"
        ]
      },
      "dhcpOptions": {
        "dnsServers": [
          "10.99.0.36",
          "10.99.0.37"
        ]
      },
      "virtualNetworkPeerings": [],
      "enableDdosProtection": false,
      "enableVmProtection": false
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/virtualNetworks",
    "ResourceType": "Microsoft.Network/virtualNetworks",
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000"
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-G",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-G",
    "Location": "region",
    "ResourceName": "vnet-G",
    "Name": "vnet-G",
    "Properties": {
      "addressSpace": {
        "addressPrefixes": [
          "10.6.0.0/24"
        ]
      },
      "dhcpOptions": {
        "dnsServers": [
          "10.99.0.36",
          "10.99.0.37"
        ]
      },
      "virtualNetworkPeerings": [],
      "enableDdosProtection": false,
      "enableVmProtection": false,
      "subnets": [
        {
          "name": "subnet-ZZ",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-G/subnets/subnet-ZZ",
          "properties": {
            "addressPrefix": "10.6.0.32/28",
            "serviceEndpoints": [],
            "delegations": []
          },
          "type": "Microsoft.Network/virtualNetworks/subnets"
        }
      ]
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/virtualNetworks",
    "ResourceType": "Microsoft.Network/virtualNetworks",
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000"
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A",
    "Location": "region",
    "ResourceName": "nsg-A",
    "Name": "nsg-A",
    "Properties": {
      "securityRules": [
        {
          "name": "allow-rdp-inbound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A/securityRules/allow-rdp-inbound",
          "type": "Microsoft.Network/networkSecurityGroups/securityRules",
          "properties": {
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "destinationPortRange": "3389",
            "destinationAddressPrefix": "VirtualNetwork",
            "access": "Allow",
            "priority": 400,
            "direction": "Inbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": [],
            "sourceApplicationSecurityGroups": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/applicationSecurityGroups/asg-A"
              }
            ]
          }
        },
        {
          "name": "allow-dc-to-dc-inbound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A/securityRules/allow-dc-to-dc-inbound",
          "type": "Microsoft.Network/networkSecurityGroups/securityRules",
          "properties": {
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "destinationAddressPrefix": "VirtualNetwork",
            "access": "Allow",
            "priority": 300,
            "direction": "Inbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [
              "10.1.0.32/28",
              "10.2.0.32/28",
              "10.3.0.32/28"
            ],
            "destinationAddressPrefixes": []
          }
        },
        {
          "name": "allow-dc-to-dc-outbound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A/securityRules/allow-dc-to-dc-outbound",
          "type": "Microsoft.Network/networkSecurityGroups/securityRules",
          "properties": {
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "sourceAddressPrefix": "VirtualNetwork",
            "access": "Allow",
            "priority": 300,
            "direction": "Outbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": [
              "10.1.0.32/28",
              "10.2.0.32/28",
              "10.3.0.32/28"
            ]
          }
        },
        {
          "name": "deny-rdp-double-hop-outbound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A/securityRules/deny-rdp-double-hop-outbound",
          "type": "Microsoft.Network/networkSecurityGroups/securityRules",
          "properties": {
            "description": "Prevent outbound RDP.",
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "destinationPortRange": "3389",
            "sourceAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefix": "*",
            "access": "Deny",
            "priority": 200,
            "direction": "Outbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        }
      ],
      "defaultSecurityRules": [
        {
          "name": "AllowVnetInBound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A/defaultSecurityRules/AllowVnetInBound",
          "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
          "properties": {
            "description": "Allow inbound traffic from all VMs in VNET",
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "sourceAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefix": "VirtualNetwork",
            "access": "Allow",
            "priority": 65000,
            "direction": "Inbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        },
        {
          "name": "AllowAzureLoadBalancerInBound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A/defaultSecurityRules/AllowAzureLoadBalancerInBound",
          "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
          "properties": {
            "description": "Allow inbound traffic from azure load balancer",
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "sourceAddressPrefix": "AzureLoadBalancer",
            "destinationAddressPrefix": "*",
            "access": "Allow",
            "priority": 65001,
            "direction": "Inbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        },
        {
          "name": "DenyAllInBound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A/defaultSecurityRules/DenyAllInBound",
          "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
          "properties": {
            "description": "Deny all inbound traffic",
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "sourceAddressPrefix": "*",
            "destinationAddressPrefix": "*",
            "access": "Deny",
            "priority": 65500,
            "direction": "Inbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        },
        {
          "name": "AllowVnetOutBound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A/defaultSecurityRules/AllowVnetOutBound",
          "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
          "properties": {
            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "sourceAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefix": "VirtualNetwork",
            "access": "Allow",
            "priority": 65000,
            "direction": "Outbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        },
        {
          "name": "AllowInternetOutBound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A/defaultSecurityRules/AllowInternetOutBound",
          "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
          "properties": {
            "description": "Allow outbound traffic from all VMs to Internet",
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "sourceAddressPrefix": "*",
            "destinationAddressPrefix": "Internet",
            "access": "Allow",
            "priority": 65001,
            "direction": "Outbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        },
        {
          "name": "DenyAllOutBound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-A/defaultSecurityRules/DenyAllOutBound",
          "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
          "properties": {
            "description": "Deny all outbound traffic",
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "sourceAddressPrefix": "*",
            "destinationAddressPrefix": "*",
            "access": "Deny",
            "priority": 65500,
            "direction": "Outbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        }
      ],
      "subnets": [
        {
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/subnet-A"
        }
      ]
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/networkSecurityGroups",
    "ResourceType": "Microsoft.Network/networkSecurityGroups",
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000"
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B",
    "Location": "region",
    "ResourceName": "nsg-B",
    "Name": "nsg-B",
    "Properties": {
      "securityRules": [
        {
          "name": "allow-rdp-inbound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B/securityRules/allow-rdp-inbound",
          "type": "Microsoft.Network/networkSecurityGroups/securityRules",
          "properties": {
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "destinationPortRange": "3389",
            "destinationAddressPrefix": "VirtualNetwork",
            "access": "Allow",
            "priority": 400,
            "direction": "Inbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefix": "*",
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        },
        {
          "name": "allow-dc-to-dc-inbound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B/securityRules/allow-dc-to-dc-inbound",
          "type": "Microsoft.Network/networkSecurityGroups/securityRules",
          "properties": {
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "destinationAddressPrefix": "VirtualNetwork",
            "access": "Allow",
            "priority": 300,
            "direction": "Inbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [
              "10.1.0.32/28",
              "10.2.0.32/28",
              "10.3.0.32/28"
            ],
            "destinationAddressPrefixes": []
          }
        },
        {
          "name": "allow-dc-to-dc-outbound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B/securityRules/allow-dc-to-dc-outbound",
          "type": "Microsoft.Network/networkSecurityGroups/securityRules",
          "properties": {
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "sourceAddressPrefix": "VirtualNetwork",
            "access": "Allow",
            "priority": 300,
            "direction": "Outbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": [
              "10.1.0.32/28",
              "10.2.0.32/28",
              "10.3.0.32/28"
            ]
          }
        },
        {
          "name": "deny-rdp-double-hop-outbound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B/securityRules/deny-rdp-double-hop-outbound",
          "type": "Microsoft.Network/networkSecurityGroups/securityRules",
          "properties": {
            "description": "Prevent outbound RDP.",
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "sourceAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefix": "*",
            "access": "Deny",
            "priority": 200,
            "direction": "Outbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [
              "3389"
            ],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        }
      ],
      "defaultSecurityRules": [
        {
          "name": "AllowVnetInBound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B/defaultSecurityRules/AllowVnetInBound",
          "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
          "properties": {
            "description": "Allow inbound traffic from all VMs in VNET",
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "sourceAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefix": "VirtualNetwork",
            "access": "Allow",
            "priority": 65000,
            "direction": "Inbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        },
        {
          "name": "AllowAzureLoadBalancerInBound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B/defaultSecurityRules/AllowAzureLoadBalancerInBound",
          "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
          "properties": {
            "description": "Allow inbound traffic from azure load balancer",
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "sourceAddressPrefix": "AzureLoadBalancer",
            "destinationAddressPrefix": "*",
            "access": "Allow",
            "priority": 65001,
            "direction": "Inbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        },
        {
          "name": "DenyAllInBound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B/defaultSecurityRules/DenyAllInBound",
          "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
          "properties": {
            "description": "Deny all inbound traffic",
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "sourceAddressPrefix": "*",
            "destinationAddressPrefix": "*",
            "access": "Deny",
            "priority": 65500,
            "direction": "Inbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        },
        {
          "name": "AllowVnetOutBound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B/defaultSecurityRules/AllowVnetOutBound",
          "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
          "properties": {
            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "sourceAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefix": "VirtualNetwork",
            "access": "Allow",
            "priority": 65000,
            "direction": "Outbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        },
        {
          "name": "AllowInternetOutBound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B/defaultSecurityRules/AllowInternetOutBound",
          "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
          "properties": {
            "description": "Allow outbound traffic from all VMs to Internet",
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "sourceAddressPrefix": "*",
            "destinationAddressPrefix": "Internet",
            "access": "Allow",
            "priority": 65001,
            "direction": "Outbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        },
        {
          "name": "DenyAllOutBound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-B/defaultSecurityRules/DenyAllOutBound",
          "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
          "properties": {
            "description": "Deny all outbound traffic",
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "sourceAddressPrefix": "*",
            "destinationAddressPrefix": "*",
            "access": "Deny",
            "priority": 65500,
            "direction": "Outbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        }
      ],
      "subnets": []
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/networkSecurityGroups",
    "ResourceType": "Microsoft.Network/networkSecurityGroups",
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000"
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-C",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-C",
    "Location": "region",
    "ResourceName": "nsg-C",
    "Name": "nsg-C",
    "Properties": {
      "securityRules": [
        {
          "name": "allow-dc-to-dc-inbound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-C/securityRules/allow-dc-to-dc-inbound",
          "type": "Microsoft.Network/networkSecurityGroups/securityRules",
          "properties": {
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "destinationAddressPrefix": "VirtualNetwork",
            "access": "Allow",
            "priority": 300,
            "direction": "Inbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [
              "10.1.0.32/28",
              "10.2.0.32/28",
              "10.3.0.32/28"
            ],
            "destinationAddressPrefixes": []
          }
        },
        {
          "name": "deny-all-inbound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-C/securityRules/allow-rdp-inbound",
          "type": "Microsoft.Network/networkSecurityGroups/securityRules",
          "properties": {
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "destinationAddressPrefix": "VirtualNetwork",
            "access": "Deny",
            "priority": 200,
            "direction": "Inbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefix": "*",
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        },
        {
          "name": "allow-dc-to-dc-outbound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-C/securityRules/allow-dc-to-dc-outbound",
          "type": "Microsoft.Network/networkSecurityGroups/securityRules",
          "properties": {
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "sourceAddressPrefix": "VirtualNetwork",
            "access": "Allow",
            "priority": 300,
            "direction": "Outbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": [
              "10.1.0.32/28",
              "10.2.0.32/28",
              "10.3.0.32/28"
            ]
          }
        }
      ],
      "defaultSecurityRules": [
        {
          "name": "AllowVnetInBound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-C/defaultSecurityRules/AllowVnetInBound",
          "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
          "properties": {
            "description": "Allow inbound traffic from all VMs in VNET",
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "sourceAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefix": "VirtualNetwork",
            "access": "Allow",
            "priority": 65000,
            "direction": "Inbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        },
        {
          "name": "AllowAzureLoadBalancerInBound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-C/defaultSecurityRules/AllowAzureLoadBalancerInBound",
          "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
          "properties": {
            "description": "Allow inbound traffic from azure load balancer",
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "sourceAddressPrefix": "AzureLoadBalancer",
            "destinationAddressPrefix": "*",
            "access": "Allow",
            "priority": 65001,
            "direction": "Inbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        },
        {
          "name": "DenyAllInBound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-C/defaultSecurityRules/DenyAllInBound",
          "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
          "properties": {
            "description": "Deny all inbound traffic",
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "sourceAddressPrefix": "*",
            "destinationAddressPrefix": "*",
            "access": "Deny",
            "priority": 65500,
            "direction": "Inbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        },
        {
          "name": "AllowVnetOutBound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-C/defaultSecurityRules/AllowVnetOutBound",
          "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
          "properties": {
            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "sourceAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefix": "VirtualNetwork",
            "access": "Allow",
            "priority": 65000,
            "direction": "Outbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        },
        {
          "name": "AllowInternetOutBound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-C/defaultSecurityRules/AllowInternetOutBound",
          "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
          "properties": {
            "description": "Allow outbound traffic from all VMs to Internet",
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "sourceAddressPrefix": "*",
            "destinationAddressPrefix": "Internet",
            "access": "Allow",
            "priority": 65001,
            "direction": "Outbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        },
        {
          "name": "DenyAllOutBound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-C/defaultSecurityRules/DenyAllOutBound",
          "type": "Microsoft.Network/networkSecurityGroups/defaultSecurityRules",
          "properties": {
            "description": "Deny all outbound traffic",
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "sourceAddressPrefix": "*",
            "destinationAddressPrefix": "*",
            "access": "Deny",
            "priority": 65500,
            "direction": "Outbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        }
      ],
      "networkInterfaces": []
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/networkSecurityGroups",
    "ResourceType": "Microsoft.Network/networkSecurityGroups",
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000"
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-D",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-D",
    "Location": "region",
    "ResourceName": "nsg-D",
    "Name": "nsg-D",
    "Properties": {
      "securityRules": [
        {
          "name": "deny-all-vnet-outbound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-D/securityRules/deny-all-vnet-outbound",
          "type": "Microsoft.Network/networkSecurityGroups/securityRules",
          "properties": {
            "description": "Prevent outbound VNET traffic.",
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "sourceAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefix": "VirtualNetwork",
            "access": "Deny",
            "priority": 200,
            "direction": "Outbound",
            "sourcePortRanges": [],
            "destinationPortRange": "*",
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        }
      ],
      "subnets": []
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/networkSecurityGroups",
    "ResourceType": "Microsoft.Network/networkSecurityGroups",
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000"
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-E",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-E",
    "Location": "region",
    "ResourceName": "nsg-E",
    "Name": "nsg-E",
    "Properties": {
      "securityRules": [
        {
          "name": "deny-mgmt-double-hop-outbound",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-E/securityRules/deny-mgmt-double-hop-outbound",
          "type": "Microsoft.Network/networkSecurityGroups/securityRules",
          "properties": {
            "description": "Prevent outbound RDP and SSH.",
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "sourceAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefix": "*",
            "access": "Deny",
            "priority": 200,
            "direction": "Outbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [
              "3389",
              "22"
            ],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        }
      ],
      "subnets": []
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/networkSecurityGroups",
    "ResourceType": "Microsoft.Network/networkSecurityGroups",
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000"
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes",
    "Location": "eastus",
    "ManagedBy": null,
    "ResourceName": "kubernetes",
    "Name": "kubernetes",
    "Properties": {
      "provisioningState": "Succeeded",
      "resourceGuid": "00000000-0000-0000-0000-000000000000",
      "frontendIPConfigurations": [
        {
          "name": "frontend-A",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/frontendIPConfigurations/frontend-A",
          "type": "Microsoft.Network/loadBalancers/frontendIPConfigurations",
          "properties": {
            "provisioningState": "Succeeded",
            "privateIPAllocationMethod": "Dynamic",
            "publicIPAddress": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/publicIPAddresses/kubernetes-ip-A"
            },
            "loadBalancingRules": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/loadBalancingRules/rule-TCP-80"
              },
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/loadBalancingRules/rule-TCP-443"
              }
            ],
            "privateIPAddressVersion": "IPv4"
          },
          "zones": [
            "1",
            "2",
            "3"
          ]
        }
      ],
      "backendAddressPools": [
        {
          "name": "kubernetes",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/backendAddressPools/kubernetes",
          "properties": {
            "provisioningState": "Succeeded",
            "backendIPConfigurations": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/2/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
              },
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/0/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
              },
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/1/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
              }
            ],
            "loadBalancingRules": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/loadBalancingRules/rule-TCP-80"
              },
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/loadBalancingRules/rule-TCP-443"
              }
            ]
          },
          "type": "Microsoft.Network/loadBalancers/backendAddressPools"
        }
      ],
      "loadBalancingRules": [
        {
          "name": "rule-TCP-80",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/loadBalancingRules/rule-TCP-80",
          "type": "Microsoft.Network/loadBalancers/loadBalancingRules",
          "properties": {
            "provisioningState": "Succeeded",
            "frontendIPConfiguration": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/frontendIPConfigurations/frontend-A"
            },
            "frontendPort": 80,
            "backendPort": 80,
            "enableFloatingIP": true,
            "idleTimeoutInMinutes": 4,
            "protocol": "Tcp",
            "enableDestinationServiceEndpoint": false,
            "enableTcpReset": false,
            "allowBackendPortConflict": false,
            "loadDistribution": "Default",
            "backendAddressPool": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/backendAddressPools/kubernetes"
            },
            "probe": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/probes/probe-TCP-80"
            }
          }
        },
        {
          "name": "rule-TCP-443",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/loadBalancingRules/rule-TCP-443",
          "type": "Microsoft.Network/loadBalancers/loadBalancingRules",
          "properties": {
            "provisioningState": "Succeeded",
            "frontendIPConfiguration": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/frontendIPConfigurations/frontend-A"
            },
            "frontendPort": 443,
            "backendPort": 443,
            "enableFloatingIP": true,
            "idleTimeoutInMinutes": 4,
            "protocol": "Tcp",
            "enableDestinationServiceEndpoint": false,
            "enableTcpReset": false,
            "allowBackendPortConflict": false,
            "loadDistribution": "Default",
            "backendAddressPool": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/backendAddressPools/kubernetes"
            },
            "probe": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/probes/probe-TCP-443"
            }
          }
        }
      ],
      "probes": [
        {
          "name": "probe-TCP-80",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/probes/probe-TCP-80",
          "properties": {
            "provisioningState": "Succeeded",
            "protocol": "Http",
            "port": 32042,
            "requestPath": "/healthz",
            "intervalInSeconds": 5,
            "numberOfProbes": 2,
            "loadBalancingRules": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/loadBalancingRules/rule-TCP-80"
              }
            ]
          },
          "type": "Microsoft.Network/loadBalancers/probes"
        },
        {
          "name": "probe-TCP-443",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/probes/probe-TCP-443",
          "properties": {
            "provisioningState": "Succeeded",
            "protocol": "Http",
            "port": 32042,
            "requestPath": "/healthz",
            "intervalInSeconds": 5,
            "numberOfProbes": 2,
            "loadBalancingRules": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/kubernetes/loadBalancingRules/rule-TCP-443"
              }
            ]
          },
          "type": "Microsoft.Network/loadBalancers/probes"
        }
      ],
      "inboundNatRules": [],
      "inboundNatPools": []
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/loadBalancers",
    "ResourceType": "Microsoft.Network/loadBalancers",
    "Sku": {
      "Name": "Standard",
      "Tier": "Regional",
      "Size": null,
      "Family": null,
      "Model": null,
      "Capacity": null
    },
    "Tags": {},
    "SubscriptionId": "00000000-0000-0000-0000-000000000000"
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A",
    "Location": "eastus",
    "ManagedBy": null,
    "ResourceName": "lb-A",
    "Name": "lb-A",
    "Properties": {
      "provisioningState": "Succeeded",
      "resourceGuid": "00000000-0000-0000-0000-000000000000",
      "frontendIPConfigurations": [
        {
          "name": "frontend-A",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/frontendIPConfigurations/frontend-A",
          "type": "Microsoft.Network/loadBalancers/frontendIPConfigurations",
          "properties": {
            "provisioningState": "Succeeded",
            "privateIPAllocationMethod": "Dynamic",
            "publicIPAddress": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/publicIPAddresses/lb-A-ip-A"
            },
            "loadBalancingRules": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/loadBalancingRules/rule-TCP-80"
              },
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/loadBalancingRules/rule-TCP-443"
              }
            ],
            "privateIPAddressVersion": "IPv4"
          }
        }
      ],
      "backendAddressPools": [
        {
          "name": "lb-A",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/backendAddressPools/lb-A",
          "properties": {
            "provisioningState": "Succeeded",
            "backendIPConfigurations": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/2/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
              },
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/0/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
              },
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/1/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
              }
            ],
            "loadBalancingRules": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/loadBalancingRules/rule-TCP-80"
              },
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/loadBalancingRules/rule-TCP-443"
              }
            ]
          },
          "type": "Microsoft.Network/loadBalancers/backendAddressPools"
        }
      ],
      "loadBalancingRules": [
        {
          "name": "rule-TCP-80",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/loadBalancingRules/rule-TCP-80",
          "type": "Microsoft.Network/loadBalancers/loadBalancingRules",
          "properties": {
            "provisioningState": "Succeeded",
            "frontendIPConfiguration": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/frontendIPConfigurations/frontend-A"
            },
            "frontendPort": 80,
            "backendPort": 80,
            "enableFloatingIP": true,
            "idleTimeoutInMinutes": 4,
            "protocol": "Tcp",
            "enableDestinationServiceEndpoint": false,
            "enableTcpReset": false,
            "allowBackendPortConflict": false,
            "loadDistribution": "Default",
            "backendAddressPool": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/backendAddressPools/lb-A"
            },
            "probe": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/probes/probe-TCP-80"
            }
          }
        },
        {
          "name": "rule-TCP-443",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/loadBalancingRules/rule-TCP-443",
          "type": "Microsoft.Network/loadBalancers/loadBalancingRules",
          "properties": {
            "provisioningState": "Succeeded",
            "frontendIPConfiguration": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/frontendIPConfigurations/frontend-A"
            },
            "frontendPort": 443,
            "backendPort": 443,
            "enableFloatingIP": true,
            "idleTimeoutInMinutes": 4,
            "protocol": "Tcp",
            "enableDestinationServiceEndpoint": false,
            "enableTcpReset": false,
            "allowBackendPortConflict": false,
            "loadDistribution": "Default",
            "backendAddressPool": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/backendAddressPools/lb-A"
            },
            "probe": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/probes/probe-TCP-443"
            }
          }
        }
      ],
      "probes": [
        {
          "name": "probe-TCP-80",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/probes/probe-TCP-80",
          "properties": {
            "provisioningState": "Succeeded",
            "protocol": "Http",
            "port": 80,
            "requestPath": "/healthz",
            "intervalInSeconds": 5,
            "numberOfProbes": 2,
            "loadBalancingRules": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/loadBalancingRules/rule-TCP-80"
              }
            ]
          },
          "type": "Microsoft.Network/loadBalancers/probes"
        },
        {
          "name": "probe-TCP-443",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/probes/probe-TCP-443",
          "properties": {
            "provisioningState": "Succeeded",
            "protocol": "Http",
            "port": 80,
            "requestPath": "/healthz",
            "intervalInSeconds": 5,
            "numberOfProbes": 2,
            "loadBalancingRules": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-A/loadBalancingRules/rule-TCP-443"
              }
            ]
          },
          "type": "Microsoft.Network/loadBalancers/probes"
        }
      ],
      "inboundNatRules": [],
      "inboundNatPools": []
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/loadBalancers",
    "ResourceType": "Microsoft.Network/loadBalancers",
    "Sku": {
      "Name": "Standard",
      "Tier": "Regional",
      "Size": null,
      "Family": null,
      "Model": null,
      "Capacity": null
    },
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000"
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B",
    "Location": "east US",
    "ManagedBy": null,
    "ResourceName": "lb-B",
    "Name": "lb-B",
    "Properties": {
      "provisioningState": "Succeeded",
      "resourceGuid": "00000000-0000-0000-0000-000000000000",
      "frontendIPConfigurations": [
        {
          "name": "frontend-A",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/frontendIPConfigurations/frontend-A",
          "type": "Microsoft.Network/loadBalancers/frontendIPConfigurations",
          "properties": {
            "provisioningState": "Succeeded",
            "privateIPAllocationMethod": "Dynamic",
            "loadBalancingRules": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/loadBalancingRules/rule-TCP-80"
              },
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/loadBalancingRules/rule-TCP-443"
              }
            ],
            "privateIPAddressVersion": "IPv4"
          },
          "zones": [
            "3"
          ]
        }
      ],
      "backendAddressPools": [
        {
          "name": "lb-B",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/backendAddressPools/lb-B",
          "properties": {
            "provisioningState": "Succeeded",
            "backendIPConfigurations": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/2/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
              },
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/0/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
              },
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/1/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
              }
            ],
            "loadBalancingRules": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/loadBalancingRules/rule-TCP-80"
              },
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/loadBalancingRules/rule-TCP-443"
              }
            ]
          },
          "type": "Microsoft.Network/loadBalancers/backendAddressPools"
        }
      ],
      "loadBalancingRules": [
        {
          "name": "rule-TCP-80",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/loadBalancingRules/rule-TCP-80",
          "type": "Microsoft.Network/loadBalancers/loadBalancingRules",
          "properties": {
            "provisioningState": "Succeeded",
            "frontendIPConfiguration": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/frontendIPConfigurations/frontend-A"
            },
            "frontendPort": 80,
            "backendPort": 80,
            "enableFloatingIP": true,
            "idleTimeoutInMinutes": 4,
            "protocol": "Tcp",
            "enableDestinationServiceEndpoint": false,
            "enableTcpReset": false,
            "allowBackendPortConflict": false,
            "loadDistribution": "Default",
            "backendAddressPool": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/backendAddressPools/lb-B"
            },
            "probe": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/probes/probe-TCP-80"
            }
          }
        },
        {
          "name": "rule-TCP-443",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/loadBalancingRules/rule-TCP-443",
          "type": "Microsoft.Network/loadBalancers/loadBalancingRules",
          "properties": {
            "provisioningState": "Succeeded",
            "frontendIPConfiguration": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/frontendIPConfigurations/frontend-A"
            },
            "frontendPort": 443,
            "backendPort": 443,
            "enableFloatingIP": true,
            "idleTimeoutInMinutes": 4,
            "protocol": "Tcp",
            "enableDestinationServiceEndpoint": false,
            "enableTcpReset": false,
            "allowBackendPortConflict": false,
            "loadDistribution": "Default",
            "backendAddressPool": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/backendAddressPools/lb-B"
            },
            "probe": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/probes/probe-TCP-443"
            }
          }
        }
      ],
      "probes": [
        {
          "name": "probe-TCP-80",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/probes/probe-TCP-80",
          "properties": {
            "provisioningState": "Succeeded",
            "protocol": "Tcp",
            "port": 80,
            "intervalInSeconds": 5,
            "numberOfProbes": 2,
            "loadBalancingRules": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/loadBalancingRules/rule-TCP-80"
              }
            ]
          },
          "type": "Microsoft.Network/loadBalancers/probes"
        },
        {
          "name": "probe-TCP-443",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/probes/probe-TCP-443",
          "properties": {
            "provisioningState": "Succeeded",
            "protocol": "Tcp",
            "port": 443,
            "intervalInSeconds": 5,
            "numberOfProbes": 2,
            "loadBalancingRules": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-B/loadBalancingRules/rule-TCP-443"
              }
            ]
          },
          "type": "Microsoft.Network/loadBalancers/probes"
        }
      ],
      "inboundNatRules": [],
      "inboundNatPools": []
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/loadBalancers",
    "ResourceType": "Microsoft.Network/loadBalancers",
    "Sku": {
      "Name": "Standard",
      "Tier": "Regional",
      "Size": null,
      "Family": null,
      "Model": null,
      "Capacity": null
    },
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000"
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-C",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-C",
    "Location": "notRegion",
    "ManagedBy": null,
    "ResourceName": "lb-C",
    "Name": "lb-C",
    "Properties": {
      "provisioningState": "Succeeded",
      "resourceGuid": "00000000-0000-0000-0000-000000000000",
      "frontendIPConfigurations": [
        {
          "name": "frontend-A",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-C/frontendIPConfigurations/frontend-A",
          "type": "Microsoft.Network/loadBalancers/frontendIPConfigurations",
          "properties": {
            "provisioningState": "Succeeded",
            "privateIPAllocationMethod": "Dynamic",
            "loadBalancingRules": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-C/loadBalancingRules/rule-TCP-80"
              },
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-C/loadBalancingRules/rule-TCP-443"
              }
            ],
            "privateIPAddressVersion": "IPv4"
          }
        }
      ],
      "backendAddressPools": [
        {
          "name": "lb-B",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-C/backendAddressPools/lb-B",
          "properties": {
            "provisioningState": "Succeeded",
            "backendIPConfigurations": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/2/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
              },
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/0/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
              },
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/1/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
              }
            ],
            "loadBalancingRules": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-C/loadBalancingRules/rule-TCP-80"
              },
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-C/loadBalancingRules/rule-TCP-443"
              }
            ]
          },
          "type": "Microsoft.Network/loadBalancers/backendAddressPools"
        }
      ],
      "loadBalancingRules": [
        {
          "name": "rule-TCP-80",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-C/loadBalancingRules/rule-TCP-80",
          "type": "Microsoft.Network/loadBalancers/loadBalancingRules",
          "properties": {
            "provisioningState": "Succeeded",
            "frontendIPConfiguration": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-C/frontendIPConfigurations/frontend-A"
            },
            "frontendPort": 80,
            "backendPort": 80,
            "enableFloatingIP": true,
            "idleTimeoutInMinutes": 4,
            "protocol": "Tcp",
            "enableDestinationServiceEndpoint": false,
            "enableTcpReset": false,
            "allowBackendPortConflict": false,
            "loadDistribution": "Default",
            "backendAddressPool": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-C/backendAddressPools/lb-B"
            },
            "probe": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-C/probes/probe-TCP-80"
            }
          }
        },
        {
          "name": "rule-TCP-443",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-C/loadBalancingRules/rule-TCP-443",
          "type": "Microsoft.Network/loadBalancers/loadBalancingRules",
          "properties": {
            "provisioningState": "Succeeded",
            "frontendIPConfiguration": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-C/frontendIPConfigurations/frontend-A"
            },
            "frontendPort": 443,
            "backendPort": 443,
            "enableFloatingIP": true,
            "idleTimeoutInMinutes": 4,
            "protocol": "Tcp",
            "enableDestinationServiceEndpoint": false,
            "enableTcpReset": false,
            "allowBackendPortConflict": false,
            "loadDistribution": "Default",
            "backendAddressPool": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-C/backendAddressPools/lb-B"
            },
            "probe": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-C/probes/probe-TCP-443"
            }
          }
        }
      ],
      "probes": [
        {
          "name": "probe-TCP-80",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-C/probes/probe-TCP-80",
          "properties": {
            "provisioningState": "Succeeded",
            "protocol": "Tcp",
            "port": 80,
            "intervalInSeconds": 5,
            "numberOfProbes": 2,
            "loadBalancingRules": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-C/loadBalancingRules/rule-TCP-80"
              }
            ]
          },
          "type": "Microsoft.Network/loadBalancers/probes"
        },
        {
          "name": "probe-TCP-443",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-C/probes/probe-TCP-443",
          "properties": {
            "provisioningState": "Succeeded",
            "protocol": "Tcp",
            "port": 443,
            "intervalInSeconds": 5,
            "numberOfProbes": 2,
            "loadBalancingRules": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-C/loadBalancingRules/rule-TCP-443"
              }
            ]
          },
          "type": "Microsoft.Network/loadBalancers/probes"
        }
      ],
      "inboundNatRules": [],
      "inboundNatPools": []
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/loadBalancers",
    "ResourceType": "Microsoft.Network/loadBalancers",
    "Sku": {
      "Name": "Standard",
      "Tier": "Regional",
      "Size": null,
      "Family": null,
      "Model": null,
      "Capacity": null
    },
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000"
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-D",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-D",
    "Location": "region",
    "ManagedBy": null,
    "ResourceName": "lb-D",
    "Name": "lb-D",
    "Properties": {
      "provisioningState": "Succeeded",
      "resourceGuid": "00000000-0000-0000-0000-000000000000",
      "frontendIPConfigurations": [
        {
          "name": "frontend-A",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-D/frontendIPConfigurations/frontend-A",
          "type": "Microsoft.Network/loadBalancers/frontendIPConfigurations",
          "properties": {
            "provisioningState": "Succeeded",
            "privateIPAllocationMethod": "Dynamic",
            "publicIPAddress": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/publicIPAddresses/lb-D-ip-A"
            },
            "loadBalancingRules": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-D/loadBalancingRules/rule-TCP-80"
              },
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-D/loadBalancingRules/rule-TCP-443"
              }
            ],
            "privateIPAddressVersion": "IPv4"
          },
          "zones": [
            "2",
            "3",
            "1"
          ]
        }
      ],
      "backendAddressPools": [
        {
          "name": "lb-B",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-D/backendAddressPools/lb-B",
          "properties": {
            "provisioningState": "Succeeded",
            "backendIPConfigurations": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/2/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
              },
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/0/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
              },
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset-A/virtualMachines/1/networkInterfaces/scaleset-A/ipConfigurations/ipconfig1"
              }
            ],
            "loadBalancingRules": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-D/loadBalancingRules/rule-TCP-80"
              },
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-D/loadBalancingRules/rule-TCP-443"
              }
            ]
          },
          "type": "Microsoft.Network/loadBalancers/backendAddressPools"
        }
      ],
      "loadBalancingRules": [
        {
          "name": "rule-TCP-80",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-D/loadBalancingRules/rule-TCP-80",
          "type": "Microsoft.Network/loadBalancers/loadBalancingRules",
          "properties": {
            "provisioningState": "Succeeded",
            "frontendIPConfiguration": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-D/frontendIPConfigurations/frontend-A"
            },
            "frontendPort": 80,
            "backendPort": 80,
            "enableFloatingIP": true,
            "idleTimeoutInMinutes": 4,
            "protocol": "Tcp",
            "enableDestinationServiceEndpoint": false,
            "enableTcpReset": false,
            "allowBackendPortConflict": false,
            "loadDistribution": "Default",
            "backendAddressPool": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-D/backendAddressPools/lb-B"
            },
            "probe": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-D/probes/probe-TCP-80"
            }
          }
        },
        {
          "name": "rule-TCP-443",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-D/loadBalancingRules/rule-TCP-443",
          "type": "Microsoft.Network/loadBalancers/loadBalancingRules",
          "properties": {
            "provisioningState": "Succeeded",
            "frontendIPConfiguration": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-D/frontendIPConfigurations/frontend-A"
            },
            "frontendPort": 443,
            "backendPort": 443,
            "enableFloatingIP": true,
            "idleTimeoutInMinutes": 4,
            "protocol": "Tcp",
            "enableDestinationServiceEndpoint": false,
            "enableTcpReset": false,
            "allowBackendPortConflict": false,
            "loadDistribution": "Default",
            "backendAddressPool": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-D/backendAddressPools/lb-B"
            },
            "probe": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-D/probes/probe-TCP-443"
            }
          }
        }
      ],
      "probes": [
        {
          "name": "probe-TCP-80",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-D/probes/probe-TCP-80",
          "properties": {
            "provisioningState": "Succeeded",
            "protocol": "Tcp",
            "port": 80,
            "intervalInSeconds": 5,
            "numberOfProbes": 2,
            "loadBalancingRules": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-D/loadBalancingRules/rule-TCP-80"
              }
            ]
          },
          "type": "Microsoft.Network/loadBalancers/probes"
        },
        {
          "name": "probe-TCP-443",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-D/probes/probe-TCP-443",
          "properties": {
            "provisioningState": "Succeeded",
            "protocol": "Tcp",
            "port": 443,
            "intervalInSeconds": 5,
            "numberOfProbes": 2,
            "loadBalancingRules": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/loadBalancers/lb-D/loadBalancingRules/rule-TCP-443"
              }
            ]
          },
          "type": "Microsoft.Network/loadBalancers/probes"
        }
      ],
      "inboundNatRules": [],
      "inboundNatPools": []
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/loadBalancers",
    "ResourceType": "Microsoft.Network/loadBalancers",
    "Sku": {
      "Name": "Basic",
      "Tier": "Regional",
      "Size": null,
      "Family": null,
      "Model": null,
      "Capacity": null
    },
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000"
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-A",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-A",
    "Identity": null,
    "Kind": null,
    "Location": "region",
    "ManagedBy": null,
    "ResourceName": "gateway-A",
    "Name": "gateway-A",
    "ExtensionResourceName": null,
    "ParentResource": null,
    "Plan": null,
    "Properties": {
      "provisioningState": "Succeeded",
      "packetCaptureDiagnosticState": "None",
      "enablePrivateIpAddress": false,
      "ipConfigurations": [
        {
          "name": "default",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-A/ipConfigurations/default",
          "type": "Microsoft.Network/virtualNetworkGateways/ipConfigurations",
          "properties": {
            "provisioningState": "Succeeded",
            "privateIPAllocationMethod": "Dynamic",
            "publicIPAddress": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/publicIPAddresses/pip-A"
            },
            "subnet": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/GatewaySubnet"
            }
          }
        }
      ],
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 2
      },
      "gatewayType": "Vpn",
      "vpnType": "RouteBased",
      "enableBgp": false,
      "activeActive": false,
      "bgpSettings": {},
      "vpnGatewayGeneration": "Generation1"
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/virtualNetworkGateways",
    "ResourceType": "Microsoft.Network/virtualNetworkGateways",
    "ExtensionResourceType": null,
    "Sku": null,
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000"
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-B",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-B",
    "Identity": null,
    "Kind": null,
    "Location": "region",
    "ManagedBy": null,
    "ResourceName": "gateway-B",
    "Name": "gateway-B",
    "ExtensionResourceName": null,
    "ParentResource": null,
    "Plan": null,
    "Properties": {
      "provisioningState": "Succeeded",
      "packetCaptureDiagnosticState": "None",
      "enablePrivateIpAddress": false,
      "ipConfigurations": [
        {
          "name": "default",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-B/ipConfigurations/default",
          "type": "Microsoft.Network/virtualNetworkGateways/ipConfigurations",
          "properties": {
            "provisioningState": "Succeeded",
            "privateIPAllocationMethod": "Dynamic",
            "publicIPAddress": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/publicIPAddresses/pip-B"
            },
            "subnet": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-B/subnets/GatewaySubnet"
            }
          }
        }
      ],
      "sku": {
        "name": "VpnGw2",
        "tier": "VpnGw2",
        "capacity": 2
      },
      "gatewayType": "Vpn",
      "vpnType": "RouteBased",
      "enableBgp": false,
      "activeActive": true,
      "bgpSettings": {},
      "vpnGatewayGeneration": "Generation1"
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/virtualNetworkGateways",
    "ResourceType": "Microsoft.Network/virtualNetworkGateways",
    "ExtensionResourceType": null,
    "Sku": null,
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000",
    "resources": [
      {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providersMicrosoft.Network/virtualNetworkGateways/gateway-B/providers/Microsoft.Maintenance/configurationAssignments/configurationassignment-a",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-B/providers/Microsoft.Maintenance/configurationAssignments/configurationassignment-a",
        "ResourceName": "configurationassignment-a",
        "Name": "configurationassignment-a",
        "Properties": {
          "maintenanceConfigurationId": null
        },
        "ResourceGroupName": "test-rg",
        "Type": " Microsoft.Maintenance/configurationAssignments",
        "ResourceType": "Microsoft.Maintenance/configurationAssignments",
        "SubscriptionId": "00000000-0000-0000-0000-000000000000"
      }
    ]
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-C",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-C",
    "Identity": null,
    "Kind": null,
    "Location": "region",
    "ManagedBy": null,
    "ResourceName": "gateway-C",
    "Name": "gateway-C",
    "ExtensionResourceName": null,
    "ParentResource": null,
    "Plan": null,
    "Properties": {
      "provisioningState": "Succeeded",
      "packetCaptureDiagnosticState": "None",
      "enablePrivateIpAddress": false,
      "ipConfigurations": [
        {
          "name": "default",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-C/ipConfigurations/default",
          "type": "Microsoft.Network/virtualNetworkGateways/ipConfigurations",
          "properties": {
            "provisioningState": "Succeeded",
            "privateIPAllocationMethod": "Dynamic",
            "publicIPAddress": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/publicIPAddresses/pip-C"
            },
            "subnet": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-C/subnets/GatewaySubnet"
            }
          }
        }
      ],
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 2
      },
      "gatewayType": "ExpressRoute",
      "vpnType": "PolicyBased",
      "enableBgp": false,
      "activeActive": false,
      "remoteVirtualNetworkPeerings": [
        {
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-D/virtualNetworkPeerings/peer-CD"
        }
      ],
      "vpnGatewayGeneration": "None"
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/virtualNetworkGateways",
    "ResourceType": "Microsoft.Network/virtualNetworkGateways",
    "ExtensionResourceType": null,
    "Sku": null,
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000",
    "resources": [
      {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providersMicrosoft.Network/virtualNetworkGateways/gateway-C/providers/Microsoft.Maintenance/configurationAssignments/configurationassignment-a",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-C/providers/Microsoft.Maintenance/configurationAssignments/configurationassignment-a",
        "ResourceName": "configurationassignment-a",
        "Name": "configurationassignment-a",
        "Properties": {
          "maintenanceConfigurationId": null
        },
        "ResourceGroupName": "test-rg",
        "Type": " Microsoft.Maintenance/configurationAssignments",
        "ResourceType": "Microsoft.Maintenance/configurationAssignments",
        "SubscriptionId": "00000000-0000-0000-0000-000000000000"
      }
    ]
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-D",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-D",
    "Identity": null,
    "Kind": null,
    "Location": "region",
    "ManagedBy": null,
    "ResourceName": "gateway-D",
    "Name": "gateway-D",
    "ExtensionResourceName": null,
    "ParentResource": null,
    "Plan": null,
    "Properties": {
      "provisioningState": "Succeeded",
      "packetCaptureDiagnosticState": "None",
      "enablePrivateIpAddress": false,
      "ipConfigurations": [
        {
          "name": "default",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-D/ipConfigurations/default",
          "type": "Microsoft.Network/virtualNetworkGateways/ipConfigurations",
          "properties": {
            "provisioningState": "Succeeded",
            "privateIPAllocationMethod": "Dynamic",
            "publicIPAddress": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/publicIPAddresses/pip-D"
            },
            "subnet": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-D/subnets/GatewaySubnet"
            }
          }
        }
      ],
      "sku": {
        "name": "Basic",
        "tier": "Basic",
        "capacity": 1
      },
      "gatewayType": "ExpressRoute",
      "vpnType": "PolicyBased",
      "enableBgp": false,
      "activeActive": false,
      "remoteVirtualNetworkPeerings": [],
      "vpnGatewayGeneration": "None"
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/virtualNetworkGateways",
    "ResourceType": "Microsoft.Network/virtualNetworkGateways",
    "ExtensionResourceType": null,
    "Sku": null,
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000",
    "resources": [
      {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providersMicrosoft.Network/virtualNetworkGateways/gateway-D/providers/Microsoft.Maintenance/configurationAssignments/configurationassignment-a",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-D/providers/Microsoft.Maintenance/configurationAssignments/configurationassignment-a",
        "ResourceName": "configurationassignment-a",
        "Name": "configurationassignment-a",
        "Properties": {
          "maintenanceConfigurationId": "00000000-0000-0000-0000-000000000000"
        },
        "ResourceGroupName": "test-rg",
        "Type": " Microsoft.Maintenance/configurationAssignments",
        "ResourceType": "Microsoft.Maintenance/configurationAssignments",
        "SubscriptionId": "00000000-0000-0000-0000-000000000000"
      }
    ]
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-E",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-E",
    "Identity": null,
    "Kind": null,
    "Location": "region",
    "ManagedBy": null,
    "ResourceName": "gateway-E",
    "Name": "gateway-E",
    "ExtensionResourceName": null,
    "ParentResource": null,
    "Plan": null,
    "Properties": {
      "provisioningState": "Succeeded",
      "packetCaptureDiagnosticState": "None",
      "enablePrivateIpAddress": false,
      "ipConfigurations": [
        {
          "name": "default",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-E/ipConfigurations/default",
          "type": "Microsoft.Network/virtualNetworkGateways/ipConfigurations",
          "properties": {
            "provisioningState": "Succeeded",
            "privateIPAllocationMethod": "Dynamic",
            "publicIPAddress": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/publicIPAddresses/pip-A"
            },
            "subnet": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/GatewaySubnet"
            }
          }
        }
      ],
      "sku": {
        "name": "VpnGw1AZ",
        "tier": "VpnGw1AZ",
        "capacity": 2
      },
      "gatewayType": "Vpn",
      "vpnType": "RouteBased",
      "enableBgp": false,
      "activeActive": false,
      "bgpSettings": {},
      "vpnGatewayGeneration": "Generation1"
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/virtualNetworkGateways",
    "ResourceType": "Microsoft.Network/virtualNetworkGateways",
    "ExtensionResourceType": null,
    "Sku": null,
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000",
    "resources": [
      {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providersMicrosoft.Network/virtualNetworkGateways/gateway-E/providers/Microsoft.Maintenance/configurationAssignments/configurationassignment-a",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-E/providers/Microsoft.Maintenance/configurationAssignments/configurationassignment-a",
        "ResourceName": "configurationassignment-a",
        "Name": "configurationassignment-a",
        "Properties": {
          "maintenanceConfigurationId": "00000000-0000-0000-0000-000000000000"
        },
        "ResourceGroupName": "test-rg",
        "Type": " Microsoft.Maintenance/configurationAssignments",
        "ResourceType": "Microsoft.Maintenance/configurationAssignments",
        "SubscriptionId": "00000000-0000-0000-0000-000000000000"
      }
    ]
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-F",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-F",
    "Identity": null,
    "Kind": null,
    "Location": "region",
    "ManagedBy": null,
    "ResourceName": "gateway-F",
    "Name": "gateway-F",
    "ExtensionResourceName": null,
    "ParentResource": null,
    "Plan": null,
    "Properties": {
      "provisioningState": "Succeeded",
      "packetCaptureDiagnosticState": "None",
      "enablePrivateIpAddress": false,
      "ipConfigurations": [
        {
          "name": "default",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-F/ipConfigurations/default",
          "type": "Microsoft.Network/virtualNetworkGateways/ipConfigurations",
          "properties": {
            "provisioningState": "Succeeded",
            "privateIPAllocationMethod": "Dynamic",
            "publicIPAddress": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/publicIPAddresses/pip-A"
            },
            "subnet": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-A/subnets/GatewaySubnet"
            }
          }
        }
      ],
      "sku": {
        "name": "VpnGw3AZ",
        "tier": "VpnGw3AZ",
        "capacity": 2
      },
      "gatewayType": "Vpn",
      "vpnType": "RouteBased",
      "enableBgp": false,
      "activeActive": false,
      "bgpSettings": {},
      "vpnGatewayGeneration": "Generation1"
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/virtualNetworkGateways",
    "ResourceType": "Microsoft.Network/virtualNetworkGateways",
    "ExtensionResourceType": null,
    "Sku": null,
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000",
    "resources": [
      {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providersMicrosoft.Network/virtualNetworkGateways/gateway-F/providers/Microsoft.Maintenance/configurationAssignments/configurationassignment-a",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-F/providers/Microsoft.Maintenance/configurationAssignments/configurationassignment-a",
        "ResourceName": "configurationassignment-a",
        "Name": "configurationassignment-a",
        "Properties": {
          "maintenanceConfigurationId": "00000000-0000-0000-0000-000000000000"
        },
        "ResourceGroupName": "test-rg",
        "Type": " Microsoft.Maintenance/configurationAssignments",
        "ResourceType": "Microsoft.Maintenance/configurationAssignments",
        "SubscriptionId": "00000000-0000-0000-0000-000000000000"
      }
    ]
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-G",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-G",
    "Identity": null,
    "Kind": null,
    "Location": "region",
    "ManagedBy": null,
    "ResourceName": "gateway-G",
    "Name": "gateway-G",
    "ExtensionResourceName": null,
    "ParentResource": null,
    "Plan": null,
    "Properties": {
      "provisioningState": "Succeeded",
      "packetCaptureDiagnosticState": "None",
      "enablePrivateIpAddress": false,
      "ipConfigurations": [
        {
          "name": "default",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-G/ipConfigurations/default",
          "type": "Microsoft.Network/virtualNetworkGateways/ipConfigurations",
          "properties": {
            "provisioningState": "Succeeded",
            "privateIPAllocationMethod": "Dynamic",
            "publicIPAddress": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/publicIPAddresses/pip-C"
            },
            "subnet": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-C/subnets/GatewaySubnet"
            }
          }
        }
      ],
      "sku": {
        "name": "ErGw1AZ",
        "tier": "ErGw1AZ",
        "capacity": 2
      },
      "gatewayType": "ExpressRoute",
      "vpnType": "PolicyBased",
      "enableBgp": false,
      "activeActive": false,
      "remoteVirtualNetworkPeerings": [
        {
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-D/virtualNetworkPeerings/peer-CD"
        }
      ],
      "vpnGatewayGeneration": "None"
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/virtualNetworkGateways",
    "ResourceType": "Microsoft.Network/virtualNetworkGateways",
    "ExtensionResourceType": null,
    "Sku": null,
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000",
    "resources": [
      {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providersMicrosoft.Network/virtualNetworkGateways/gateway-G/providers/Microsoft.Maintenance/configurationAssignments/configurationassignment-a",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-G/providers/Microsoft.Maintenance/configurationAssignments/configurationassignment-a",
        "ResourceName": "configurationassignment-a",
        "Name": "configurationassignment-a",
        "Properties": {
          "maintenanceConfigurationId": "00000000-0000-0000-0000-000000000000"
        },
        "ResourceGroupName": "test-rg",
        "Type": " Microsoft.Maintenance/configurationAssignments",
        "ResourceType": "Microsoft.Maintenance/configurationAssignments",
        "SubscriptionId": "00000000-0000-0000-0000-000000000000"
      }
    ]
  },
  {
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-H",
    "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-H",
    "Identity": null,
    "Kind": null,
    "Location": "region",
    "ManagedBy": null,
    "ResourceName": "gateway-H",
    "Name": "gateway-H",
    "ExtensionResourceName": null,
    "ParentResource": null,
    "Plan": null,
    "Properties": {
      "provisioningState": "Succeeded",
      "packetCaptureDiagnosticState": "None",
      "enablePrivateIpAddress": false,
      "ipConfigurations": [
        {
          "name": "default",
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-H/ipConfigurations/default",
          "type": "Microsoft.Network/virtualNetworkGateways/ipConfigurations",
          "properties": {
            "provisioningState": "Succeeded",
            "privateIPAllocationMethod": "Dynamic",
            "publicIPAddress": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/publicIPAddresses/pip-C"
            },
            "subnet": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-C/subnets/GatewaySubnet"
            }
          }
        }
      ],
      "sku": {
        "name": "ErGw3AZ",
        "tier": "ErGw3AZ",
        "capacity": 2
      },
      "gatewayType": "ExpressRoute",
      "vpnType": "PolicyBased",
      "enableBgp": false,
      "activeActive": false,
      "remoteVirtualNetworkPeerings": [
        {
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworks/vnet-D/virtualNetworkPeerings/peer-CD"
        }
      ],
      "vpnGatewayGeneration": "None"
    },
    "ResourceGroupName": "test-rg",
    "Type": "Microsoft.Network/virtualNetworkGateways",
    "ResourceType": "Microsoft.Network/virtualNetworkGateways",
    "ExtensionResourceType": null,
    "Sku": null,
    "Tags": null,
    "SubscriptionId": "00000000-0000-0000-0000-000000000000",
    "resources": [
      {
        "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providersMicrosoft.Network/virtualNetworkGateways/gateway-H/providers/Microsoft.Maintenance/configurationAssignments/configurationassignment-a",
        "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/virtualNetworkGateways/gateway-H/providers/Microsoft.Maintenance/configurationAssignments/configurationassignment-a",
        "ResourceName": "configurationassignment-a",
        "Name": "configurationassignment-a",
        "Properties": {
          "maintenanceConfigurationId": "00000000-0000-0000-0000-000000000000"
        },
        "ResourceGroupName": "test-rg",
        "Type": " Microsoft.Maintenance/configurationAssignments",
        "ResourceType": "Microsoft.Maintenance/configurationAssignments",
        "SubscriptionId": "00000000-0000-0000-0000-000000000000"
      }
    ]
  },
  {
    "type": "Microsoft.Network/networkSecurityGroups",
    "resourceType": "Microsoft.Network/networkSecurityGroups",
    "apiVersion": "2020-11-01",
    "name": "aks-agentpool-00000000-nsg",
    "location": "region",
    "properties": {
      "securityRules": [
        {
          "name": "a1b7b90cbd0be46cba31fb4a41b27b41-TCP-80-Internet",
          "properties": {
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "destinationPortRange": "80",
            "sourceAddressPrefix": "Internet",
            "destinationAddressPrefix": "20.237.73.217",
            "access": "Allow",
            "priority": 500,
            "direction": "Inbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        }
      ]
    }
  },
  {
    "type": "Microsoft.Network/networkSecurityGroups",
    "resourceType": "Microsoft.Network/networkSecurityGroups",
    "apiVersion": "2020-11-01",
    "name": "aks-agentpool-00000001-nsg",
    "location": "region",
    "properties": {
      "securityRules": [
        {
          "name": "a1b7b90cbd0be46cba31fb4a41b27b41-TCP-80-Internet",
          "properties": {
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "destinationPortRange": "80",
            "sourceAddressPrefix": "Internet",
            "destinationAddressPrefix": "20.237.73.217",
            "access": "Allow",
            "priority": 500,
            "direction": "Inbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        },
        {
          "name": "custom-rule",
          "properties": {
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "destinationPortRange": "443",
            "sourceAddressPrefix": "Internet",
            "destinationAddressPrefix": "20.237.73.217",
            "access": "Allow",
            "priority": 502,
            "direction": "Inbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
          }
        }
      ]
    }
  }
]
