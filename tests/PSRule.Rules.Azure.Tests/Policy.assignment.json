[
  {
    "Identity": null,
    "Location": null,
    "Name": "SecurityCenterBuiltIn",
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyAssignments/SecurityCenterBuiltIn",
    "ResourceName": "SecurityCenterBuiltIn",
    "ResourceGroupName": null,
    "ResourceType": "Microsoft.Authorization/policyAssignments",
    "SubscriptionId": "00000000-0000-0000-0000-000000000000",
    "Sku": null,
    "PolicyAssignmentId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyAssignments/SecurityCenterBuiltIn",
    "Properties": {
      "Scope": "/subscriptions/00000000-0000-0000-0000-000000000000",
      "NotScopes": null,
      "DisplayName": "ASC Default (subscription: 00000000-0000-0000-0000-000000000000)",
      "Description": "This is the default set of policies monitored by Azure Security Center. It was automatically assigned as part of onboarding to Security Center. The default assignment contains only audit policies. For more information please visit https://aka.ms/ascpolicies",
      "Metadata": {
        "assignedBy": "Security Center",
        "excludedOutOfTheBoxStandards": [
          "Azure CIS 1.1.0"
        ]
      },
      "EnforcementMode": 0,
      "PolicyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
      "Parameters": {
        "secretsExpirationSetEffect": {
          "value": "Audit"
        },
        "keysExpirationSetEffect": {
          "value": "Audit"
        }
      },
      "NonComplianceMessages": null
    },
    "PolicyDefinitions": [
      {
        "Name": "a4fe33eb-e377-4efb-ab31-0784311bc499",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/a4fe33eb-e377-4efb-ab31-0784311bc499",
        "ResourceName": "a4fe33eb-e377-4efb-ab31-0784311bc499",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "This policy audits any Windows/Linux virtual machines (VMs) if the Log Analytics agent is not installed which Security Center uses to monitor for security vulnerabilities and threats",
          "DisplayName": "Log Analytics agent should be installed on your virtual machine for Azure Security Center monitoring",
          "Metadata": {
            "version": "1.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "Microsoft.ClassicCompute/virtualMachines",
                "Microsoft.Compute/virtualMachines"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "d1db3318-01ff-16de-29eb-28b344515626",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a4fe33eb-e377-4efb-ab31-0784311bc499"
      },
      {
        "Name": "a3a6ea0c-e018-4933-9ef0-5aaa1501449b",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/a3a6ea0c-e018-4933-9ef0-5aaa1501449b",
        "ResourceName": "a3a6ea0c-e018-4933-9ef0-5aaa1501449b",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Security Center collects data from your Azure virtual machines (VMs) to monitor for security vulnerabilities and threats.",
          "DisplayName": "Log Analytics agent should be installed on your virtual machine scale sets for Azure Security Center monitoring",
          "Metadata": {
            "version": "1.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachineScaleSets"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "45cfe080-ceb1-a91e-9743-71551ed24e94",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a3a6ea0c-e018-4933-9ef0-5aaa1501449b"
      },
      {
        "Name": "0a075868-4c26-42ef-914c-5bc007359560",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0a075868-4c26-42ef-914c-5bc007359560",
        "ResourceName": "0a075868-4c26-42ef-914c-5bc007359560",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Manage your organizational compliance requirements by specifying the maximum amount of time that a certificate can be valid within your key vault.",
          "DisplayName": "[Preview]: Certificates should have the specified maximum validity period",
          "Metadata": {
            "version": "2.2.0-preview",
            "category": "Key Vault",
            "preview": true
          },
          "Mode": "Microsoft.KeyVault.Data",
          "Parameters": {
            "maximumValidityInMonths": {
              "type": "Integer",
              "metadata": {
                "displayName": "The maximum validity in months",
                "description": "The limit to how long a certificate may be valid for. Certificates with lengthy validity periods aren't best practice."
              },
              "defaultValue": 12
            },
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "'Audit' allows a non-compliant resource to be created, but flags it as non-compliant. 'Deny' blocks the resource creation. 'Disable' turns off the policy."
              },
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.KeyVault.Data/vaults/certificates"
                },
                {
                  "field": "Microsoft.KeyVault.Data/vaults/certificates/properties.validityInMonths",
                  "greater": "[parameters('maximumValidityInMonths')]"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a075868-4c26-42ef-914c-5bc007359560"
      },
      {
        "Name": "98728c90-32c7-4049-8429-847dc0f4fe37",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/98728c90-32c7-4049-8429-847dc0f4fe37",
        "ResourceName": "98728c90-32c7-4049-8429-847dc0f4fe37",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Secrets should have a defined expiration date and not be permanent. Secrets that are valid forever provide a potential attacker with more time to compromise them. It is a recommended security practice to set expiration dates on secrets.",
          "DisplayName": "Key Vault secrets should have an expiration date",
          "Metadata": {
            "version": "1.0.2",
            "category": "Key Vault"
          },
          "Mode": "Microsoft.KeyVault.Data",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "'Audit' allows a non-compliant resource to be created, but flags it as non-compliant. 'Deny' blocks the resource creation. 'Disable' turns off the policy."
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.KeyVault.Data/vaults/secrets"
                },
                {
                  "field": "Microsoft.KeyVault.Data/vaults/secrets/attributes.expiresOn",
                  "exists": false
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/98728c90-32c7-4049-8429-847dc0f4fe37"
      },
      {
        "Name": "152b15f7-8e1f-4c1f-ab71-8c010ba5dbc0",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/152b15f7-8e1f-4c1f-ab71-8c010ba5dbc0",
        "ResourceName": "152b15f7-8e1f-4c1f-ab71-8c010ba5dbc0",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Cryptographic keys should have a defined expiration date and not be permanent. Keys that are valid forever provide a potential attacker with more time to compromise the key. It is a recommended security practice to set expiration dates on cryptographic keys.",
          "DisplayName": "Key Vault keys should have an expiration date",
          "Metadata": {
            "version": "1.0.2",
            "category": "Key Vault"
          },
          "Mode": "Microsoft.KeyVault.Data",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "'Audit' allows a non-compliant resource to be created, but flags it as non-compliant. 'Deny' blocks the resource creation. 'Disable' turns off the policy."
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.KeyVault.Data/vaults/keys"
                },
                {
                  "field": "Microsoft.KeyVault.Data/vaults/keys/attributes.expiresOn",
                  "exists": false
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/152b15f7-8e1f-4c1f-ab71-8c010ba5dbc0"
      },
      {
        "Name": "3c735d8a-a4ba-4a3a-b7cf-db7754cf57f4",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/3c735d8a-a4ba-4a3a-b7cf-db7754cf57f4",
        "ResourceName": "3c735d8a-a4ba-4a3a-b7cf-db7754cf57f4",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit the OS vulnerabilities on your virtual machine scale sets to protect them from attacks.",
          "DisplayName": "Vulnerabilities in security configuration on your virtual machine scale sets should be remediated",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Compute/virtualMachineScaleSets"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "8941d121-f740-35f6-952c-6561d2b38d36",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3c735d8a-a4ba-4a3a-b7cf-db7754cf57f4"
      },
      {
        "Name": "26a828e1-e88f-464e-bbb3-c134a282b9de",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/26a828e1-e88f-464e-bbb3-c134a282b9de",
        "ResourceName": "26a828e1-e88f-464e-bbb3-c134a282b9de",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit the existence and health of an endpoint protection solution on your virtual machines scale sets, to protect them from threats and vulnerabilities.",
          "DisplayName": "Endpoint protection solution should be installed on virtual machine scale sets",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Compute/virtualMachineScaleSets"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "e71020c2-860c-3235-cd39-04f3f8c936d2",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/26a828e1-e88f-464e-bbb3-c134a282b9de"
      },
      {
        "Name": "c3f317a7-a95c-4547-b7e7-11017ebdf2fe",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/c3f317a7-a95c-4547-b7e7-11017ebdf2fe",
        "ResourceName": "c3f317a7-a95c-4547-b7e7-11017ebdf2fe",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit whether there are any missing system security updates and critical updates that should be installed to ensure that your Windows and Linux virtual machine scale sets are secure.",
          "DisplayName": "System updates on virtual machine scale sets should be installed",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Compute/virtualMachineScaleSets"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "bd20bd91-aaf1-7f14-b6e4-866de2f43146",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c3f317a7-a95c-4547-b7e7-11017ebdf2fe"
      },
      {
        "Name": "ae89ebca-1c92-4898-ac2c-9f63decb045c",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/ae89ebca-1c92-4898-ac2c-9f63decb045c",
        "ResourceName": "ae89ebca-1c92-4898-ac2c-9f63decb045c",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "To ensure secure configurations of in-guest settings of your machine, install the Guest Configuration extension. In-guest settings that the extension monitors include the configuration of the operating system, application configuration or presence, and environment settings. Once installed, in-guest policies will be available such as 'Windows Exploit guard should be enabled'. Learn more at https://aka.ms/gcpol.",
          "DisplayName": "Guest Configuration extension should be installed on your machines",
          "Metadata": {
            "version": "1.0.2",
            "category": "Security Center"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.Compute/imagePublisher",
                      "in": [
                        "esri",
                        "incredibuild",
                        "MicrosoftDynamicsAX",
                        "MicrosoftSharepoint",
                        "MicrosoftVisualStudio",
                        "MicrosoftWindowsDesktop",
                        "MicrosoftWindowsServerHPCPack",
                        "microsoft-aks",
                        "qubole-inc",
                        "datastax",
                        "couchbase",
                        "scalegrid",
                        "checkpoint",
                        "paloaltonetworks",
                        "debian"
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "MicrosoftWindowsServer"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "notLike": "2008*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "MicrosoftSQLServer"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "notLike": "SQL2008*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "microsoft-dsvm"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "dsvm-windows"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "microsoft-ads"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "in": [
                            "standard-data-science-vm",
                            "windows-data-science-vm"
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "batch"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "rendering-windows2016"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "center-for-internet-security-inc"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "like": "cis-windows-server-201*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "pivotal"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "like": "bosh-windows-server*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "cloud-infrastructure-services"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "like": "ad*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                              "exists": "true"
                            },
                            {
                              "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                              "like": "Windows*"
                            }
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "exists": "false"
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "OpenLogic"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "like": "CentOS*"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "notLike": "6*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Oracle"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "Oracle-Linux"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "notLike": "6*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "RedHat"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "in": [
                            "RHEL",
                            "RHEL-HA",
                            "RHEL-SAP",
                            "RHEL-SAP-APPS",
                            "RHEL-SAP-HA",
                            "RHEL-SAP-HANA"
                          ]
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "notLike": "6*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "RedHat"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "in": [
                            "osa",
                            "rhel-byos"
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "center-for-internet-security-inc"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "in": [
                            "cis-centos-7-l1",
                            "cis-centos-7-v2-1-1-l1",
                            "cis-centos-8-l1",
                            "cis-debian-linux-8-l1",
                            "cis-debian-linux-9-l1",
                            "cis-nginx-centos-7-v1-1-0-l1",
                            "cis-oracle-linux-7-v2-0-0-l1",
                            "cis-oracle-linux-8-l1",
                            "cis-postgresql-11-centos-linux-7-level-1",
                            "cis-rhel-7-l2",
                            "cis-rhel-7-v2-2-0-l1",
                            "cis-rhel-8-l1",
                            "cis-suse-linux-12-v2-0-0-l1",
                            "cis-ubuntu-linux-1604-v1-0-0-l1",
                            "cis-ubuntu-linux-1804-l1"
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "credativ"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "Debian"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "notLike": "7*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Suse"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "like": "SLES*"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "notLike": "11*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Canonical"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "UbuntuServer"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "notLike": "12*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "microsoft-dsvm"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "in": [
                            "linux-data-science-vm-ubuntu",
                            "azureml"
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "cloudera"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "cloudera-centos-os"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "notLike": "6*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "cloudera"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "cloudera-altus-centos-os"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "microsoft-ads"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "like": "linux*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/virtualMachines/osProfile.linuxConfiguration",
                              "exists": "true"
                            },
                            {
                              "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                              "like": "Linux*"
                            }
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "exists": "false"
                            },
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "notIn": [
                                "OpenLogic",
                                "RedHat",
                                "credativ",
                                "Suse",
                                "Canonical",
                                "microsoft-dsvm",
                                "cloudera",
                                "microsoft-ads",
                                "center-for-internet-security-inc",
                                "Oracle",
                                "AzureDatabricks"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Compute/virtualMachines/extensions",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                      "equals": "Microsoft.GuestConfiguration"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                      "equals": "Succeeded"
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ae89ebca-1c92-4898-ac2c-9f63decb045c"
      },
      {
        "Name": "d26f7642-7545-4e18-9b75-8c9bbdee3a9a",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/d26f7642-7545-4e18-9b75-8c9bbdee3a9a",
        "ResourceName": "d26f7642-7545-4e18-9b75-8c9bbdee3a9a",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "The Guest Configuration extension requires a system assigned managed identity. Azure virtual machines in the scope of this policy will be non-compliant when they have the Guest Configuration extension installed but do not have a system assigned managed identity. Learn more at https://aka.ms/gcpol",
          "DisplayName": "Virtual machines' Guest Configuration extension should be deployed with system-assigned managed identity",
          "Metadata": {
            "version": "1.0.1",
            "category": "Security Center"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines/extensions"
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                  "equals": "Microsoft.GuestConfiguration"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Compute/virtualMachines",
                "name": "[first(split(field('fullName'), '/'))]",
                "existenceCondition": {
                  "field": "identity.type",
                  "contains": "SystemAssigned"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d26f7642-7545-4e18-9b75-8c9bbdee3a9a"
      },
      {
        "Name": "bed48b13-6647-468e-aa2f-1af1d3f4dd40",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/bed48b13-6647-468e-aa2f-1af1d3f4dd40",
        "ResourceName": "bed48b13-6647-468e-aa2f-1af1d3f4dd40",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Windows Defender Exploit Guard uses the Azure Policy Guest Configuration agent. Exploit Guard has four components that are designed to lock down devices against a wide variety of attack vectors and block behaviors commonly used in malware attacks while enabling enterprises to balance their security risk and productivity requirements (Windows only).",
          "DisplayName": "Windows Defender Exploit Guard should be enabled on your machines",
          "Metadata": {
            "category": "Guest Configuration",
            "version": "2.0.0",
            "requiredProviders": [
              "Microsoft.GuestConfiguration"
            ],
            "guestConfiguration": {
              "name": "WindowsDefenderExploitGuard",
              "version": "1.*",
              "configurationParameter": {
                "NotAvailableMachineState": "[WindowsDefenderExploitGuard]WindowsDefenderExploitGuard1;NotAvailableMachineState"
              }
            }
          },
          "Mode": "Indexed",
          "Parameters": {
            "IncludeArcMachines": {
              "type": "String",
              "metadata": {
                "displayName": "Include Arc connected servers",
                "description": "By selecting this option, you agree to be charged monthly per Arc connected machine.",
                "portalReview": "true"
              },
              "allowedValues": [
                "true",
                "false"
              ],
              "defaultValue": "false"
            },
            "NotAvailableMachineState": {
              "type": "String",
              "metadata": {
                "displayName": "Status if Windows Defender is not available on machine",
                "description": "Windows Defender Exploit Guard is only available starting with Windows 10/Windows Server with update 1709. Setting this value to 'Non-Compliant' shows machines with older versions on which Windows Defender Exploit Guard is not available (such as Windows Server 2012 R2) as non-compliant. Setting this value to 'Compliant' shows these machines as compliant."
              },
              "allowedValues": [
                "Compliant",
                "Non-Compliant"
              ],
              "defaultValue": "Compliant"
            },
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of this policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "anyOf": [
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "in": [
                            "esri",
                            "incredibuild",
                            "MicrosoftDynamicsAX",
                            "MicrosoftSharepoint",
                            "MicrosoftVisualStudio",
                            "MicrosoftWindowsDesktop",
                            "MicrosoftWindowsServerHPCPack"
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "2008*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftSQLServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "notLike": "SQL2008*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-dsvm"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "dsvm-win*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "standard-data-science-vm",
                                "windows-data-science-vm"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "batch"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "rendering-windows2016"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "center-for-internet-security-inc"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "cis-windows-server-201*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "pivotal"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "bosh-windows-server*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloud-infrastructure-services"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "ad*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                  "exists": "true"
                                },
                                {
                                  "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                  "like": "Windows*"
                                }
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "exists": "false"
                                },
                                {
                                  "allOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "notLike": "2008*"
                                    },
                                    {
                                      "field": "Microsoft.Compute/imageOffer",
                                      "notLike": "SQL2008*"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "allOf": [
                    {
                      "value": "[parameters('IncludeArcMachines')]",
                      "equals": "true"
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "type",
                              "equals": "Microsoft.HybridCompute/machines"
                            },
                            {
                              "field": "Microsoft.HybridCompute/imageOffer",
                              "like": "windows*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "type",
                              "equals": "Microsoft.ConnectedVMwarevSphere/virtualMachines"
                            },
                            {
                              "field": "Microsoft.ConnectedVMwarevSphere/virtualMachines/osProfile.osType",
                              "like": "windows*"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                "name": "WindowsDefenderExploitGuard",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                      "equals": "Compliant"
                    },
                    {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                      "equals": "[base64(concat('[WindowsDefenderExploitGuard]WindowsDefenderExploitGuard1;NotAvailableMachineState', '=', parameters('NotAvailableMachineState')))]"
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bed48b13-6647-468e-aa2f-1af1d3f4dd40"
      },
      {
        "Name": "72650e9f-97bc-4b2a-ab5f-9781a9fcecbc",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/72650e9f-97bc-4b2a-ab5f-9781a9fcecbc",
        "ResourceName": "72650e9f-97bc-4b2a-ab5f-9781a9fcecbc",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Requires that prerequisites are deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol. Machines are non-compliant if the machine is not configured correctly for one of the recommendations in the Azure compute security baseline.",
          "DisplayName": "Windows machines should meet requirements of the Azure compute security baseline",
          "Metadata": {
            "category": "Guest Configuration",
            "version": "2.0.0",
            "requiredProviders": [
              "Microsoft.GuestConfiguration"
            ],
            "guestConfiguration": {
              "name": "AzureWindowsBaseline",
              "version": "1.*"
            }
          },
          "Mode": "Indexed",
          "Parameters": {
            "IncludeArcMachines": {
              "type": "String",
              "metadata": {
                "displayName": "Include Arc connected servers",
                "description": "By selecting this option, you agree to be charged monthly per Arc connected machine.",
                "portalReview": "true"
              },
              "allowedValues": [
                "true",
                "false"
              ],
              "defaultValue": "false"
            },
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of this policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "anyOf": [
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "in": [
                            "esri",
                            "incredibuild",
                            "MicrosoftDynamicsAX",
                            "MicrosoftSharepoint",
                            "MicrosoftVisualStudio",
                            "MicrosoftWindowsDesktop",
                            "MicrosoftWindowsServerHPCPack"
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "2008*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftSQLServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "notLike": "SQL2008*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-dsvm"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "dsvm-win*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "standard-data-science-vm",
                                "windows-data-science-vm"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "batch"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "rendering-windows2016"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "center-for-internet-security-inc"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "cis-windows-server-201*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "pivotal"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "bosh-windows-server*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloud-infrastructure-services"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "ad*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                  "exists": "true"
                                },
                                {
                                  "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                  "like": "Windows*"
                                }
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "exists": "false"
                                },
                                {
                                  "allOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "notLike": "2008*"
                                    },
                                    {
                                      "field": "Microsoft.Compute/imageOffer",
                                      "notLike": "SQL2008*"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "allOf": [
                    {
                      "value": "[parameters('IncludeArcMachines')]",
                      "equals": "true"
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "type",
                              "equals": "Microsoft.HybridCompute/machines"
                            },
                            {
                              "field": "Microsoft.HybridCompute/imageOffer",
                              "like": "windows*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "type",
                              "equals": "Microsoft.ConnectedVMwarevSphere/virtualMachines"
                            },
                            {
                              "field": "Microsoft.ConnectedVMwarevSphere/virtualMachines/osProfile.osType",
                              "like": "windows*"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                "name": "AzureWindowsBaseline",
                "existenceCondition": {
                  "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                  "equals": "Compliant"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/72650e9f-97bc-4b2a-ab5f-9781a9fcecbc"
      },
      {
        "Name": "fc9b3da7-8347-4380-8e70-0a0361d8dedd",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/fc9b3da7-8347-4380-8e70-0a0361d8dedd",
        "ResourceName": "fc9b3da7-8347-4380-8e70-0a0361d8dedd",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Requires that prerequisites are deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol. Machines are non-compliant if the machine is not configured correctly for one of the recommendations in the Azure compute security baseline.",
          "DisplayName": "Linux machines should meet requirements for the Azure compute security baseline",
          "Metadata": {
            "category": "Guest Configuration",
            "version": "2.0.0",
            "requiredProviders": [
              "Microsoft.GuestConfiguration"
            ],
            "guestConfiguration": {
              "name": "AzureLinuxBaseline",
              "version": "1.*"
            }
          },
          "Mode": "Indexed",
          "Parameters": {
            "IncludeArcMachines": {
              "type": "String",
              "metadata": {
                "displayName": "Include Arc connected servers",
                "description": "By selecting this option, you agree to be charged monthly per Arc connected machine.",
                "portalReview": "true"
              },
              "allowedValues": [
                "true",
                "false"
              ],
              "defaultValue": "false"
            },
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of this policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "anyOf": [
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "in": [
                            "microsoft-aks",
                            "qubole-inc",
                            "datastax",
                            "couchbase",
                            "scalegrid",
                            "checkpoint",
                            "paloaltonetworks",
                            "debian"
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "OpenLogic"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "CentOS*"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "6*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Oracle"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Oracle-Linux"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "6*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "RedHat"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "RHEL",
                                "RHEL-HA",
                                "RHEL-SAP",
                                "RHEL-SAP-APPS",
                                "RHEL-SAP-HA",
                                "RHEL-SAP-HANA"
                              ]
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "6*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "RedHat"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "osa",
                                "rhel-byos"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "center-for-internet-security-inc"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "cis-centos-7-l1",
                                "cis-centos-7-v2-1-1-l1",
                                "cis-centos-8-l1",
                                "cis-debian-linux-8-l1",
                                "cis-debian-linux-9-l1",
                                "cis-nginx-centos-7-v1-1-0-l1",
                                "cis-oracle-linux-7-v2-0-0-l1",
                                "cis-oracle-linux-8-l1",
                                "cis-postgresql-11-centos-linux-7-level-1",
                                "cis-rhel-7-l2",
                                "cis-rhel-7-v2-2-0-l1",
                                "cis-rhel-8-l1",
                                "cis-suse-linux-12-v2-0-0-l1",
                                "cis-ubuntu-linux-1604-v1-0-0-l1",
                                "cis-ubuntu-linux-1804-l1"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "credativ"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Debian"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "7*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Suse"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "SLES*"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "11*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Canonical"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "contains": "Ubuntu"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "12*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-dsvm"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "linux-data-science-vm-ubuntu",
                                "azureml",
                                "ubuntu-hpc",
                                "ubuntu-1804"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloudera"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "cloudera-centos-os"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "6*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloudera"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "cloudera-altus-centos-os"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "linux*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/virtualMachines/osProfile.linuxConfiguration",
                                  "exists": "true"
                                },
                                {
                                  "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                  "like": "Linux*"
                                }
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "exists": "false"
                                },
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "notIn": [
                                    "OpenLogic",
                                    "RedHat",
                                    "credativ",
                                    "Suse",
                                    "Canonical",
                                    "microsoft-dsvm",
                                    "cloudera",
                                    "microsoft-ads",
                                    "center-for-internet-security-inc",
                                    "Oracle",
                                    "AzureDatabricks",
                                    "azureopenshift"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "allOf": [
                    {
                      "value": "[parameters('IncludeArcMachines')]",
                      "equals": "true"
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "type",
                              "equals": "Microsoft.HybridCompute/machines"
                            },
                            {
                              "field": "Microsoft.HybridCompute/imageOffer",
                              "like": "linux*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "type",
                              "equals": "Microsoft.ConnectedVMwarevSphere/virtualMachines"
                            },
                            {
                              "field": "Microsoft.ConnectedVMwarevSphere/virtualMachines/osProfile.osType",
                              "like": "linux*"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                "name": "AzureLinuxBaseline",
                "existenceCondition": {
                  "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                  "equals": "Compliant"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/fc9b3da7-8347-4380-8e70-0a0361d8dedd"
      },
      {
        "Name": "383856f8-de7f-44a2-81fc-e5135b5c2aa4",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/383856f8-de7f-44a2-81fc-e5135b5c2aa4",
        "ResourceName": "383856f8-de7f-44a2-81fc-e5135b5c2aa4",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised",
          "DisplayName": "Resource logs in IoT Hub should be enabled",
          "Metadata": {
            "version": "3.0.1",
            "category": "Internet of Things"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            },
            "requiredRetentionDays": {
              "type": "String",
              "metadata": {
                "displayName": "Required retention (days)",
                "description": "The required resource logs retention in days"
              },
              "defaultValue": "365"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Devices/IotHubs"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "greaterOrEquals": "[parameters('requiredRetentionDays')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "not": {
                                "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                "equals": "true"
                              }
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/383856f8-de7f-44a2-81fc-e5135b5c2aa4"
      },
      {
        "Name": "7c1b1214-f927-48bf-8882-84f0af6588b1",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/7c1b1214-f927-48bf-8882-84f0af6588b1",
        "ResourceName": "7c1b1214-f927-48bf-8882-84f0af6588b1",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "It is recommended to enable Logs so that activity trail can be recreated when investigations are required in the event of an incident or a compromise.",
          "DisplayName": "Resource logs in Virtual Machine Scale Sets should be enabled",
          "Metadata": {
            "version": "2.1.0",
            "category": "Compute"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            },
            "includeAKSClusters": {
              "type": "Boolean",
              "metadata": {
                "displayName": "Include AKS Clusters",
                "description": "Whether to include AKS Clusters to resource logs extension - True or False"
              },
              "defaultValue": false
            }
          },
          "PolicyRule": {
            "if": {
              "anyOf": [
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachineScaleSets"
                    },
                    {
                      "value": "[parameters('includeAKSClusters')]",
                      "equals": true
                    }
                  ]
                },
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachineScaleSets"
                    },
                    {
                      "value": "[parameters('includeAKSClusters')]",
                      "equals": false
                    },
                    {
                      "field": "Microsoft.Compute/imagePublisher",
                      "notEquals": "microsoft-aks"
                    },
                    {
                      "field": "Microsoft.Compute/imageOffer",
                      "notEquals": "aks"
                    },
                    {
                      "field": "Microsoft.Compute/imageSKU",
                      "notLike": "aks*"
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
                "existenceCondition": {
                  "anyOf": [
                    {
                      "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/publisher",
                      "equals": "Microsoft.AKS"
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/type",
                          "equals": "IaaSDiagnostics"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/publisher",
                          "equals": "Microsoft.Azure.Diagnostics"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/type",
                          "equals": "LinuxDiagnostic"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/publisher",
                          "in": [
                            "Microsoft.OSTCExtensions",
                            "Microsoft.Azure.Diagnostics"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7c1b1214-f927-48bf-8882-84f0af6588b1"
      },
      {
        "Name": "34c877ad-507e-4c82-993e-3452a6e0ad3c",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/34c877ad-507e-4c82-993e-3452a6e0ad3c",
        "ResourceName": "34c877ad-507e-4c82-993e-3452a6e0ad3c",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Network access to storage accounts should be restricted. Configure network rules so only applications from allowed networks can access the storage account. To allow connections from specific internet or on-premises clients, access can be granted to traffic from specific Azure virtual networks or to public internet IP address ranges",
          "DisplayName": "Storage accounts should restrict network access",
          "Metadata": {
            "version": "1.1.1",
            "category": "Storage"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "The effect determines what happens when the policy rule is evaluated to match"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Storage/storageAccounts"
                },
                {
                  "field": "Microsoft.Storage/storageAccounts/networkAcls.defaultAction",
                  "notEquals": "Deny"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/34c877ad-507e-4c82-993e-3452a6e0ad3c"
      },
      {
        "Name": "a451c1ef-c6ca-483d-87ed-f49761e3ffb5",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/a451c1ef-c6ca-483d-87ed-f49761e3ffb5",
        "ResourceName": "a451c1ef-c6ca-483d-87ed-f49761e3ffb5",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit built-in roles such as 'Owner, Contributer, Reader' instead of custom RBAC roles, which are error prone. Using custom roles is treated as an exception and requires a rigorous review and threat modeling",
          "DisplayName": "Audit usage of custom RBAC rules",
          "Metadata": {
            "version": "1.0.0",
            "category": "General"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Authorization/roleDefinitions"
                },
                {
                  "field": "Microsoft.Authorization/roleDefinitions/type",
                  "equals": "CustomRole"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a451c1ef-c6ca-483d-87ed-f49761e3ffb5"
      },
      {
        "Name": "f9be5368-9bf5-4b84-9e0a-7850da98bb46",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/f9be5368-9bf5-4b84-9e0a-7850da98bb46",
        "ResourceName": "f9be5368-9bf5-4b84-9e0a-7850da98bb46",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised",
          "DisplayName": "Resource logs in Azure Stream Analytics should be enabled",
          "Metadata": {
            "version": "5.0.0",
            "category": "Stream Analytics"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            },
            "requiredRetentionDays": {
              "type": "String",
              "metadata": {
                "displayName": "Required retention (days)",
                "description": "The required resource logs retention in days"
              },
              "defaultValue": "365"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.StreamAnalytics/streamingJobs"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f9be5368-9bf5-4b84-9e0a-7850da98bb46"
      },
      {
        "Name": "404c3081-a854-4457-ae30-26a93ef643f9",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/404c3081-a854-4457-ae30-26a93ef643f9",
        "ResourceName": "404c3081-a854-4457-ae30-26a93ef643f9",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking",
          "DisplayName": "Secure transfer to storage accounts should be enabled",
          "Metadata": {
            "version": "2.0.0",
            "category": "Storage"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "The effect determines what happens when the policy rule is evaluated to match"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Storage/storageAccounts"
                },
                {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "value": "[requestContext().apiVersion]",
                          "less": "2019-04-01"
                        },
                        {
                          "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
                          "exists": "false"
                        }
                      ]
                    },
                    {
                      "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
                      "equals": "false"
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/404c3081-a854-4457-ae30-26a93ef643f9"
      },
      {
        "Name": "1f314764-cb73-4fc9-b863-8eca98ac36e9",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1f314764-cb73-4fc9-b863-8eca98ac36e9",
        "ResourceName": "1f314764-cb73-4fc9-b863-8eca98ac36e9",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit provisioning of an Azure Active Directory administrator for your SQL server to enable Azure AD authentication. Azure AD authentication enables simplified permission management and centralized identity management of database users and other Microsoft services",
          "DisplayName": "An Azure Active Directory administrator should be provisioned for SQL servers",
          "Metadata": {
            "version": "1.0.0",
            "category": "SQL"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Sql/servers"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Sql/servers/administrators"
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1f314764-cb73-4fc9-b863-8eca98ac36e9"
      },
      {
        "Name": "f8d36e2f-389b-4ee4-898d-21aeb69a0f45",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/f8d36e2f-389b-4ee4-898d-21aeb69a0f45",
        "ResourceName": "f8d36e2f-389b-4ee4-898d-21aeb69a0f45",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised",
          "DisplayName": "Resource logs in Service Bus should be enabled",
          "Metadata": {
            "version": "5.0.0",
            "category": "Service Bus"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            },
            "requiredRetentionDays": {
              "type": "String",
              "metadata": {
                "displayName": "Required retention (days)",
                "description": "The required resource logs retention in days"
              },
              "defaultValue": "365"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.ServiceBus/namespaces"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f8d36e2f-389b-4ee4-898d-21aeb69a0f45"
      },
      {
        "Name": "617c02be-7f02-4efd-8836-3180d47b6c68",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/617c02be-7f02-4efd-8836-3180d47b6c68",
        "ResourceName": "617c02be-7f02-4efd-8836-3180d47b6c68",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Service Fabric provides three levels of protection (None, Sign and EncryptAndSign) for node-to-node communication using a primary cluster certificate. Set the protection level to ensure that all node-to-node messages are encrypted and digitally signed",
          "DisplayName": "Service Fabric clusters should have the ClusterProtectionLevel property set to EncryptAndSign",
          "Metadata": {
            "version": "1.1.0",
            "category": "Service Fabric"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "The effect determines what happens when the policy rule is evaluated to match"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ServiceFabric/clusters"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.ServiceFabric/clusters/fabricSettings[*].name",
                      "notEquals": "Security"
                    },
                    {
                      "field": "Microsoft.ServiceFabric/clusters/fabricSettings[*].parameters[*].name",
                      "notEquals": "ClusterProtectionLevel"
                    },
                    {
                      "field": "Microsoft.ServiceFabric/clusters/fabricSettings[*].parameters[*].value",
                      "notEquals": "EncryptAndSign"
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/617c02be-7f02-4efd-8836-3180d47b6c68"
      },
      {
        "Name": "b54ed75b-3e1a-44ac-a333-05ba39b99ff0",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/b54ed75b-3e1a-44ac-a333-05ba39b99ff0",
        "ResourceName": "b54ed75b-3e1a-44ac-a333-05ba39b99ff0",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit usage of client authentication only via Azure Active Directory in Service Fabric",
          "DisplayName": "Service Fabric clusters should only use Azure Active Directory for client authentication",
          "Metadata": {
            "version": "1.1.0",
            "category": "Service Fabric"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "The effect determines what happens when the policy rule is evaluated to match"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ServiceFabric/clusters"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.ServiceFabric/clusters/azureActiveDirectory.tenantId",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.ServiceFabric/clusters/azureActiveDirectory.tenantId",
                      "equals": ""
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b54ed75b-3e1a-44ac-a333-05ba39b99ff0"
      },
      {
        "Name": "b4330a05-a843-4bc8-bf9a-cacce50c67f4",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/b4330a05-a843-4bc8-bf9a-cacce50c67f4",
        "ResourceName": "b4330a05-a843-4bc8-bf9a-cacce50c67f4",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised",
          "DisplayName": "Resource logs in Search services should be enabled",
          "Metadata": {
            "version": "5.0.0",
            "category": "Search"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            },
            "requiredRetentionDays": {
              "type": "String",
              "metadata": {
                "displayName": "Required retention (days)",
                "description": "The required resource logs retention in days"
              },
              "defaultValue": "365"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Search/searchServices"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b4330a05-a843-4bc8-bf9a-cacce50c67f4"
      },
      {
        "Name": "22bee202-a82f-4305-9a2a-6d7f44d4dedb",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/22bee202-a82f-4305-9a2a-6d7f44d4dedb",
        "ResourceName": "22bee202-a82f-4305-9a2a-6d7f44d4dedb",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit enabling of only connections via SSL to Azure Cache for Redis. Use of secure connections ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking",
          "DisplayName": "Only secure connections to your Azure Cache for Redis should be enabled",
          "Metadata": {
            "version": "1.0.0",
            "category": "Cache"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "The effect determines what happens when the policy rule is evaluated to match"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Cache/redis"
                },
                {
                  "field": "Microsoft.Cache/Redis/enableNonSslPort",
                  "equals": "true"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/22bee202-a82f-4305-9a2a-6d7f44d4dedb"
      },
      {
        "Name": "34f95f76-5386-4de7-b824-0d8478470c9d",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/34f95f76-5386-4de7-b824-0d8478470c9d",
        "ResourceName": "34f95f76-5386-4de7-b824-0d8478470c9d",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised",
          "DisplayName": "Resource logs in Logic Apps should be enabled",
          "Metadata": {
            "version": "5.0.0",
            "category": "Logic Apps"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            },
            "requiredRetentionDays": {
              "type": "String",
              "metadata": {
                "displayName": "Required retention (days)",
                "description": "The required resource logs retention in days"
              },
              "defaultValue": "365"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Logic/workflows"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/34f95f76-5386-4de7-b824-0d8478470c9d"
      },
      {
        "Name": "cf820ca0-f99e-4f3e-84fb-66e913812d21",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/cf820ca0-f99e-4f3e-84fb-66e913812d21",
        "ResourceName": "cf820ca0-f99e-4f3e-84fb-66e913812d21",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes when a security incident occurs or when your network is compromised",
          "DisplayName": "Resource logs in Key Vault should be enabled",
          "Metadata": {
            "version": "5.0.0",
            "category": "Key Vault"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            },
            "requiredRetentionDays": {
              "type": "String",
              "metadata": {
                "displayName": "Required retention (days)",
                "description": "The required resource logs retention in days"
              },
              "defaultValue": "365"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.KeyVault/vaults"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/cf820ca0-f99e-4f3e-84fb-66e913812d21"
      },
      {
        "Name": "83a214f7-d01a-484b-91a9-ed54470c9a6a",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/83a214f7-d01a-484b-91a9-ed54470c9a6a",
        "ResourceName": "83a214f7-d01a-484b-91a9-ed54470c9a6a",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised",
          "DisplayName": "Resource logs in Event Hub should be enabled",
          "Metadata": {
            "version": "5.0.0",
            "category": "Event Hub"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            },
            "requiredRetentionDays": {
              "type": "String",
              "metadata": {
                "displayName": "Required retention (days)",
                "description": "The required resource logs retention in days"
              },
              "defaultValue": "365"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.EventHub/namespaces"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/83a214f7-d01a-484b-91a9-ed54470c9a6a"
      },
      {
        "Name": "057ef27e-665e-4328-8ea3-04b3122bd9fb",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/057ef27e-665e-4328-8ea3-04b3122bd9fb",
        "ResourceName": "057ef27e-665e-4328-8ea3-04b3122bd9fb",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised",
          "DisplayName": "Resource logs in Azure Data Lake Store should be enabled",
          "Metadata": {
            "version": "5.0.0",
            "category": "Data Lake"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            },
            "requiredRetentionDays": {
              "type": "String",
              "metadata": {
                "displayName": "Required retention (days)",
                "description": "The required resource logs retention in days"
              },
              "defaultValue": "365"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.DataLakeStore/accounts"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/057ef27e-665e-4328-8ea3-04b3122bd9fb"
      },
      {
        "Name": "c95c74d9-38fe-4f0d-af86-0c7d626a315c",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/c95c74d9-38fe-4f0d-af86-0c7d626a315c",
        "ResourceName": "c95c74d9-38fe-4f0d-af86-0c7d626a315c",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised",
          "DisplayName": "Resource logs in Data Lake Analytics should be enabled",
          "Metadata": {
            "version": "5.0.0",
            "category": "Data Lake"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            },
            "requiredRetentionDays": {
              "type": "String",
              "metadata": {
                "displayName": "Required retention (days)",
                "description": "The required resource logs retention in days"
              },
              "defaultValue": "365"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.DataLakeAnalytics/accounts"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c95c74d9-38fe-4f0d-af86-0c7d626a315c"
      },
      {
        "Name": "37e0d2fe-28a5-43d6-a273-67d37d1f5606",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/37e0d2fe-28a5-43d6-a273-67d37d1f5606",
        "ResourceName": "37e0d2fe-28a5-43d6-a273-67d37d1f5606",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Use new Azure Resource Manager for your storage accounts to provide security enhancements such as: stronger access control (RBAC), better auditing, Azure Resource Manager based deployment and governance, access to managed identities, access to key vault for secrets, Azure AD-based authentication and support for tags and resource groups for easier security management",
          "DisplayName": "Storage accounts should be migrated to new Azure Resource Manager resources",
          "Metadata": {
            "version": "1.0.0",
            "category": "Storage"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "The effect determines what happens when the policy rule is evaluated to match"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "in": [
                    "Microsoft.ClassicStorage/storageAccounts",
                    "Microsoft.Storage/StorageAccounts"
                  ]
                },
                {
                  "value": "[field('type')]",
                  "equals": "Microsoft.ClassicStorage/storageAccounts"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/37e0d2fe-28a5-43d6-a273-67d37d1f5606"
      },
      {
        "Name": "1d84d5fb-01f6-4d12-ba4f-4a26081d403d",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1d84d5fb-01f6-4d12-ba4f-4a26081d403d",
        "ResourceName": "1d84d5fb-01f6-4d12-ba4f-4a26081d403d",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Use new Azure Resource Manager for your virtual machines to provide security enhancements such as: stronger access control (RBAC), better auditing, Azure Resource Manager based deployment and governance, access to managed identities, access to key vault for secrets, Azure AD-based authentication and support for tags and resource groups for easier security management",
          "DisplayName": "Virtual machines should be migrated to new Azure Resource Manager resources",
          "Metadata": {
            "version": "1.0.0",
            "category": "Compute"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "The effect determines what happens when the policy rule is evaluated to match"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "in": [
                    "Microsoft.ClassicCompute/virtualMachines",
                    "Microsoft.Compute/virtualMachines"
                  ]
                },
                {
                  "value": "[field('type')]",
                  "equals": "Microsoft.ClassicCompute/virtualMachines"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1d84d5fb-01f6-4d12-ba4f-4a26081d403d"
      },
      {
        "Name": "428256e6-1fac-4f48-a757-df34c2b3336d",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/428256e6-1fac-4f48-a757-df34c2b3336d",
        "ResourceName": "428256e6-1fac-4f48-a757-df34c2b3336d",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised",
          "DisplayName": "Resource logs in Batch accounts should be enabled",
          "Metadata": {
            "version": "5.0.0",
            "category": "Batch"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            },
            "requiredRetentionDays": {
              "type": "String",
              "metadata": {
                "displayName": "Required retention (days)",
                "description": "The required resource logs retention in days"
              },
              "defaultValue": "365"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Batch/batchAccounts"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/428256e6-1fac-4f48-a757-df34c2b3336d"
      },
      {
        "Name": "3657f5a0-770e-44a3-b44e-9431ba1e9735",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/3657f5a0-770e-44a3-b44e-9431ba1e9735",
        "ResourceName": "3657f5a0-770e-44a3-b44e-9431ba1e9735",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "It is important to enable encryption of Automation account variable assets when storing sensitive data",
          "DisplayName": "Automation account variables should be encrypted",
          "Metadata": {
            "version": "1.1.0",
            "category": "Automation"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "The effect determines what happens when the policy rule is evaluated to match"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Automation/automationAccounts/variables"
                },
                {
                  "field": "Microsoft.Automation/automationAccounts/variables/isEncrypted",
                  "notEquals": "true"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3657f5a0-770e-44a3-b44e-9431ba1e9735"
      },
      {
        "Name": "17k78e20-9358-41c9-923c-fb736d382a12",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/17k78e20-9358-41c9-923c-fb736d382a12",
        "ResourceName": "17k78e20-9358-41c9-923c-fb736d382a12",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Transparent data encryption should be enabled to protect data-at-rest and meet compliance requirements",
          "DisplayName": "Transparent Data Encryption on SQL databases should be enabled",
          "Metadata": {
            "version": "2.0.0",
            "category": "SQL"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Sql/servers/databases"
                },
                {
                  "field": "name",
                  "notEquals": "master"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
                "name": "current",
                "existenceCondition": {
                  "anyOf": [
                    {
                      "field": "Microsoft.Sql/transparentDataEncryption.status",
                      "equals": "enabled"
                    },
                    {
                      "field": "Microsoft.Sql/servers/databases/transparentDataEncryption/state",
                      "equals": "enabled"
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/17k78e20-9358-41c9-923c-fb736d382a12"
      },
      {
        "Name": "a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9",
        "ResourceName": "a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Auditing on your SQL Server should be enabled to track database activities across all databases on the server and save them in an audit log.",
          "DisplayName": "Auditing on SQL server should be enabled",
          "Metadata": {
            "version": "2.0.0",
            "category": "SQL"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            },
            "setting": {
              "type": "String",
              "metadata": {
                "displayName": "Desired Auditing setting"
              },
              "allowedValues": [
                "enabled",
                "disabled"
              ],
              "defaultValue": "enabled"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Sql/servers"
                },
                {
                  "field": "kind",
                  "notContains": "analytics"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Sql/servers/auditingSettings",
                "name": "default",
                "existenceCondition": {
                  "field": "Microsoft.Sql/auditingSettings.state",
                  "equals": "[parameters('setting')]"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9"
      },
      {
        "Name": "86b3d65f-7626-441e-b690-81a8b71cff60",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/86b3d65f-7626-441e-b690-81a8b71cff60",
        "ResourceName": "86b3d65f-7626-441e-b690-81a8b71cff60",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Missing security system updates on your servers will be monitored by Azure Security Center as recommendations",
          "DisplayName": "System updates should be installed on your machines",
          "Metadata": {
            "version": "4.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "4ab6e3c5-74dd-8b35-9ab9-f61b30875b27",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/86b3d65f-7626-441e-b690-81a8b71cff60"
      },
      {
        "Name": "f85bf3e0-d513-442e-89c3-1784ad63382b",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/f85bf3e0-d513-442e-89c3-1784ad63382b",
        "ResourceName": "f85bf3e0-d513-442e-89c3-1784ad63382b",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Your machines are missing system, security, and critical updates. Software updates often include critical patches to security holes. Such holes are frequently exploited in malware attacks so it's vital to keep your software updated. To install all outstanding patches and secure your machines, follow the remediation steps.",
          "DisplayName": "[Preview]: System updates should be installed on your machines (powered by Update Center)",
          "Metadata": {
            "version": "1.0.0-preview",
            "preview": true,
            "category": "Security Center"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.HybridCompute/machines"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "e1145ab1-eb4f-43d8-911b-36ddf771d13f",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f85bf3e0-d513-442e-89c3-1784ad63382b"
      },
      {
        "Name": "bd876905-5b84-4f73-ab2d-2e7a7c4568d9",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/bd876905-5b84-4f73-ab2d-2e7a7c4568d9",
        "ResourceName": "bd876905-5b84-4f73-ab2d-2e7a7c4568d9",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "To ensure periodic assessments for missing system updates are triggered automatically every 24 hours, the AssessmentMode property should be set to 'AutomaticByPlatform'. Learn more about AssessmentMode property for Windows: https://aka.ms/computevm-windowspatchassessmentmode, for Linux: https://aka.ms/computevm-linuxpatchassessmentmode.",
          "DisplayName": "[Preview]: Machines should be configured to periodically check for missing system updates",
          "Metadata": {
            "version": "1.0.0-preview",
            "category": "Update Management Center",
            "preview": true
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Policy Effect",
                "description": "The desired effect of the policy."
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "in": [
                    "Microsoft.Compute/virtualMachines",
                    "Microsoft.HybridCompute/machines"
                  ]
                },
                {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "Canonical"
                                },
                                {
                                  "anyOf": [
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "equals": "UbuntuServer"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "equals": "18.04-LTS"
                                        }
                                      ]
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "equals": "0001-com-ubuntu-pro-bionic"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "equals": "pro-18_04-lts"
                                        }
                                      ]
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "equals": "0001-com-ubuntu-server-focal"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "equals": "20_04-lts"
                                        }
                                      ]
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "equals": "0001-com-ubuntu-pro-focal"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "equals": "pro-20_04-lts"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "Redhat"
                                },
                                {
                                  "anyOf": [
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "equals": "RHEL"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "in": [
                                            "7.2",
                                            "7.3",
                                            "7.4",
                                            "7.5",
                                            "7.6",
                                            "7.7",
                                            "7.8",
                                            "7_9",
                                            "7-RAW",
                                            "7-LVM",
                                            "8",
                                            "8.1",
                                            "8.2",
                                            "8_3",
                                            "8_4",
                                            "8-LVM"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "equals": "RHEL-RAW"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "equals": "8-raw"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "OpenLogic"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "Centos"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "in": [
                                    "7.2",
                                    "7.3",
                                    "7.4",
                                    "7.5",
                                    "7.6",
                                    "7.7",
                                    "7_8",
                                    "7_9",
                                    "7-LVM",
                                    "8.0",
                                    "8_1",
                                    "8_2",
                                    "8_3",
                                    "8-lvm"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "SUSE"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "sles-12-sp5",
                                    "sles-15-sp2"
                                  ]
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "in": [
                                    "gen1",
                                    "gen2"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "WindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "in": [
                                    "2008-R2-SP1",
                                    "2012-R2-Datacenter",
                                    "2016-Datacenter",
                                    "2016-Datacenter-Server-Core",
                                    "2019-Datacenter",
                                    "2019-Datacenter-Core"
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "[if(equals(field('Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType'), 'Windows'), field('Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration.patchSettings.assessmentMode'), field('Microsoft.Compute/virtualMachines/osProfile.linuxConfiguration.patchSettings.assessmentMode'))]",
                          "notEquals": "AutomaticByPlatform"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "value": "[if(equals(field('Microsoft.HybridCompute/machines/osName'), 'Windows'), field('Microsoft.HybridCompute/machines/osProfile.windowsConfiguration.patchSettings.assessmentMode'), field('Microsoft.HybridCompute/machines/osProfile.linuxConfiguration.patchSettings.assessmentMode'))]",
                          "notEquals": "AutomaticByPlatform"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bd876905-5b84-4f73-ab2d-2e7a7c4568d9"
      },
      {
        "Name": "b0f33259-77d7-4c9e-aac6-3aabcfae693c",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/b0f33259-77d7-4c9e-aac6-3aabcfae693c",
        "ResourceName": "b0f33259-77d7-4c9e-aac6-3aabcfae693c",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Possible network Just In Time (JIT) access will be monitored by Azure Security Center as recommendations",
          "DisplayName": "Management ports of virtual machines should be protected with just-in-time network access control",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Compute/virtualMachines"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "805651bc-6ecd-4c73-9b55-97a19d0582d0",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b0f33259-77d7-4c9e-aac6-3aabcfae693c"
      },
      {
        "Name": "47a6b606-51aa-4496-8bb7-64b11cf66adc",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/47a6b606-51aa-4496-8bb7-64b11cf66adc",
        "ResourceName": "47a6b606-51aa-4496-8bb7-64b11cf66adc",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Enable application controls to define the list of known-safe applications running on your machines, and alert you when other applications run. This helps harden your machines against malware. To simplify the process of configuring and maintaining your rules, Security Center uses machine learning to analyze the applications running on each machine and suggest the list of known-safe applications.",
          "DisplayName": "Adaptive application controls for defining safe applications should be enabled on your machines",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "35f45c95-27cf-4e52-891f-8390d1de5828",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/47a6b606-51aa-4496-8bb7-64b11cf66adc"
      },
      {
        "Name": "123a3936-f020-408a-ba0c-47873faf1534",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/123a3936-f020-408a-ba0c-47873faf1534",
        "ResourceName": "123a3936-f020-408a-ba0c-47873faf1534",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Monitor for changes in behavior on groups of machines configured for auditing by Azure Security Center's adaptive application controls. Security Center uses machine learning to analyze the running processes on your machines and suggest a list of known-safe applications. These are presented as recommended apps to allow in adaptive application control policies.",
          "DisplayName": "Allowlist rules in your adaptive application control policy should be updated",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "1234abcd-1b53-4fd4-9835-2c2fa3935313",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/123a3936-f020-408a-ba0c-47873faf1534"
      },
      {
        "Name": "e71308d3-144b-4262-b144-efdc3cc90517",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/e71308d3-144b-4262-b144-efdc3cc90517",
        "ResourceName": "e71308d3-144b-4262-b144-efdc3cc90517",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Protect your subnet from potential threats by restricting access to it with a Network Security Group (NSG). NSGs contain a list of Access Control List (ACL) rules that allow or deny network traffic to your subnet.",
          "DisplayName": "Subnets should be associated with a Network Security Group",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Network/virtualNetworks/subnets"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "eade5b56-eefd-444f-95c8-23f29e5d93cb",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e71308d3-144b-4262-b144-efdc3cc90517"
      },
      {
        "Name": "f6de0be7-9a8a-4b8a-b349-43cf02d22f7c",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/f6de0be7-9a8a-4b8a-b349-43cf02d22f7c",
        "ResourceName": "f6de0be7-9a8a-4b8a-b349-43cf02d22f7c",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Protect your virtual machines from potential threats by restricting access to them with network security groups (NSG). Learn more about controlling traffic with NSGs at https://aka.ms/nsg-doc",
          "DisplayName": "Internet-facing virtual machines should be protected with network security groups",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "483f12ed-ae23-447e-a2de-a67a10db4353",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f6de0be7-9a8a-4b8a-b349-43cf02d22f7c"
      },
      {
        "Name": "bb91dfba-c30d-4263-9add-9c2384e659a6",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/bb91dfba-c30d-4263-9add-9c2384e659a6",
        "ResourceName": "bb91dfba-c30d-4263-9add-9c2384e659a6",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Protect your non-internet-facing virtual machines from potential threats by restricting access with network security groups (NSG). Learn more about controlling traffic with NSGs at https://aka.ms/nsg-doc",
          "DisplayName": "Non-internet-facing virtual machines should be protected with network security groups",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "a9341235-9389-42f0-a0bf-9bfb57960d44",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bb91dfba-c30d-4263-9add-9c2384e659a6"
      },
      {
        "Name": "e1e5fd5d-3e4c-4ce1-8661-7d1873ae6b15",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/e1e5fd5d-3e4c-4ce1-8661-7d1873ae6b15",
        "ResourceName": "e1e5fd5d-3e4c-4ce1-8661-7d1873ae6b15",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Servers which do not satisfy the configured baseline will be monitored by Azure Security Center as recommendations",
          "DisplayName": "Vulnerabilities in security configuration on your machines should be remediated",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "181ac480-f7c4-544b-9865-11b8ffe87f47",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e1e5fd5d-3e4c-4ce1-8661-7d1873ae6b15"
      },
      {
        "Name": "af6cd1bd-1635-48cb-bde7-5b15693900b9",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/af6cd1bd-1635-48cb-bde7-5b15693900b9",
        "ResourceName": "af6cd1bd-1635-48cb-bde7-5b15693900b9",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Servers without an installed Endpoint Protection agent will be monitored by Azure Security Center as recommendations",
          "DisplayName": "Monitor missing Endpoint Protection in Azure Security Center",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "83f577bd-a1b6-b7e1-0891-12ca19d1e6df",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/af6cd1bd-1635-48cb-bde7-5b15693900b9"
      },
      {
        "Name": "0961003e-5a0a-4549-abde-af6a37f2724d",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0961003e-5a0a-4549-abde-af6a37f2724d",
        "ResourceName": "0961003e-5a0a-4549-abde-af6a37f2724d",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "By default, a virtual machine's OS and data disks are encrypted-at-rest using platform-managed keys. Temp disks, data caches and data flowing between compute and storage aren't encrypted. Disregard this recommendation if: 1. using encryption-at-host, or 2. server-side encryption on Managed Disks meets your security requirements. Learn more in: Server-side encryption of Azure Disk Storage: https://aka.ms/disksse, Different disk encryption offerings: https://aka.ms/diskencryptioncomparison",
          "DisplayName": "Virtual machines should encrypt temp disks, caches, and data flows between Compute and Storage resources",
          "Metadata": {
            "version": "2.0.3",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "Microsoft.ClassicCompute/virtualMachines",
                "Microsoft.Compute/virtualMachines"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "d57a4221-a804-52ca-3dea-768284f06bb7",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0961003e-5a0a-4549-abde-af6a37f2724d"
      },
      {
        "Name": "501541f7-f7e7-4cd6-868c-4190fdad3ac9",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/501541f7-f7e7-4cd6-868c-4190fdad3ac9",
        "ResourceName": "501541f7-f7e7-4cd6-868c-4190fdad3ac9",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audits virtual machines to detect whether they are running a supported vulnerability assessment solution. A core component of every cyber risk and security program is the identification and analysis of vulnerabilities. Azure Security Center's standard pricing tier includes vulnerability scanning for your virtual machines at no extra cost. Additionally, Security Center can automatically deploy this tool for you.",
          "DisplayName": "A vulnerability assessment solution should be enabled on your virtual machines",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "ffff0522-1e88-47fc-8382-2a80ba848f5d",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/501541f7-f7e7-4cd6-868c-4190fdad3ac9"
      },
      {
        "Name": "9daedab3-fb2d-461e-b861-71790eead4f6",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/9daedab3-fb2d-461e-b861-71790eead4f6",
        "ResourceName": "9daedab3-fb2d-461e-b861-71790eead4f6",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Security Center has identified some of your network security groups' inbound rules to be too permissive. Inbound rules should not allow access from 'Any' or 'Internet' ranges. This can potentially enable attackers to target your resources.",
          "DisplayName": "All network ports should be restricted on network security groups associated to your virtual machine",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "3b20e985-f71f-483b-b078-f30d73936d43",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9daedab3-fb2d-461e-b861-71790eead4f6"
      },
      {
        "Name": "feedbf84-6b99-488c-acc2-71c829aa5ffc",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/feedbf84-6b99-488c-acc2-71c829aa5ffc",
        "ResourceName": "feedbf84-6b99-488c-acc2-71c829aa5ffc",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Monitor vulnerability assessment scan results and recommendations for how to remediate database vulnerabilities.",
          "DisplayName": "SQL databases should have vulnerability findings resolved",
          "Metadata": {
            "version": "4.0.0",
            "category": "Security Center"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Sql/servers",
                "Microsoft.Sql/managedinstances"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "82e20e14-edc5-4373-bfc4-f13121257c37",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/feedbf84-6b99-488c-acc2-71c829aa5ffc"
      },
      {
        "Name": "6ba6d016-e7c3-4842-b8f2-4992ebc0d72d",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/6ba6d016-e7c3-4842-b8f2-4992ebc0d72d",
        "ResourceName": "6ba6d016-e7c3-4842-b8f2-4992ebc0d72d",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "SQL vulnerability assessment scans your database for security vulnerabilities, and exposes any deviations from best practices such as misconfigurations, excessive permissions, and unprotected sensitive data. Resolving the vulnerabilities found can greatly improve your database security posture.",
          "DisplayName": "SQL servers on machines should have vulnerability findings resolved",
          "Metadata": {
            "version": "1.0.0",
            "category": "Security Center"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.HybridCompute/machines"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "f97aa83c-9b63-4f9a-99f6-b22c4398f936",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6ba6d016-e7c3-4842-b8f2-4992ebc0d72d"
      },
      {
        "Name": "4f11b553-d42e-4e3a-89be-32ca364cad4c",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/4f11b553-d42e-4e3a-89be-32ca364cad4c",
        "ResourceName": "4f11b553-d42e-4e3a-89be-32ca364cad4c",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "It is recommended to designate up to 3 subscription owners in order to reduce the potential for breach by a compromised owner.",
          "DisplayName": "A maximum of 3 owners should be designated for your subscription",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "6f90a6d6-d4d6-0794-0ec1-98fa77878c2e",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4f11b553-d42e-4e3a-89be-32ca364cad4c"
      },
      {
        "Name": "09024ccc-0c5f-475e-9457-b7c0d9ed487b",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/09024ccc-0c5f-475e-9457-b7c0d9ed487b",
        "ResourceName": "09024ccc-0c5f-475e-9457-b7c0d9ed487b",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "It is recommended to designate more than one subscription owner in order to have administrator access redundancy.",
          "DisplayName": "There should be more than one owner assigned to your subscription",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "2c79b4af-f830-b61e-92b9-63dfa30f16e4",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/09024ccc-0c5f-475e-9457-b7c0d9ed487b"
      },
      {
        "Name": "aa633080-8b72-40c4-a2d7-d00c03e80bed",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/aa633080-8b72-40c4-a2d7-d00c03e80bed",
        "ResourceName": "aa633080-8b72-40c4-a2d7-d00c03e80bed",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Multi-Factor Authentication (MFA) should be enabled for all subscription accounts with owner permissions to prevent a breach of accounts or resources.",
          "DisplayName": "MFA should be enabled on accounts with owner permissions on your subscription",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "94290b00-4d0c-d7b4-7cea-064a9554e681",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/aa633080-8b72-40c4-a2d7-d00c03e80bed"
      },
      {
        "Name": "e3e008c3-56b9-4133-8fd7-d3347377402a",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/e3e008c3-56b9-4133-8fd7-d3347377402a",
        "ResourceName": "e3e008c3-56b9-4133-8fd7-d3347377402a",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Multi-Factor Authentication (MFA) should be enabled for all subscription accounts with owner permissions to prevent a breach of accounts or resources.",
          "DisplayName": "Accounts with owner permissions on Azure resources should be MFA enabled",
          "Metadata": {
            "version": "1.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "6240402e-f77c-46fa-9060-a7ce53997754",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e3e008c3-56b9-4133-8fd7-d3347377402a"
      },
      {
        "Name": "9297c21d-2ed6-4474-b48f-163f75654ce3",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/9297c21d-2ed6-4474-b48f-163f75654ce3",
        "ResourceName": "9297c21d-2ed6-4474-b48f-163f75654ce3",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Multi-Factor Authentication (MFA) should be enabled for all subscription accounts with write privileges to prevent a breach of accounts or resources.",
          "DisplayName": "MFA should be enabled accounts with write permissions on your subscription",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "57e98606-6b1e-6193-0e3d-fe621387c16b",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9297c21d-2ed6-4474-b48f-163f75654ce3"
      },
      {
        "Name": "931e118d-50a1-4457-a5e4-78550e086c52",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/931e118d-50a1-4457-a5e4-78550e086c52",
        "ResourceName": "931e118d-50a1-4457-a5e4-78550e086c52",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Multi-Factor Authentication (MFA) should be enabled for all subscription accounts with write privileges to prevent a breach of accounts or resources.",
          "DisplayName": "Accounts with write permissions on Azure resources should be MFA enabled",
          "Metadata": {
            "version": "1.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "c0cb17b2-0607-48a7-b0e0-903ed22de39b",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/931e118d-50a1-4457-a5e4-78550e086c52"
      },
      {
        "Name": "e3576e28-8b17-4677-84c3-db2990658d64",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/e3576e28-8b17-4677-84c3-db2990658d64",
        "ResourceName": "e3576e28-8b17-4677-84c3-db2990658d64",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Multi-Factor Authentication (MFA) should be enabled for all subscription accounts with read privileges to prevent a breach of accounts or resources.",
          "DisplayName": "MFA should be enabled on accounts with read permissions on your subscription",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "151e82c5-5341-a74b-1eb0-bc38d2c84bb5",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e3576e28-8b17-4677-84c3-db2990658d64"
      },
      {
        "Name": "81b3ccb4-e6e8-4e4a-8d05-5df25cd29fd4",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/81b3ccb4-e6e8-4e4a-8d05-5df25cd29fd4",
        "ResourceName": "81b3ccb4-e6e8-4e4a-8d05-5df25cd29fd4",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Multi-Factor Authentication (MFA) should be enabled for all subscription accounts with read privileges to prevent a breach of accounts or resources.",
          "DisplayName": "Accounts with read permissions on Azure resources should be MFA enabled",
          "Metadata": {
            "version": "1.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "dabc9bc4-b8a8-45bd-9a5a-43000df8aa1c",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/81b3ccb4-e6e8-4e4a-8d05-5df25cd29fd4"
      },
      {
        "Name": "ebb62a0c-3560-49e1-89ed-27e074e9f8ad",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/ebb62a0c-3560-49e1-89ed-27e074e9f8ad",
        "ResourceName": "ebb62a0c-3560-49e1-89ed-27e074e9f8ad",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Deprecated accounts with owner permissions should be removed from your subscription.  Deprecated accounts are accounts that have been blocked from signing in.",
          "DisplayName": "Deprecated accounts with owner permissions should be removed from your subscription",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "e52064aa-6853-e252-a11e-dffc675689c2",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ebb62a0c-3560-49e1-89ed-27e074e9f8ad"
      },
      {
        "Name": "0cfea604-3201-4e14-88fc-fae4c427a6c5",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0cfea604-3201-4e14-88fc-fae4c427a6c5",
        "ResourceName": "0cfea604-3201-4e14-88fc-fae4c427a6c5",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Deprecated accounts with owner permissions should be removed from your subscription.  Deprecated accounts are accounts that have been blocked from signing in.",
          "DisplayName": "Blocked accounts with owner permissions on Azure resources should be removed",
          "Metadata": {
            "version": "1.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "050ac097-3dda-4d24-ab6d-82568e7a50cf",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0cfea604-3201-4e14-88fc-fae4c427a6c5"
      },
      {
        "Name": "6b1cbf55-e8b6-442f-ba4c-7246b6381474",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/6b1cbf55-e8b6-442f-ba4c-7246b6381474",
        "ResourceName": "6b1cbf55-e8b6-442f-ba4c-7246b6381474",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Deprecated accounts should be removed from your subscriptions.  Deprecated accounts are accounts that have been blocked from signing in.",
          "DisplayName": "Deprecated accounts should be removed from your subscription",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "00c6d40b-e990-6acf-d4f3-471e747a27c4",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6b1cbf55-e8b6-442f-ba4c-7246b6381474"
      },
      {
        "Name": "8d7e1fde-fe26-4b5f-8108-f8e432cbc2be",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/8d7e1fde-fe26-4b5f-8108-f8e432cbc2be",
        "ResourceName": "8d7e1fde-fe26-4b5f-8108-f8e432cbc2be",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Deprecated accounts should be removed from your subscriptions.  Deprecated accounts are accounts that have been blocked from signing in.",
          "DisplayName": "Blocked accounts with read and write permissions on Azure resources should be removed",
          "Metadata": {
            "version": "1.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "1ff0b4c9-ed56-4de6-be9c-d7ab39645926",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8d7e1fde-fe26-4b5f-8108-f8e432cbc2be"
      },
      {
        "Name": "f8456c1c-aa66-4dfb-861a-25d127b775c9",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/f8456c1c-aa66-4dfb-861a-25d127b775c9",
        "ResourceName": "f8456c1c-aa66-4dfb-861a-25d127b775c9",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "External accounts with owner permissions should be removed from your subscription in order to prevent unmonitored access.",
          "DisplayName": "External accounts with owner permissions should be removed from your subscription",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "c3b6ae71-f1f0-31b4-e6c1-d5951285d03d",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f8456c1c-aa66-4dfb-861a-25d127b775c9"
      },
      {
        "Name": "339353f6-2387-4a45-abe4-7f529d121046",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/339353f6-2387-4a45-abe4-7f529d121046",
        "ResourceName": "339353f6-2387-4a45-abe4-7f529d121046",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "External accounts with owner permissions should be removed from your subscription in order to prevent unmonitored access.",
          "DisplayName": "Guest accounts with owner permissions on Azure resources should be removed",
          "Metadata": {
            "version": "1.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "20606e75-05c4-48c0-9d97-add6daa2109a",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/339353f6-2387-4a45-abe4-7f529d121046"
      },
      {
        "Name": "5c607a2e-c700-4744-8254-d77e7c9eb5e4",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/5c607a2e-c700-4744-8254-d77e7c9eb5e4",
        "ResourceName": "5c607a2e-c700-4744-8254-d77e7c9eb5e4",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "External accounts with write privileges should be removed from your subscription in order to prevent unmonitored access.",
          "DisplayName": "External accounts with write permissions should be removed from your subscription",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "04e7147b-0deb-9796-2e5c-0336343ceb3d",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5c607a2e-c700-4744-8254-d77e7c9eb5e4"
      },
      {
        "Name": "94e1c2ac-cbbe-4cac-a2b5-389c812dee87",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/94e1c2ac-cbbe-4cac-a2b5-389c812dee87",
        "ResourceName": "94e1c2ac-cbbe-4cac-a2b5-389c812dee87",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "External accounts with write privileges should be removed from your subscription in order to prevent unmonitored access.",
          "DisplayName": "Guest accounts with write permissions on Azure resources should be removed",
          "Metadata": {
            "version": "1.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "0354476c-a12a-4fcc-a79d-f0ab7ffffdbb",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/94e1c2ac-cbbe-4cac-a2b5-389c812dee87"
      },
      {
        "Name": "5f76cf89-fbf2-47fd-a3f4-b891fa780b60",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/5f76cf89-fbf2-47fd-a3f4-b891fa780b60",
        "ResourceName": "5f76cf89-fbf2-47fd-a3f4-b891fa780b60",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "External accounts with read privileges should be removed from your subscription in order to prevent unmonitored access.",
          "DisplayName": "External accounts with read permissions should be removed from your subscription",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "a8c6a4ad-d51e-88fe-2979-d3ee3c864f8b",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5f76cf89-fbf2-47fd-a3f4-b891fa780b60"
      },
      {
        "Name": "e9ac8f8e-ce22-4355-8f04-99b911d6be52",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/e9ac8f8e-ce22-4355-8f04-99b911d6be52",
        "ResourceName": "e9ac8f8e-ce22-4355-8f04-99b911d6be52",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "External accounts with read privileges should be removed from your subscription in order to prevent unmonitored access.",
          "DisplayName": "Guest accounts with read permissions on Azure resources should be removed",
          "Metadata": {
            "version": "1.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "fde1c0c9-0fd2-4ecc-87b5-98956cbc1095",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e9ac8f8e-ce22-4355-8f04-99b911d6be52"
      },
      {
        "Name": "0e60b895-3786-45da-8377-9c6b4b6ac5f9",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0e60b895-3786-45da-8377-9c6b4b6ac5f9",
        "ResourceName": "0e60b895-3786-45da-8377-9c6b4b6ac5f9",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Remote debugging requires inbound ports to be opened on Function apps. Remote debugging should be turned off.",
          "DisplayName": "Function apps should have remote debugging turned off",
          "Metadata": {
            "version": "2.0.0",
            "category": "App Service"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "contains": "functionapp"
                },
                {
                  "field": "kind",
                  "notContains": "workflowapp"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "existenceCondition": {
                  "field": "Microsoft.Web/sites/config/web.remoteDebuggingEnabled",
                  "equals": "false"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0e60b895-3786-45da-8377-9c6b4b6ac5f9"
      },
      {
        "Name": "cb510bfd-1cba-4d9f-a230-cb0976f4bb71",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/cb510bfd-1cba-4d9f-a230-cb0976f4bb71",
        "ResourceName": "cb510bfd-1cba-4d9f-a230-cb0976f4bb71",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Remote debugging requires inbound ports to be opened on an App Service app. Remote debugging should be turned off.",
          "DisplayName": "App Service apps should have remote debugging turned off",
          "Metadata": {
            "version": "2.0.0",
            "category": "App Service"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "notContains": "functionapp"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "existenceCondition": {
                  "field": "Microsoft.Web/sites/config/web.remoteDebuggingEnabled",
                  "equals": "false"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/cb510bfd-1cba-4d9f-a230-cb0976f4bb71"
      },
      {
        "Name": "6d555dd1-86f2-4f1c-8ed7-5abae7c6cbab",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/6d555dd1-86f2-4f1c-8ed7-5abae7c6cbab",
        "ResourceName": "6d555dd1-86f2-4f1c-8ed7-5abae7c6cbab",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.",
          "DisplayName": "Function apps should only be accessible over HTTPS",
          "Metadata": {
            "version": "3.0.0",
            "category": "App Service"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "kind",
                  "contains": "functionapp"
                },
                {
                  "field": "kind",
                  "notContains": "workflowapp"
                },
                {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Web/sites"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Web/sites/httpsOnly",
                              "exists": "false"
                            },
                            {
                              "field": "Microsoft.Web/sites/httpsOnly",
                              "equals": "false"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Web/sites/slots"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Web/sites/slots/httpsOnly",
                              "exists": "false"
                            },
                            {
                              "field": "Microsoft.Web/sites/slots/httpsOnly",
                              "equals": "false"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6d555dd1-86f2-4f1c-8ed7-5abae7c6cbab"
      },
      {
        "Name": "a4af4a39-4135-47fb-b175-47fbdf85311d",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/a4af4a39-4135-47fb-b175-47fbdf85311d",
        "ResourceName": "a4af4a39-4135-47fb-b175-47fbdf85311d",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.",
          "DisplayName": "App Service apps should only be accessible over HTTPS",
          "Metadata": {
            "version": "3.0.0",
            "category": "App Service"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled",
                "Deny"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "kind",
                  "notContains": "functionapp"
                },
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/sites"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Web/sites/httpsOnly",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.Web/sites/httpsOnly",
                          "equals": "false"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a4af4a39-4135-47fb-b175-47fbdf85311d"
      },
      {
        "Name": "0820b7b9-23aa-4725-a1ce-ae4558f718e5",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0820b7b9-23aa-4725-a1ce-ae4558f718e5",
        "ResourceName": "0820b7b9-23aa-4725-a1ce-ae4558f718e5",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Cross-Origin Resource Sharing (CORS) should not allow all domains to access your Function app. Allow only required domains to interact with your Function app.",
          "DisplayName": "Function apps should not have CORS configured to allow every resource to access your apps",
          "Metadata": {
            "version": "2.0.0",
            "category": "App Service"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "contains": "functionapp"
                },
                {
                  "field": "kind",
                  "notContains": "workflowapp"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "existenceCondition": {
                  "field": "Microsoft.Web/sites/config/web.cors.allowedOrigins[*]",
                  "notEquals": "*"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0820b7b9-23aa-4725-a1ce-ae4558f718e5"
      },
      {
        "Name": "5744710e-cc2f-4ee8-8809-3b11e89f4bc9",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/5744710e-cc2f-4ee8-8809-3b11e89f4bc9",
        "ResourceName": "5744710e-cc2f-4ee8-8809-3b11e89f4bc9",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Cross-Origin Resource Sharing (CORS) should not allow all domains to access your app. Allow only required domains to interact with your app.",
          "DisplayName": "App Service apps should not have CORS configured to allow every resource to access your apps",
          "Metadata": {
            "version": "2.0.0",
            "category": "App Service"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "notContains": "functionapp"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "existenceCondition": {
                  "field": "Microsoft.Web/sites/config/web.cors.allowedOrigins[*]",
                  "notEquals": "*"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5744710e-cc2f-4ee8-8809-3b11e89f4bc9"
      },
      {
        "Name": "a7aca53f-2ed4-4466-a25e-0b45ade68efd",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/a7aca53f-2ed4-4466-a25e-0b45ade68efd",
        "ResourceName": "a7aca53f-2ed4-4466-a25e-0b45ade68efd",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "DDoS protection standard should be enabled for all virtual networks with a subnet that is part of an application gateway with a public IP.",
          "DisplayName": "Azure DDoS Protection Standard should be enabled",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "microsoft.network/virtualNetworks"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "e3de1cc0-f4dd-3b34-e496-8b5381ba2d70",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a7aca53f-2ed4-4466-a25e-0b45ade68efd"
      },
      {
        "Name": "abfb4388-5bf4-4ad7-ba82-2cd2f41ceae9",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/abfb4388-5bf4-4ad7-ba82-2cd2f41ceae9",
        "ResourceName": "abfb4388-5bf4-4ad7-ba82-2cd2f41ceae9",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit SQL servers without Advanced Data Security",
          "DisplayName": "Azure Defender for SQL should be enabled for unprotected Azure SQL servers",
          "Metadata": {
            "version": "2.0.1",
            "category": "SQL"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Sql/servers"
                },
                {
                  "field": "kind",
                  "notContains": "analytics"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Sql/servers/securityAlertPolicies",
                "name": "Default",
                "existenceCondition": {
                  "field": "Microsoft.Sql/servers/securityAlertPolicies/state",
                  "equals": "Enabled"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/abfb4388-5bf4-4ad7-ba82-2cd2f41ceae9"
      },
      {
        "Name": "abfb7388-5bf4-4ad7-ba99-2cd2f41cebb9",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/abfb7388-5bf4-4ad7-ba99-2cd2f41cebb9",
        "ResourceName": "abfb7388-5bf4-4ad7-ba99-2cd2f41cebb9",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit each SQL Managed Instance without advanced data security.",
          "DisplayName": "Azure Defender for SQL should be enabled for unprotected SQL Managed Instances",
          "Metadata": {
            "version": "1.0.2",
            "category": "SQL"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Sql/managedInstances"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Sql/managedInstances/securityAlertPolicies",
                "name": "Default",
                "existenceCondition": {
                  "field": "Microsoft.Sql/managedInstances/securityAlertPolicies/state",
                  "equals": "Enabled"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/abfb7388-5bf4-4ad7-ba99-2cd2f41cebb9"
      },
      {
        "Name": "ac4a19c2-fa67-49b4-8ae5-0b2e78c49457",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/ac4a19c2-fa67-49b4-8ae5-0b2e78c49457",
        "ResourceName": "ac4a19c2-fa67-49b4-8ae5-0b2e78c49457",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "To provide granular filtering on the actions that users can perform, use Role-Based Access Control (RBAC) to manage permissions in Kubernetes Service Clusters and configure relevant authorization policies.",
          "DisplayName": "Role-Based Access Control (RBAC) should be used on Kubernetes Services",
          "Metadata": {
            "version": "1.0.2",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ContainerService/managedClusters"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.ContainerService/managedClusters/enableRBAC",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.ContainerService/managedClusters/enableRBAC",
                      "equals": "false"
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ac4a19c2-fa67-49b4-8ae5-0b2e78c49457"
      },
      {
        "Name": "0e246bcf-5f6f-4f87-bc6f-775d4712c7ea",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0e246bcf-5f6f-4f87-bc6f-775d4712c7ea",
        "ResourceName": "0e246bcf-5f6f-4f87-bc6f-775d4712c7ea",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Restrict access to the Kubernetes Service Management API by granting API access only to IP addresses in specific ranges. It is recommended to limit access to authorized IP ranges to ensure that only applications from allowed networks can access the cluster.",
          "DisplayName": "Authorized IP ranges should be defined on Kubernetes Services",
          "Metadata": {
            "version": "2.0.1",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ContainerService/managedClusters"
                },
                {
                  "field": "Microsoft.ContainerService/managedClusters/apiServerAccessProfile.authorizedIPRanges",
                  "exists": "false"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.ContainerService/managedClusters/apiServerAccessProfile.enablePrivateCluster",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.ContainerService/managedClusters/apiServerAccessProfile.enablePrivateCluster",
                      "equals": "false"
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0e246bcf-5f6f-4f87-bc6f-775d4712c7ea"
      },
      {
        "Name": "ef2a8f2a-b3d9-49cd-a8a8-9a3aaaf647d9",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/ef2a8f2a-b3d9-49cd-a8a8-9a3aaaf647d9",
        "ResourceName": "ef2a8f2a-b3d9-49cd-a8a8-9a3aaaf647d9",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit Azure SQL servers which do not have recurring vulnerability assessment scans enabled. Vulnerability assessment can discover, track, and help you remediate potential database vulnerabilities.",
          "DisplayName": "Vulnerability assessment should be enabled on your SQL servers",
          "Metadata": {
            "version": "2.0.0",
            "category": "SQL"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Sql/servers"
                },
                {
                  "field": "kind",
                  "notContains": "analytics"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Sql/servers/vulnerabilityAssessments",
                "name": "default",
                "existenceCondition": {
                  "field": "Microsoft.Sql/servers/vulnerabilityAssessments/recurringScans.isEnabled",
                  "equals": "True"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ef2a8f2a-b3d9-49cd-a8a8-9a3aaaf647d9"
      },
      {
        "Name": "1b7aa243-30e4-4c9e-bca8-d0d3022b634a",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1b7aa243-30e4-4c9e-bca8-d0d3022b634a",
        "ResourceName": "1b7aa243-30e4-4c9e-bca8-d0d3022b634a",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit each SQL Managed Instance which doesn't have recurring vulnerability assessment scans enabled. Vulnerability assessment can discover, track, and help you remediate potential database vulnerabilities.",
          "DisplayName": "Vulnerability assessment should be enabled on SQL Managed Instance",
          "Metadata": {
            "version": "1.0.1",
            "category": "SQL"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Sql/managedInstances"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Sql/managedInstances/vulnerabilityAssessments",
                "name": "default",
                "existenceCondition": {
                  "field": "Microsoft.Sql/managedInstances/vulnerabilityAssessments/recurringScans.isEnabled",
                  "equals": "True"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1b7aa243-30e4-4c9e-bca8-d0d3022b634a"
      },
      {
        "Name": "08e6af2d-db70-460a-bfe9-d5bd474ba9d6",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/08e6af2d-db70-460a-bfe9-d5bd474ba9d6",
        "ResourceName": "08e6af2d-db70-460a-bfe9-d5bd474ba9d6",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Security Center analyzes the traffic patterns of Internet facing virtual machines and provides Network Security Group rule recommendations that reduce the potential attack surface",
          "DisplayName": "Adaptive network hardening recommendations should be applied on internet facing virtual machines",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Compute/virtualMachines"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "f9f0eed0-f143-47bf-b856-671ea2eeed62",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/08e6af2d-db70-460a-bfe9-d5bd474ba9d6"
      },
      {
        "Name": "22730e10-96f6-4aac-ad84-9383d35b5917",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/22730e10-96f6-4aac-ad84-9383d35b5917",
        "ResourceName": "22730e10-96f6-4aac-ad84-9383d35b5917",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Open remote management ports are exposing your VM to a high level of risk from Internet-based attacks. These attacks attempt to brute force credentials to gain admin access to the machine.",
          "DisplayName": "Management ports should be closed on your virtual machines",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "bc303248-3d14-44c2-96a0-55f5c326b5fe",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/22730e10-96f6-4aac-ad84-9383d35b5917"
      },
      {
        "Name": "bd352bd5-2853-4985-bf0d-73806b4a5744",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/bd352bd5-2853-4985-bf0d-73806b4a5744",
        "ResourceName": "bd352bd5-2853-4985-bf0d-73806b4a5744",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Enabling IP forwarding on a virtual machine's NIC allows the machine to receive traffic addressed to other destinations. IP forwarding is rarely required (e.g., when using the VM as a network virtual appliance), and therefore, this should be reviewed by the network security team.",
          "DisplayName": "IP Forwarding on your virtual machine should be disabled",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "c3b51c94-588b-426b-a892-24696f9e54cc",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bd352bd5-2853-4985-bf0d-73806b4a5744"
      },
      {
        "Name": "0a370ff3-6cab-4e85-8995-295fd854c5b8",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0a370ff3-6cab-4e85-8995-295fd854c5b8",
        "ResourceName": "0a370ff3-6cab-4e85-8995-295fd854c5b8",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Implementing Transparent Data Encryption (TDE) with your own key provides increased transparency and control over the TDE Protector, increased security with an HSM-backed external service, and promotion of separation of duties. This recommendation applies to organizations with a related compliance requirement.",
          "DisplayName": "SQL servers should use customer-managed keys to encrypt data at rest",
          "Metadata": {
            "version": "2.0.1",
            "category": "SQL"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "anyOf": [
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/servers"
                    },
                    {
                      "value": "[resourcegroup().managedBy]",
                      "notContains": "/providers/Microsoft.Synapse/"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Sql/servers/keyid",
                          "exists": false
                        },
                        {
                          "field": "Microsoft.Sql/servers/keyid",
                          "equals": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/servers/encryptionProtector"
                    },
                    {
                      "value": "[resourcegroup().managedBy]",
                      "notContains": "/providers/Microsoft.Synapse/"
                    },
                    {
                      "field": "Microsoft.Sql/servers/encryptionProtector/serverKeyType",
                      "notequals": "AzureKeyVault"
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a370ff3-6cab-4e85-8995-295fd854c5b8"
      },
      {
        "Name": "ac01ad65-10e5-46df-bdd9-6b0cad13e1d2",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/ac01ad65-10e5-46df-bdd9-6b0cad13e1d2",
        "ResourceName": "ac01ad65-10e5-46df-bdd9-6b0cad13e1d2",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Implementing Transparent Data Encryption (TDE) with your own key provides you with increased transparency and control over the TDE Protector, increased security with an HSM-backed external service, and promotion of separation of duties. This recommendation applies to organizations with a related compliance requirement.",
          "DisplayName": "SQL managed instances should use customer-managed keys to encrypt data at rest",
          "Metadata": {
            "version": "2.0.0",
            "category": "SQL"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "anyOf": [
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/managedInstances"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Sql/managedInstances/keyid",
                          "exists": false
                        },
                        {
                          "field": "Microsoft.Sql/managedInstances/keyid",
                          "equals": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/managedInstances/encryptionProtector"
                    },
                    {
                      "field": "Microsoft.Sql/managedInstances/encryptionProtector/serverKeyType",
                      "notequals": "AzureKeyVault"
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ac01ad65-10e5-46df-bdd9-6b0cad13e1d2"
      },
      {
        "Name": "e8cbc669-f12d-49eb-93e7-9273119e9933",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/e8cbc669-f12d-49eb-93e7-9273119e9933",
        "ResourceName": "e8cbc669-f12d-49eb-93e7-9273119e9933",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit vulnerabilities in security configuration on machines with Docker installed and display as recommendations in Azure Security Center.",
          "DisplayName": "Vulnerabilities in container security configurations should be remediated",
          "Metadata": {
            "version": "3.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines",
                "Microsoft.Compute/virtualMachineScaleSets"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "0677209d-e675-2c6f-e91a-54cef2878663",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e8cbc669-f12d-49eb-93e7-9273119e9933"
      },
      {
        "Name": "2f2ee1de-44aa-4762-b6bd-0893fc3f306d",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/2f2ee1de-44aa-4762-b6bd-0893fc3f306d",
        "ResourceName": "2f2ee1de-44aa-4762-b6bd-0893fc3f306d",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Security Center uses the Microsoft Dependency agent to collect network traffic data from your Azure virtual machines to enable advanced network protection features such as traffic visualization on the network map, network hardening recommendations and specific network threats.",
          "DisplayName": "[Preview]: Network traffic data collection agent should be installed on Windows virtual machines",
          "Metadata": {
            "version": "1.0.2-preview",
            "category": "Monitoring",
            "preview": true
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable Dependency Agent for Windows VMs monitoring"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "MicrosoftWindowsServer"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "WindowsServer"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "in": [
                            "2008-R2-SP1",
                            "2008-R2-SP1-smalldisk",
                            "2012-Datacenter",
                            "2012-Datacenter-smalldisk",
                            "2012-R2-Datacenter",
                            "2012-R2-Datacenter-smalldisk",
                            "2016-Datacenter",
                            "2016-Datacenter-Server-Core",
                            "2016-Datacenter-Server-Core-smalldisk",
                            "2016-Datacenter-smalldisk",
                            "2016-Datacenter-with-Containers",
                            "2016-Datacenter-with-RDSH",
                            "2019-Datacenter",
                            "2019-Datacenter-Core",
                            "2019-Datacenter-Core-smalldisk",
                            "2019-Datacenter-Core-with-Containers",
                            "2019-Datacenter-Core-with-Containers-smalldisk",
                            "2019-Datacenter-smalldisk",
                            "2019-Datacenter-with-Containers",
                            "2019-Datacenter-with-Containers-smalldisk",
                            "2019-Datacenter-zhcn"
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "MicrosoftWindowsServer"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "WindowsServerSemiAnnual"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "in": [
                            "Datacenter-Core-1709-smalldisk",
                            "Datacenter-Core-1709-with-Containers-smalldisk",
                            "Datacenter-Core-1803-with-Containers-smalldisk"
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "MicrosoftWindowsServerHPCPack"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "WindowsServerHPCPack"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "MicrosoftSQLServer"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "*-WS2016"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "*-WS2016-BYOL"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "*-WS2012R2"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "*-WS2012R2-BYOL"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "MicrosoftRServer"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "MLServer-WS2016"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "MicrosoftVisualStudio"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "in": [
                            "VisualStudio",
                            "Windows"
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "MicrosoftDynamicsAX"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "Dynamics"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "equals": "Pre-Req-AX7-Onebox-U8"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "microsoft-ads"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "windows-data-science-vm"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "MicrosoftWindowsDesktop"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "Windows-10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Compute/virtualMachines/extensions",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/type",
                      "equals": "DependencyAgentWindows"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                      "equals": "Microsoft.Azure.Monitoring.DependencyAgent"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                      "equals": "Succeeded"
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2f2ee1de-44aa-4762-b6bd-0893fc3f306d"
      },
      {
        "Name": "04c4380f-3fae-46e8-96c9-30193528f602",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/04c4380f-3fae-46e8-96c9-30193528f602",
        "ResourceName": "04c4380f-3fae-46e8-96c9-30193528f602",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Security Center uses the Microsoft Dependency agent to collect network traffic data from your Azure virtual machines to enable advanced network protection features such as traffic visualization on the network map, network hardening recommendations and specific network threats.",
          "DisplayName": "[Preview]: Network traffic data collection agent should be installed on Linux virtual machines",
          "Metadata": {
            "version": "1.0.2-preview",
            "category": "Monitoring",
            "preview": true
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable Dependency Agent for Linux VMs monitoring"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Canonical"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "UbuntuServer"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "14.04.0-LTS",
                                "14.04.1-LTS",
                                "14.04.5-LTS"
                              ]
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "16.04-LTS",
                                "16.04.0-LTS"
                              ]
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "18.04-LTS"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "RedHat"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "in": [
                            "RHEL",
                            "RHEL-SAP-HANA"
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "like": "6.*"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "like": "7*"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "SUSE"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "in": [
                            "SLES",
                            "SLES-HPC",
                            "SLES-HPC-Priority",
                            "SLES-SAP",
                            "SLES-SAP-BYOS",
                            "SLES-Priority",
                            "SLES-BYOS",
                            "SLES-SAPCAL",
                            "SLES-Standard"
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "12-SP2",
                                "12-SP3",
                                "12-SP4"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "OpenLogic"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "in": [
                            "CentOS",
                            "Centos-LVM",
                            "CentOS-SRIOV"
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "like": "6.*"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "like": "7*"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "cloudera"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "cloudera-centos-os"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "like": "7*"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Compute/virtualMachines/extensions",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/type",
                      "equals": "DependencyAgentLinux"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                      "equals": "Microsoft.Azure.Monitoring.DependencyAgent"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                      "equals": "Succeeded"
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/04c4380f-3fae-46e8-96c9-30193528f602"
      },
      {
        "Name": "fc5e4038-4584-4632-8c85-c0448d374b2c",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/fc5e4038-4584-4632-8c85-c0448d374b2c",
        "ResourceName": "fc5e4038-4584-4632-8c85-c0448d374b2c",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Security Center has identified that some of your subnets aren't protected with a next generation firewall. Protect your subnets from potential threats by restricting access to them with Azure Firewall or a supported next generation firewall",
          "DisplayName": "[Preview]: All Internet traffic should be routed via your deployed Azure Firewall",
          "Metadata": {
            "version": "3.0.0-preview",
            "category": "Network",
            "preview": true
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable All Internet traffic should be routed via your deployed Azure Firewall"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Network/virtualNetworks"
                },
                {
                  "count": {
                    "field": "Microsoft.Network/virtualNetworks/subnets[*]",
                    "where": {
                      "allOf": [
                        {
                          "count": {
                            "field": "Microsoft.Network/virtualNetworks/subnets[*].ipConfigurations[*]",
                            "where": {
                              "value": "[empty(field('Microsoft.Network/virtualNetworks/subnets[*].ipConfigurations[*].id'))]",
                              "equals": false
                            }
                          },
                          "greaterOrEquals": 2
                        },
                        {
                          "field": "Microsoft.Network/virtualNetworks/subnets[*].routeTable",
                          "exists": false
                        },
                        {
                          "not": {
                            "anyOf": [
                              {
                                "field": "Microsoft.Network/virtualNetworks/subnets[*].name",
                                "equals": "AzureBastionSubnet"
                              },
                              {
                                "field": "Microsoft.Network/virtualNetworks/subnets[*].name",
                                "equals": "GatewaySubnet"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "greater": 0
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Network/azureFirewalls",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Network/azureFirewalls/ipConfigurations[*]",
                    "where": {
                      "field": "Microsoft.Network/azureFirewalls/ipConfigurations[*].subnet.id",
                      "like": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/*/providers/Microsoft.Network/virtualNetworks/', first(split(field('fullName'), '/')), '/subnets/AzureFirewallSubnet')]"
                    }
                  },
                  "equals": 1
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/fc5e4038-4584-4632-8c85-c0448d374b2c"
      },
      {
        "Name": "d69b1763-b96d-40b8-a2d9-ca31e9fd0d3e",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/d69b1763-b96d-40b8-a2d9-ca31e9fd0d3e",
        "ResourceName": "d69b1763-b96d-40b8-a2d9-ca31e9fd0d3e",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "This policy audits Windows Azure Arc machines if the Log Analytics extension is not installed.",
          "DisplayName": "[Preview]: Log Analytics extension should be installed on your Windows Azure Arc machines",
          "Metadata": {
            "version": "1.0.1-preview",
            "category": "Monitoring",
            "preview": true
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.HybridCompute/machines"
                },
                {
                  "field": "Microsoft.HybridCompute/imageOffer",
                  "like": "windows*"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.HybridCompute/machines/extensions",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.HybridCompute/machines/extensions/type",
                      "equals": "MicrosoftMonitoringAgent"
                    },
                    {
                      "field": "Microsoft.HybridCompute/machines/extensions/publisher",
                      "equals": "Microsoft.EnterpriseCloud.Monitoring"
                    },
                    {
                      "field": "Microsoft.HybridCompute/machines/extensions/provisioningState",
                      "equals": "Succeeded"
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d69b1763-b96d-40b8-a2d9-ca31e9fd0d3e"
      },
      {
        "Name": "842c54e8-c2f9-4d79-ae8d-38d8b8019373",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/842c54e8-c2f9-4d79-ae8d-38d8b8019373",
        "ResourceName": "842c54e8-c2f9-4d79-ae8d-38d8b8019373",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "This policy audits Linux Azure Arc machines if the Log Analytics extension is not installed.",
          "DisplayName": "[Preview]: Log Analytics extension should be installed on your Linux Azure Arc machines",
          "Metadata": {
            "version": "1.0.1-preview",
            "category": "Monitoring",
            "preview": true
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.HybridCompute/machines"
                },
                {
                  "field": "Microsoft.HybridCompute/imageOffer",
                  "like": "linux*"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.HybridCompute/machines/extensions",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.HybridCompute/machines/extensions/type",
                      "equals": "OmsAgentForLinux"
                    },
                    {
                      "field": "Microsoft.HybridCompute/machines/extensions/publisher",
                      "equals": "Microsoft.EnterpriseCloud.Monitoring"
                    },
                    {
                      "field": "Microsoft.HybridCompute/machines/extensions/provisioningState",
                      "equals": "Succeeded"
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/842c54e8-c2f9-4d79-ae8d-38d8b8019373"
      },
      {
        "Name": "4078e558-bda6-41fb-9b3c-361e8875200d",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/4078e558-bda6-41fb-9b3c-361e8875200d",
        "ResourceName": "4078e558-bda6-41fb-9b3c-361e8875200d",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Machines are non-compliant if Log Analytics agent is not installed on Azure Arc enabled windows server.",
          "DisplayName": "Windows machines should have Log Analytics agent installed on Azure Arc",
          "Metadata": {
            "category": "Guest Configuration",
            "version": "2.0.0",
            "requiredProviders": [
              "Microsoft.GuestConfiguration"
            ],
            "guestConfiguration": {
              "name": "WindowsLogAnalyticsAgentInstalled",
              "version": "1.*"
            }
          },
          "Mode": "Indexed",
          "Parameters": {
            "IncludeArcMachines": {
              "type": "String",
              "metadata": {
                "displayName": "Include Arc connected servers",
                "description": "By selecting this option, you agree to be charged monthly per Arc connected machine.",
                "portalReview": "true"
              },
              "allowedValues": [
                "true",
                "false"
              ],
              "defaultValue": "false"
            },
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of this policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "value": "[parameters('IncludeArcMachines')]",
                  "equals": "true"
                },
                {
                  "field": "type",
                  "equals": "Microsoft.HybridCompute/machines"
                },
                {
                  "field": "Microsoft.HybridCompute/imageOffer",
                  "like": "windows*"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                "name": "WindowsLogAnalyticsAgentInstalled",
                "existenceCondition": {
                  "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                  "equals": "Compliant"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4078e558-bda6-41fb-9b3c-361e8875200d"
      },
      {
        "Name": "1e7fed80-8321-4605-b42c-65fc300f23a3",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1e7fed80-8321-4605-b42c-65fc300f23a3",
        "ResourceName": "1e7fed80-8321-4605-b42c-65fc300f23a3",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Machines are non-compliant if Log Analytics agent is not installed on Azure Arc enabled Linux server.",
          "DisplayName": "Linux machines should have Log Analytics agent installed on Azure Arc",
          "Metadata": {
            "category": "Guest Configuration",
            "version": "1.1.0",
            "requiredProviders": [
              "Microsoft.GuestConfiguration"
            ],
            "guestConfiguration": {
              "name": "LinuxLogAnalyticsAgentInstalled",
              "version": "1.*"
            }
          },
          "Mode": "Indexed",
          "Parameters": {
            "IncludeArcMachines": {
              "type": "String",
              "metadata": {
                "displayName": "Include Arc connected servers",
                "description": "By selecting this option, you agree to be charged monthly per Arc connected machine.",
                "portalReview": "true"
              },
              "allowedValues": [
                "true",
                "false"
              ],
              "defaultValue": "false"
            },
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of this policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "value": "[parameters('IncludeArcMachines')]",
                  "equals": "true"
                },
                {
                  "field": "type",
                  "equals": "Microsoft.HybridCompute/machines"
                },
                {
                  "field": "Microsoft.HybridCompute/imageOffer",
                  "like": "linux*"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                "name": "LinuxLogAnalyticsAgentInstalled",
                "existenceCondition": {
                  "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                  "equals": "Compliant"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1e7fed80-8321-4605-b42c-65fc300f23a3"
      },
      {
        "Name": "0e6763cc-5078-4e64-889d-ff4d9a839047",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0e6763cc-5078-4e64-889d-ff4d9a839047",
        "ResourceName": "0e6763cc-5078-4e64-889d-ff4d9a839047",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Defender for Key Vault provides an additional layer of protection and security intelligence by detecting unusual and potentially harmful attempts to access or exploit key vault accounts.",
          "DisplayName": "Azure Defender for Key Vault should be enabled",
          "Metadata": {
            "version": "1.0.3",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/pricings",
                "name": "KeyVaults",
                "existenceScope": "subscription",
                "existenceCondition": {
                  "field": "Microsoft.Security/pricings/pricingTier",
                  "equals": "Standard"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0e6763cc-5078-4e64-889d-ff4d9a839047"
      },
      {
        "Name": "7fe3b40f-802b-4cdd-8bd4-fd799c948cc2",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/7fe3b40f-802b-4cdd-8bd4-fd799c948cc2",
        "ResourceName": "7fe3b40f-802b-4cdd-8bd4-fd799c948cc2",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Defender for SQL provides functionality for surfacing and mitigating potential database vulnerabilities, detecting anomalous activities that could indicate threats to SQL databases, and discovering and classifying sensitive data.",
          "DisplayName": "Azure Defender for Azure SQL Database servers should be enabled",
          "Metadata": {
            "version": "1.0.2",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/pricings",
                "name": "SqlServers",
                "existenceScope": "subscription",
                "existenceCondition": {
                  "field": "Microsoft.Security/pricings/pricingTier",
                  "equals": "Standard"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7fe3b40f-802b-4cdd-8bd4-fd799c948cc2"
      },
      {
        "Name": "6581d072-105e-4418-827f-bd446d56421b",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/6581d072-105e-4418-827f-bd446d56421b",
        "ResourceName": "6581d072-105e-4418-827f-bd446d56421b",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Defender for SQL provides functionality for surfacing and mitigating potential database vulnerabilities, detecting anomalous activities that could indicate threats to SQL databases, and discovering and classifying sensitive data.",
          "DisplayName": "Azure Defender for SQL servers on machines should be enabled",
          "Metadata": {
            "version": "1.0.2",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/pricings",
                "name": "SqlServerVirtualMachines",
                "existenceScope": "subscription",
                "existenceCondition": {
                  "field": "Microsoft.Security/pricings/pricingTier",
                  "equals": "Standard"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6581d072-105e-4418-827f-bd446d56421b"
      },
      {
        "Name": "308fbb08-4ab8-4e67-9b29-592e93fb94fa",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/308fbb08-4ab8-4e67-9b29-592e93fb94fa",
        "ResourceName": "308fbb08-4ab8-4e67-9b29-592e93fb94fa",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Defender for Storage provides detections of unusual and potentially harmful attempts to access or exploit storage accounts.",
          "DisplayName": "Azure Defender for Storage should be enabled",
          "Metadata": {
            "version": "1.0.3",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/pricings",
                "name": "StorageAccounts",
                "existenceScope": "subscription",
                "existenceCondition": {
                  "field": "Microsoft.Security/pricings/pricingTier",
                  "equals": "Standard"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/308fbb08-4ab8-4e67-9b29-592e93fb94fa"
      },
      {
        "Name": "2913021d-f2fd-4f3d-b958-22354e2bdbcb",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/2913021d-f2fd-4f3d-b958-22354e2bdbcb",
        "ResourceName": "2913021d-f2fd-4f3d-b958-22354e2bdbcb",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Defender for App Service leverages the scale of the cloud, and the visibility that Azure has as a cloud provider, to monitor for common web app attacks.",
          "DisplayName": "Azure Defender for App Service should be enabled",
          "Metadata": {
            "version": "1.0.3",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/pricings",
                "name": "AppServices",
                "existenceScope": "subscription",
                "existenceCondition": {
                  "field": "Microsoft.Security/pricings/pricingTier",
                  "equals": "Standard"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2913021d-f2fd-4f3d-b958-22354e2bdbcb"
      },
      {
        "Name": "1c988dd6-ade4-430f-a608-2a3e5b0a6d38",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1c988dd6-ade4-430f-a608-2a3e5b0a6d38",
        "ResourceName": "1c988dd6-ade4-430f-a608-2a3e5b0a6d38",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Microsoft Defender for Containers provides hardening, vulnerability assessment and run-time protections for your Azure, hybrid, and multi-cloud Kubernetes environments.",
          "DisplayName": "Microsoft Defender for Containers should be enabled",
          "Metadata": {
            "version": "1.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/pricings",
                "name": "Containers",
                "existenceScope": "subscription",
                "existenceCondition": {
                  "field": "Microsoft.Security/pricings/pricingTier",
                  "equals": "Standard"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1c988dd6-ade4-430f-a608-2a3e5b0a6d38"
      },
      {
        "Name": "4da35fc9-c9e7-4960-aec9-797fe7d9051d",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/4da35fc9-c9e7-4960-aec9-797fe7d9051d",
        "ResourceName": "4da35fc9-c9e7-4960-aec9-797fe7d9051d",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Defender for servers provides real-time threat protection for server workloads and generates hardening recommendations as well as alerts about suspicious activities.",
          "DisplayName": "Azure Defender for servers should be enabled",
          "Metadata": {
            "version": "1.0.3",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/pricings",
                "name": "VirtualMachines",
                "existenceScope": "subscription",
                "existenceCondition": {
                  "field": "Microsoft.Security/pricings/pricingTier",
                  "equals": "Standard"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4da35fc9-c9e7-4960-aec9-797fe7d9051d"
      },
      {
        "Name": "0a15ec92-a229-4763-bb14-0ea34a568f8d",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0a15ec92-a229-4763-bb14-0ea34a568f8d",
        "ResourceName": "0a15ec92-a229-4763-bb14-0ea34a568f8d",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Policy Add-on for Kubernetes service (AKS) extends Gatekeeper v3, an admission controller webhook for Open Policy Agent (OPA), to apply at-scale enforcements and safeguards on your clusters in a centralized, consistent manner.",
          "DisplayName": "Azure Policy Add-on for Kubernetes service (AKS) should be installed and enabled on your clusters",
          "Metadata": {
            "version": "1.0.2",
            "category": "Kubernetes"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ContainerService/managedClusters"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.ContainerService/managedClusters/addonProfiles.azurePolicy.enabled",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.ContainerService/managedClusters/addonProfiles.azurePolicy.enabled",
                      "equals": "false"
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a15ec92-a229-4763-bb14-0ea34a568f8d"
      },
      {
        "Name": "6b2122c1-8120-4ff5-801b-17625a355590",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/6b2122c1-8120-4ff5-801b-17625a355590",
        "ResourceName": "6b2122c1-8120-4ff5-801b-17625a355590",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "The Azure Policy extension for Azure Arc provides at-scale enforcements and safeguards on your Arc enabled Kubernetes clusters in a centralized, consistent manner. Learn more at https://aka.ms/akspolicydoc.",
          "DisplayName": "[Preview]: Azure Arc enabled Kubernetes clusters should have the Azure Policy extension installed",
          "Metadata": {
            "version": "1.0.0-preview",
            "category": "Kubernetes",
            "preview": true
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Kubernetes/connectedClusters"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.KubernetesConfiguration/extensions",
                "existenceCondition": {
                  "field": "Microsoft.KubernetesConfiguration/extensions/extensionType",
                  "equals": "microsoft.policyinsights"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6b2122c1-8120-4ff5-801b-17625a355590"
      },
      {
        "Name": "febd0533-8e55-448f-b837-bd0e06f16469",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/febd0533-8e55-448f-b837-bd0e06f16469",
        "ResourceName": "febd0533-8e55-448f-b837-bd0e06f16469",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Use images from trusted registries to reduce the Kubernetes cluster's exposure risk to unknown vulnerabilities, security issues and malicious images. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "DisplayName": "Kubernetes cluster containers should only use allowed images",
          "Metadata": {
            "version": "8.0.0",
            "category": "Kubernetes"
          },
          "Mode": "Microsoft.Kubernetes.Data",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "'Audit' allows a non-compliant resource to be created, but flags it as non-compliant. 'Deny' blocks the resource creation. 'Disable' turns off the policy."
              },
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Deny"
            },
            "excludedNamespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace exclusions",
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design."
              },
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc"
              ]
            },
            "namespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace inclusions",
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces."
              },
              "defaultValue": []
            },
            "labelSelector": {
              "type": "Object",
              "metadata": {
                "displayName": "Kubernetes label selector",
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources."
              },
              "defaultValue": {},
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "properties": {
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  },
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "additionalProperties": false
              }
            },
            "allowedContainerImagesRegex": {
              "type": "String",
              "metadata": {
                "displayName": "Allowed registry or registries regex",
                "description": "The RegEx rule used to match allowed container image field in a Kubernetes cluster. For example, to allow any Azure Container Registry image by matching partial path: ^[^\\/]+\\.azurecr\\.io\\/.+$ and for multiple registries: ^([^\\/]+\\.azurecr\\.io|registry\\.io)\\/.+$"
              }
            },
            "excludedContainers": {
              "type": "Array",
              "metadata": {
                "displayName": "Containers exclusions",
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identify is the name of container. Use an empty list to apply this policy to all containers in all namespaces."
              },
              "defaultValue": []
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "AKS Engine",
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/container-allowed-images/v2/template.yaml"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ],
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "namespaces": "[parameters('namespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "values": {
                  "imageRegex": "[parameters('allowedContainerImagesRegex')]",
                  "excludedContainers": "[parameters('excludedContainers')]"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/febd0533-8e55-448f-b837-bd0e06f16469"
      },
      {
        "Name": "95edb821-ddaf-4404-9732-666045e056b4",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/95edb821-ddaf-4404-9732-666045e056b4",
        "ResourceName": "95edb821-ddaf-4404-9732-666045e056b4",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Do not allow privileged containers creation in a Kubernetes cluster. This recommendation is part of CIS 5.2.1 which is intended to improve the security of your Kubernetes environments. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "DisplayName": "Kubernetes cluster should not allow privileged containers",
          "Metadata": {
            "version": "8.0.0",
            "category": "Kubernetes"
          },
          "Mode": "Microsoft.Kubernetes.Data",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "'Audit' allows a non-compliant resource to be created, but flags it as non-compliant. 'Deny' blocks the resource creation. 'Disable' turns off the policy."
              },
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Deny"
            },
            "excludedNamespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace exclusions",
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design."
              },
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc"
              ]
            },
            "namespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace inclusions",
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces."
              },
              "defaultValue": []
            },
            "labelSelector": {
              "type": "Object",
              "metadata": {
                "displayName": "Kubernetes label selector",
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources."
              },
              "defaultValue": {},
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "properties": {
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  },
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "additionalProperties": false
              }
            },
            "excludedContainers": {
              "type": "Array",
              "metadata": {
                "displayName": "Containers exclusions",
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identify is the name of container. Use an empty list to apply this policy to all containers in all namespaces."
              },
              "defaultValue": []
            },
            "excludedImages": {
              "type": "Array",
              "metadata": {
                "displayName": "Image exclusions",
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository."
              },
              "defaultValue": []
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "AKS Engine",
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/container-no-privilege/v2/template.yaml"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ],
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "namespaces": "[parameters('namespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "values": {
                  "excludedContainers": "[parameters('excludedContainers')]",
                  "excludedImages": "[parameters('excludedImages')]"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/95edb821-ddaf-4404-9732-666045e056b4"
      },
      {
        "Name": "233a2a17-77ca-4fb1-9b6b-69223d272a44",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/233a2a17-77ca-4fb1-9b6b-69223d272a44",
        "ResourceName": "233a2a17-77ca-4fb1-9b6b-69223d272a44",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Restrict services to listen only on allowed ports to secure access to the Kubernetes cluster. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "DisplayName": "Kubernetes cluster services should listen only on allowed ports",
          "Metadata": {
            "version": "7.0.0",
            "category": "Kubernetes"
          },
          "Mode": "Microsoft.Kubernetes.Data",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "'Audit' allows a non-compliant resource to be created, but flags it as non-compliant. 'Deny' blocks the resource creation. 'Disable' turns off the policy."
              },
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Deny"
            },
            "excludedNamespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace exclusions",
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design."
              },
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc"
              ]
            },
            "namespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace inclusions",
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces."
              },
              "defaultValue": []
            },
            "labelSelector": {
              "type": "Object",
              "metadata": {
                "displayName": "Kubernetes label selector",
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources."
              },
              "defaultValue": {},
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "properties": {
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  },
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "additionalProperties": false
              }
            },
            "allowedServicePortsList": {
              "type": "Array",
              "metadata": {
                "displayName": "Allowed service ports list",
                "description": "The list of service ports allowed in a Kubernetes cluster. Array only accepts strings. Example: [\"443\", \"80\"]"
              }
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "AKS Engine",
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/service-allowed-ports/v1/template.yaml"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Service"
                ],
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "namespaces": "[parameters('namespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "values": {
                  "allowedServicePorts": "[parameters('allowedServicePortsList')]",
                  "allowedPorts": "[parameters('allowedServicePortsList')]"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/233a2a17-77ca-4fb1-9b6b-69223d272a44"
      },
      {
        "Name": "13cd7ae3-5bc0-4ac4-a62d-4f7c120b9759",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/13cd7ae3-5bc0-4ac4-a62d-4f7c120b9759",
        "ResourceName": "13cd7ae3-5bc0-4ac4-a62d-4f7c120b9759",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Protect your Kubernetes clusters and container workloads from potential threats by restricting deployment of container images with vulnerable software components. Use Azure Defender CI/CD scanning (https://aka.ms/AzureDefenderCICDscanning) and Azure defender for container registries (https://aka.ms/AzureDefenderForContainerRegistries) to identify and patch vulnerabilities prior to deployment. Evaluation prerequisite: Policy Addon and Azure Defender Profile. Only applicable for private preview customers.",
          "DisplayName": "[Preview]: Kubernetes clusters should gate deployment of vulnerable images",
          "Metadata": {
            "version": "2.0.0-preview",
            "category": "Kubernetes",
            "preview": true
          },
          "Mode": "Microsoft.Kubernetes.Data",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy."
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            },
            "excludedNamespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace exclusions",
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design."
              },
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc"
              ]
            },
            "namespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace inclusions",
                "description": "List of Kubernetes namespaces the policy would apply to. An empty list means the policy is applied to all resources in all namespaces."
              },
              "defaultValue": []
            },
            "labelSelector": {
              "type": "Object",
              "metadata": {
                "displayName": "Kubernetes label selector",
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources."
              },
              "defaultValue": {},
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "properties": {
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  },
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "additionalProperties": false
              }
            },
            "excludedImages": {
              "type": "Array",
              "metadata": {
                "displayName": "Excluded images regex",
                "description": "A list of RegEx rules used to exclude container images from policy evaluation. For example: exclude all images from the repo microsoft-defender-in-cluster-defense-repo in the blockreg ACR -  [\"(blockreg.azurecr.io/microsoft-defender-in-cluster-defense-repo).*\"]. Use an empty list to apply this policy to all container images."
              },
              "defaultValue": []
            },
            "severityThresholdForExcludingNotPatchableFindings": {
              "type": "String",
              "metadata": {
                "displayName": "Severity threshold for excluding vulnerabilities without a patch",
                "description": "Specify the maximum severity for exempting vulnerabilities without a patch. For example, specify Medium to ignore Low and Medium vulnerabilities without a patch."
              },
              "allowedValues": [
                "None",
                "Low",
                "Medium",
                "High"
              ],
              "defaultValue": "None"
            },
            "excludeFindingIDs": {
              "type": "Array",
              "metadata": {
                "displayName": "Exclude findings IDs",
                "description": "A list of finding IDs that the policy should exempt."
              },
              "defaultValue": []
            },
            "severity": {
              "type": "Object",
              "metadata": {
                "displayName": "Severity threshold",
                "description": "The number of allowed findings per severity for an image. e.g. \"{\"High\":0,\"Medium\":3,\"Low\":10}\""
              },
              "defaultValue": {
                "High": 0,
                "Medium": 0,
                "Low": 0
              },
              "schema": {
                "type": "object",
                "properties": {
                  "High": {
                    "type": "integer"
                  },
                  "Medium": {
                    "type": "integer"
                  },
                  "Low": {
                    "type": "integer"
                  }
                },
                "required": [
                  "High",
                  "Medium",
                  "Low"
                ],
                "additionalProperties": false
              }
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "Microsoft.ContainerService/managedClusters"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/container-no-vulnerable-images/v1/template.yaml"
                },
                "apiGroups": [
                  "",
                  "apps"
                ],
                "kinds": [
                  "Pod",
                  "Deployment",
                  "ReplicaSet",
                  "StatefulSet",
                  "DaemonSet",
                  "Job",
                  "CronJob",
                  "ReplicationController"
                ],
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "namespaces": "[parameters('namespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "values": {
                  "excludedImages": "[parameters('excludedImages')]",
                  "severityThresholdForExcludingNotPatchableFindings": "[parameters('severityThresholdForExcludingNotPatchableFindings')]",
                  "excludeFindingIDs": "[parameters('excludeFindingIDs')]",
                  "severity": "[parameters('severity')]"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/13cd7ae3-5bc0-4ac4-a62d-4f7c120b9759"
      },
      {
        "Name": "e345eecc-fa47-480f-9e88-67dcc122b164",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/e345eecc-fa47-480f-9e88-67dcc122b164",
        "ResourceName": "e345eecc-fa47-480f-9e88-67dcc122b164",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Enforce container CPU and memory resource limits to prevent resource exhaustion attacks in a Kubernetes cluster. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "DisplayName": "Kubernetes cluster containers CPU and memory resource limits should not exceed the specified limits",
          "Metadata": {
            "version": "8.0.0",
            "category": "Kubernetes"
          },
          "Mode": "Microsoft.Kubernetes.Data",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "'Audit' allows a non-compliant resource to be created, but flags it as non-compliant. 'Deny' blocks the resource creation. 'Disable' turns off the policy."
              },
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Deny"
            },
            "excludedNamespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace exclusions",
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design."
              },
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc"
              ]
            },
            "namespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace inclusions",
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces."
              },
              "defaultValue": []
            },
            "labelSelector": {
              "type": "Object",
              "metadata": {
                "displayName": "Kubernetes label selector",
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources."
              },
              "defaultValue": {},
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "properties": {
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  },
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "additionalProperties": false
              }
            },
            "cpuLimit": {
              "type": "String",
              "metadata": {
                "displayName": "Max allowed CPU units",
                "description": "The maximum CPU units allowed for a container. E.g. 200m. For more information, please refer https://aka.ms/k8s-policy-pod-limits"
              }
            },
            "memoryLimit": {
              "type": "String",
              "metadata": {
                "displayName": "Max allowed memory bytes",
                "description": "The maximum memory bytes allowed for a container. E.g. 1Gi. For more information, please refer https://aka.ms/k8s-policy-pod-limits"
              }
            },
            "excludedContainers": {
              "type": "Array",
              "metadata": {
                "displayName": "Containers exclusions",
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identify is the name of container. Use an empty list to apply this policy to all containers in all namespaces."
              },
              "defaultValue": []
            },
            "excludedImages": {
              "type": "Array",
              "metadata": {
                "displayName": "Image exclusions",
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository."
              },
              "defaultValue": []
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "AKS Engine",
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/container-resource-limits/v3/template.yaml"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ],
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "namespaces": "[parameters('namespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "values": {
                  "cpuLimit": "[parameters('cpuLimit')]",
                  "memoryLimit": "[parameters('memoryLimit')]",
                  "excludedContainers": "[parameters('excludedContainers')]",
                  "excludedImages": "[parameters('excludedImages')]"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e345eecc-fa47-480f-9e88-67dcc122b164"
      },
      {
        "Name": "f06ddb64-5fa3-4b77-b166-acb36f7f6042",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/f06ddb64-5fa3-4b77-b166-acb36f7f6042",
        "ResourceName": "f06ddb64-5fa3-4b77-b166-acb36f7f6042",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Control the user, primary group, supplemental group and file system group IDs that pods and containers can use to run in a Kubernetes Cluster. This recommendation is part of Pod Security Policies which are intended to improve the security of your Kubernetes environments. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "DisplayName": "Kubernetes cluster pods and containers should only run with approved user and group IDs",
          "Metadata": {
            "version": "5.0.2",
            "category": "Kubernetes"
          },
          "Mode": "Microsoft.Kubernetes.Data",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy."
              },
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit"
            },
            "excludedNamespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace exclusions",
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design."
              },
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc"
              ]
            },
            "namespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace inclusions",
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces."
              },
              "defaultValue": []
            },
            "labelSelector": {
              "type": "Object",
              "metadata": {
                "displayName": "Kubernetes label selector",
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources."
              },
              "defaultValue": {},
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "properties": {
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  },
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "additionalProperties": false
              }
            },
            "runAsUserRule": {
              "type": "String",
              "metadata": {
                "displayName": "Run as user rule",
                "description": "The 'RunAsUser' rule that containers are allowed to run with. MustRunAs requires at least one range to be specified. MustRunAsNonRoot requires the pod be submitted with non-zero runAsUser or have USER directive defined (using a numeric UID) in the image. RunAsAny allows any runAsUser to be specified"
              },
              "allowedValues": [
                "MustRunAs",
                "MustRunAsNonRoot",
                "RunAsAny"
              ],
              "defaultValue": "MustRunAsNonRoot"
            },
            "runAsUserRanges": {
              "type": "Object",
              "metadata": {
                "displayName": "Allowed user ID ranges",
                "description": "The user ID ranges that are allowed for containers to use. Set 'max' as '-1' to skip max limit evaluation. Empty array blocks every defined value for 'MustRunAs'."
              },
              "defaultValue": {
                "ranges": []
              },
              "schema": {
                "type": "object",
                "properties": {
                  "ranges": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "min": {
                          "type": "integer"
                        },
                        "max": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "min",
                        "max"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                "required": [
                  "ranges"
                ],
                "additionalProperties": false
              }
            },
            "runAsGroupRule": {
              "type": "String",
              "metadata": {
                "displayName": "Run as group rule",
                "description": "The 'RunAsGroup' rule that containers are allowed to run with. MustRunAs requires at least one range to be specified. MayRunAs does not require that 'RunAsGroup' be specified. RunAsAny allows any"
              },
              "allowedValues": [
                "MustRunAs",
                "MayRunAs",
                "RunAsAny"
              ],
              "defaultValue": "RunAsAny"
            },
            "runAsGroupRanges": {
              "type": "Object",
              "metadata": {
                "displayName": "Allowed group ID ranges",
                "description": "The group ID ranges that are allowed for containers to use. Set 'max' as '-1' to skip max limit evaluation. Empty array blocks every defined value for 'MustRunAs' and 'MayRunAs'."
              },
              "defaultValue": {
                "ranges": []
              },
              "schema": {
                "type": "object",
                "properties": {
                  "ranges": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "min": {
                          "type": "integer"
                        },
                        "max": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "min",
                        "max"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                "required": [
                  "ranges"
                ],
                "additionalProperties": false
              }
            },
            "supplementalGroupsRule": {
              "type": "String",
              "metadata": {
                "displayName": "Supplemental group rule",
                "description": "The 'SupplementalGroups' rule that containers are allowed to run with. MustRunAs requires at least one range to be specified. MayRunAs does not require that 'SupplementalGroups' be specified. RunAsAny allows any"
              },
              "allowedValues": [
                "MustRunAs",
                "MayRunAs",
                "RunAsAny"
              ],
              "defaultValue": "RunAsAny"
            },
            "supplementalGroupsRanges": {
              "type": "Object",
              "metadata": {
                "displayName": "Allowed supplemental group ID ranges",
                "description": "The supplemental group ID ranges that are allowed for containers to use. Set 'max' as '-1' to skip max limit evaluation. Empty array blocks every defined value for 'MustRunAs' and 'MayRunAs'."
              },
              "defaultValue": {
                "ranges": []
              },
              "schema": {
                "type": "object",
                "properties": {
                  "ranges": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "min": {
                          "type": "integer"
                        },
                        "max": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "min",
                        "max"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                "required": [
                  "ranges"
                ],
                "additionalProperties": false
              }
            },
            "fsGroupRule": {
              "type": "String",
              "metadata": {
                "displayName": "File system group rule",
                "description": "The 'FSGroup' rule that containers are allowed to run with. MustRunAs requires at least one range to be specified. MayRunAs does not require that 'FSGroup' be specified. RunAsAny allows any"
              },
              "allowedValues": [
                "MustRunAs",
                "MayRunAs",
                "RunAsAny"
              ],
              "defaultValue": "RunAsAny"
            },
            "fsGroupRanges": {
              "type": "Object",
              "metadata": {
                "displayName": "Allowed file system group ID ranges",
                "description": "The file system group ranges that are allowed for pods to use. Set 'max' as '-1' to skip max limit evaluation. Empty array blocks every defined value for 'MustRunAs' and 'MayRunAs'."
              },
              "defaultValue": {
                "ranges": []
              },
              "schema": {
                "type": "object",
                "properties": {
                  "ranges": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "min": {
                          "type": "integer"
                        },
                        "max": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "min",
                        "max"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                "required": [
                  "ranges"
                ],
                "additionalProperties": false
              }
            },
            "excludedContainers": {
              "type": "Array",
              "metadata": {
                "displayName": "Containers exclusions",
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identify is the name of container. Use an empty list to apply this policy to all containers in all namespaces."
              },
              "defaultValue": []
            },
            "excludedImages": {
              "type": "Array",
              "metadata": {
                "displayName": "Image exclusions",
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository."
              },
              "defaultValue": []
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "AKS Engine",
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/allowed-users-groups/v3/template.yaml"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ],
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "namespaces": "[parameters('namespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "values": {
                  "runAsUser": {
                    "rule": "[parameters('runAsUserRule')]",
                    "ranges": "[parameters('runAsUserRanges').ranges]"
                  },
                  "runAsGroup": {
                    "rule": "[parameters('runAsGroupRule')]",
                    "ranges": "[parameters('runAsGroupRanges').ranges]"
                  },
                  "supplementalGroups": {
                    "rule": "[parameters('supplementalGroupsRule')]",
                    "ranges": "[parameters('supplementalGroupsRanges').ranges]"
                  },
                  "fsGroup": {
                    "rule": "[parameters('fsGroupRule')]",
                    "ranges": "[parameters('fsGroupRanges').ranges]"
                  },
                  "excludedContainers": "[parameters('excludedContainers')]",
                  "excludedImages": "[parameters('excludedImages')]"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f06ddb64-5fa3-4b77-b166-acb36f7f6042"
      },
      {
        "Name": "8dfab9c4-fe7b-49ad-85e4-1e9be085358f",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/8dfab9c4-fe7b-49ad-85e4-1e9be085358f",
        "ResourceName": "8dfab9c4-fe7b-49ad-85e4-1e9be085358f",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Microsoft Defender for Cloud extension for Azure Arc provides threat protection for your Arc enabled Kubernetes clusters. The extension collects data from all nodes in the cluster and sends it to the Azure Defender for Kubernetes backend in the cloud for further analysis. Learn more in https://docs.microsoft.com/azure/defender-for-cloud/defender-for-containers-enable?pivots=defender-for-container-arc.",
          "DisplayName": "[Preview]: Azure Arc enabled Kubernetes clusters should have Microsoft Defender for Cloud extension installed",
          "Metadata": {
            "version": "6.0.0-preview",
            "category": "Kubernetes",
            "preview": "true"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Kubernetes/connectedClusters"
                },
                {
                  "field": "Microsoft.Kubernetes/connectedClusters/distribution",
                  "notIn": [
                    "aks",
                    "aks_management",
                    "eks",
                    "gke"
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.KubernetesConfiguration/extensions",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.KubernetesConfiguration/extensions/extensionType",
                      "equals": "microsoft.azuredefender.kubernetes"
                    },
                    {
                      "field": "Microsoft.KubernetesConfiguration/extensions/provisioningState",
                      "equals": "Succeeded"
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8dfab9c4-fe7b-49ad-85e4-1e9be085358f"
      },
      {
        "Name": "a1840de2-8088-4ea8-b153-b4c723e9cb01",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/a1840de2-8088-4ea8-b153-b4c723e9cb01",
        "ResourceName": "a1840de2-8088-4ea8-b153-b4c723e9cb01",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Microsoft Defender for Containers provides cloud-native Kubernetes security capabilities including environment hardening, workload protection, and run-time protection. When you enable the SecurityProfile.AzureDefender on your Azure Kubernetes Service cluster, an agent is deployed to your cluster to collect security event data. Learn more about Microsoft Defender for Containers in https://docs.microsoft.com/azure/defender-for-cloud/defender-for-containers-introduction?tabs=defender-for-container-arch-aks",
          "DisplayName": "Azure Kubernetes Service clusters should have Defender profile enabled",
          "Metadata": {
            "version": "2.0.0",
            "category": "Kubernetes"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ContainerService/managedClusters"
                },
                {
                  "field": "Microsoft.ContainerService/managedClusters/securityProfile.defender.securityMonitoring.enabled",
                  "notEquals": true
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a1840de2-8088-4ea8-b153-b4c723e9cb01"
      },
      {
        "Name": "5f0f936f-2f01-4bf5-b6be-d423792fa562",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/5f0f936f-2f01-4bf5-b6be-d423792fa562",
        "ResourceName": "5f0f936f-2f01-4bf5-b6be-d423792fa562",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Container image vulnerability assessment scans your registry for security vulnerabilities and exposes detailed findings for each image. Resolving the vulnerabilities can greatly improve your containers' security posture and protect them from attacks.",
          "DisplayName": "Container registry images should have vulnerability findings resolved",
          "Metadata": {
            "version": "2.0.1",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.ContainerRegistry/registries"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "dbd0cb49-b563-45e7-9724-889e799fa648",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5f0f936f-2f01-4bf5-b6be-d423792fa562"
      },
      {
        "Name": "0fc39691-5a3f-4e3e-94ee-2e6447309ad9",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0fc39691-5a3f-4e3e-94ee-2e6447309ad9",
        "ResourceName": "0fc39691-5a3f-4e3e-94ee-2e6447309ad9",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Container image vulnerability assessment scans container images running on your Kubernetes clusters for security vulnerabilities and exposes detailed findings for each image. Resolving the vulnerabilities can greatly improve your containers' security posture and protect them from attacks.",
          "DisplayName": "Running container images should have vulnerability findings resolved",
          "Metadata": {
            "version": "1.0.1",
            "category": "Security Center"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "Microsoft.ContainerService/managedClusters"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "41503391-efa5-47ee-9282-4eff6131462c",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0fc39691-5a3f-4e3e-94ee-2e6447309ad9"
      },
      {
        "Name": "1c6e92c9-99f0-4e55-9cf2-0c234dc48f99",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1c6e92c9-99f0-4e55-9cf2-0c234dc48f99",
        "ResourceName": "1c6e92c9-99f0-4e55-9cf2-0c234dc48f99",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Do not allow containers to run with privilege escalation to root in a Kubernetes cluster. This recommendation is part of CIS 5.2.5 which is intended to improve the security of your Kubernetes environments. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "DisplayName": "Kubernetes clusters should not allow container privilege escalation",
          "Metadata": {
            "version": "6.0.1",
            "category": "Kubernetes"
          },
          "Mode": "Microsoft.Kubernetes.Data",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy."
              },
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit"
            },
            "excludedNamespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace exclusions",
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design."
              },
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc"
              ]
            },
            "namespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace inclusions",
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces."
              },
              "defaultValue": []
            },
            "labelSelector": {
              "type": "Object",
              "metadata": {
                "displayName": "Kubernetes label selector",
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources."
              },
              "defaultValue": {},
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "properties": {
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  },
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "additionalProperties": false
              }
            },
            "excludedContainers": {
              "type": "Array",
              "metadata": {
                "displayName": "Containers exclusions",
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identify is the name of container. Use an empty list to apply this policy to all containers in all namespaces."
              },
              "defaultValue": []
            },
            "excludedImages": {
              "type": "Array",
              "metadata": {
                "displayName": "Image exclusions",
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository."
              },
              "defaultValue": []
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "AKS Engine",
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/container-no-privilege-escalation/v3/template.yaml"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ],
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "namespaces": "[parameters('namespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "values": {
                  "excludedContainers": "[parameters('excludedContainers')]",
                  "excludedImages": "[parameters('excludedImages')]"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1c6e92c9-99f0-4e55-9cf2-0c234dc48f99"
      },
      {
        "Name": "47a1ee2f-2a2a-4576-bf2a-e0e36709c2b8",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/47a1ee2f-2a2a-4576-bf2a-e0e36709c2b8",
        "ResourceName": "47a1ee2f-2a2a-4576-bf2a-e0e36709c2b8",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Block pod containers from sharing the host process ID namespace and host IPC namespace in a Kubernetes cluster. This recommendation is part of CIS 5.2.2 and CIS 5.2.3 which are intended to improve the security of your Kubernetes environments. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "DisplayName": "Kubernetes cluster containers should not share host process ID or host IPC namespace",
          "Metadata": {
            "version": "4.0.1",
            "category": "Kubernetes"
          },
          "Mode": "Microsoft.Kubernetes.Data",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy."
              },
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit"
            },
            "excludedNamespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace exclusions",
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design."
              },
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc"
              ]
            },
            "namespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace inclusions",
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces."
              },
              "defaultValue": []
            },
            "labelSelector": {
              "type": "Object",
              "metadata": {
                "displayName": "Kubernetes label selector",
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources."
              },
              "defaultValue": {},
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "properties": {
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  },
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "additionalProperties": false
              }
            },
            "excludedImages": {
              "type": "Array",
              "metadata": {
                "displayName": "Image exclusions",
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository."
              },
              "defaultValue": []
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "AKS Engine",
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/block-host-namespace/v2/template.yaml"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ],
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "namespaces": "[parameters('namespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "values": {
                  "excludedImages": "[parameters('excludedImages')]"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/47a1ee2f-2a2a-4576-bf2a-e0e36709c2b8"
      },
      {
        "Name": "df49d893-a74c-421d-bc95-c663042e5b80",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/df49d893-a74c-421d-bc95-c663042e5b80",
        "ResourceName": "df49d893-a74c-421d-bc95-c663042e5b80",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Run containers with a read only root file system to protect from changes at run-time with malicious binaries being added to PATH in a Kubernetes cluster. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "DisplayName": "Kubernetes cluster containers should run with a read only root file system",
          "Metadata": {
            "version": "5.0.0",
            "category": "Kubernetes"
          },
          "Mode": "Microsoft.Kubernetes.Data",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy."
              },
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit"
            },
            "excludedNamespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace exclusions",
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design."
              },
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc"
              ]
            },
            "namespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace inclusions",
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces."
              },
              "defaultValue": []
            },
            "labelSelector": {
              "type": "Object",
              "metadata": {
                "displayName": "Kubernetes label selector",
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources."
              },
              "defaultValue": {},
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "properties": {
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  },
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "additionalProperties": false
              }
            },
            "excludedContainers": {
              "type": "Array",
              "metadata": {
                "displayName": "Containers exclusions",
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identify is the name of container. Use an empty list to apply this policy to all containers in all namespaces."
              },
              "defaultValue": []
            },
            "excludedImages": {
              "type": "Array",
              "metadata": {
                "displayName": "Image exclusions",
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository."
              },
              "defaultValue": []
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "AKS Engine",
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/read-only-root-filesystem/v3/template.yaml"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ],
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "namespaces": "[parameters('namespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "values": {
                  "excludedContainers": "[parameters('excludedContainers')]",
                  "excludedImages": "[parameters('excludedImages')]"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/df49d893-a74c-421d-bc95-c663042e5b80"
      },
      {
        "Name": "c26596ff-4d70-4e6a-9a30-c2506bd2f80c",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/c26596ff-4d70-4e6a-9a30-c2506bd2f80c",
        "ResourceName": "c26596ff-4d70-4e6a-9a30-c2506bd2f80c",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Restrict the capabilities to reduce the attack surface of containers in a Kubernetes cluster. This recommendation is part of CIS 5.2.8 and CIS 5.2.9 which are intended to improve the security of your Kubernetes environments. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "DisplayName": "Kubernetes cluster containers should only use allowed capabilities",
          "Metadata": {
            "version": "5.0.1",
            "category": "Kubernetes"
          },
          "Mode": "Microsoft.Kubernetes.Data",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy."
              },
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit"
            },
            "excludedNamespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace exclusions",
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design."
              },
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc"
              ]
            },
            "namespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace inclusions",
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces."
              },
              "defaultValue": []
            },
            "labelSelector": {
              "type": "Object",
              "metadata": {
                "displayName": "Kubernetes label selector",
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources."
              },
              "defaultValue": {},
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "properties": {
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  },
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "additionalProperties": false
              }
            },
            "allowedCapabilities": {
              "type": "Array",
              "metadata": {
                "displayName": "Allowed capabilities",
                "description": "The list of capabilities that are allowed to be added to a container. Provide empty list as input to block everything."
              },
              "defaultValue": []
            },
            "requiredDropCapabilities": {
              "type": "Array",
              "metadata": {
                "displayName": "Required drop capabilities",
                "description": "The list of capabilities that must be dropped by a container."
              },
              "defaultValue": []
            },
            "excludedContainers": {
              "type": "Array",
              "metadata": {
                "displayName": "Containers exclusions",
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identify is the name of container. Use an empty list to apply this policy to all containers in all namespaces."
              },
              "defaultValue": []
            },
            "excludedImages": {
              "type": "Array",
              "metadata": {
                "displayName": "Image exclusions",
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository."
              },
              "defaultValue": []
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "AKS Engine",
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/container-allowed-capabilities/v3/template.yaml"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ],
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "namespaces": "[parameters('namespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "values": {
                  "allowedCapabilities": "[parameters('allowedCapabilities')]",
                  "requiredDropCapabilities": "[parameters('requiredDropCapabilities')]",
                  "excludedContainers": "[parameters('excludedContainers')]",
                  "excludedImages": "[parameters('excludedImages')]"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c26596ff-4d70-4e6a-9a30-c2506bd2f80c"
      },
      {
        "Name": "511f5417-5d12-434d-ab2e-816901e72a5e",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/511f5417-5d12-434d-ab2e-816901e72a5e",
        "ResourceName": "511f5417-5d12-434d-ab2e-816901e72a5e",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Containers should only use allowed AppArmor profiles in a Kubernetes cluster. This recommendation is part of Pod Security Policies which are intended to improve the security of your Kubernetes environments. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "DisplayName": "Kubernetes cluster containers should only use allowed AppArmor profiles",
          "Metadata": {
            "version": "5.0.0",
            "category": "Kubernetes"
          },
          "Mode": "Microsoft.Kubernetes.Data",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy."
              },
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit"
            },
            "excludedNamespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace exclusions",
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design."
              },
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc"
              ]
            },
            "namespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace inclusions",
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces."
              },
              "defaultValue": []
            },
            "labelSelector": {
              "type": "Object",
              "metadata": {
                "displayName": "Kubernetes label selector",
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources."
              },
              "defaultValue": {},
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "properties": {
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  },
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "additionalProperties": false
              }
            },
            "allowedProfiles": {
              "type": "Array",
              "metadata": {
                "displayName": "Allowed AppArmor profiles",
                "description": "The list of AppArmor profiles that containers are allowed to use. E.g. [ \"runtime/default\", \"docker/default\" ]. Provide empty list as input to block everything."
              },
              "defaultValue": [
                "runtime/default"
              ]
            },
            "excludedContainers": {
              "type": "Array",
              "metadata": {
                "displayName": "Containers exclusions",
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identify is the name of container. Use an empty list to apply this policy to all containers in all namespaces."
              },
              "defaultValue": []
            },
            "excludedImages": {
              "type": "Array",
              "metadata": {
                "displayName": "Image exclusions",
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository."
              },
              "defaultValue": []
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "AKS Engine",
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/enforce-apparmor-profile/v3/template.yaml"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ],
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "namespaces": "[parameters('namespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "values": {
                  "allowedProfiles": "[parameters('allowedProfiles')]",
                  "excludedContainers": "[parameters('excludedContainers')]",
                  "excludedImages": "[parameters('excludedImages')]"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/511f5417-5d12-434d-ab2e-816901e72a5e"
      },
      {
        "Name": "82985f06-dc18-4a48-bc1c-b9f4f0098cfe",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/82985f06-dc18-4a48-bc1c-b9f4f0098cfe",
        "ResourceName": "82985f06-dc18-4a48-bc1c-b9f4f0098cfe",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Restrict pod access to the host network and the allowable host port range in a Kubernetes cluster. This recommendation is part of CIS 5.2.4 which is intended to improve the security of your Kubernetes environments. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "DisplayName": "Kubernetes cluster pods should only use approved host network and port range",
          "Metadata": {
            "version": "5.0.0",
            "category": "Kubernetes"
          },
          "Mode": "Microsoft.Kubernetes.Data",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy."
              },
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit"
            },
            "excludedNamespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace exclusions",
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design."
              },
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc"
              ]
            },
            "namespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace inclusions",
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces."
              },
              "defaultValue": []
            },
            "labelSelector": {
              "type": "Object",
              "metadata": {
                "displayName": "Kubernetes label selector",
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources."
              },
              "defaultValue": {},
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "properties": {
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  },
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "additionalProperties": false
              }
            },
            "allowHostNetwork": {
              "type": "Boolean",
              "metadata": {
                "displayName": "Allow host network usage",
                "description": "Set this value to true if pod is allowed to use host network otherwise false."
              },
              "defaultValue": false
            },
            "minPort": {
              "type": "Integer",
              "metadata": {
                "displayName": "Min host port",
                "description": "The minimum value in the allowable host port range that pods can use in the host network namespace."
              },
              "defaultValue": 0
            },
            "maxPort": {
              "type": "Integer",
              "metadata": {
                "displayName": "Max host port",
                "description": "The maximum value in the allowable host port range that pods can use in the host network namespace."
              },
              "defaultValue": 0
            },
            "excludedContainers": {
              "type": "Array",
              "metadata": {
                "displayName": "Containers exclusions",
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identify is the name of container. Use an empty list to apply this policy to all containers in all namespaces."
              },
              "defaultValue": []
            },
            "excludedImages": {
              "type": "Array",
              "metadata": {
                "displayName": "Image exclusions",
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository."
              },
              "defaultValue": []
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "AKS Engine",
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/host-network-ports/v3/template.yaml"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ],
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "namespaces": "[parameters('namespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "values": {
                  "allowHostNetwork": "[parameters('allowHostNetwork')]",
                  "minPort": "[parameters('minPort')]",
                  "maxPort": "[parameters('maxPort')]",
                  "excludedContainers": "[parameters('excludedContainers')]",
                  "excludedImages": "[parameters('excludedImages')]"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/82985f06-dc18-4a48-bc1c-b9f4f0098cfe"
      },
      {
        "Name": "098fc59e-46c7-4d99-9b16-64990e543d75",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/098fc59e-46c7-4d99-9b16-64990e543d75",
        "ResourceName": "098fc59e-46c7-4d99-9b16-64990e543d75",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Limit pod HostPath volume mounts to the allowed host paths in a Kubernetes Cluster. This recommendation is part of Pod Security Policies which are intended to improve the security of your Kubernetes environments. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "DisplayName": "Kubernetes cluster pod hostPath volumes should only use allowed host paths",
          "Metadata": {
            "version": "5.0.1",
            "category": "Kubernetes"
          },
          "Mode": "Microsoft.Kubernetes.Data",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy."
              },
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit"
            },
            "excludedNamespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace exclusions",
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design."
              },
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc"
              ]
            },
            "namespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace inclusions",
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces."
              },
              "defaultValue": []
            },
            "labelSelector": {
              "type": "Object",
              "metadata": {
                "displayName": "Kubernetes label selector",
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources."
              },
              "defaultValue": {},
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "properties": {
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  },
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "additionalProperties": false
              }
            },
            "allowedHostPaths": {
              "type": "Object",
              "metadata": {
                "displayName": "Allowed host paths",
                "description": "The host paths allowed for pod hostPath volumes to use. Provide an empty paths list to block all host paths."
              },
              "defaultValue": {
                "paths": []
              },
              "schema": {
                "type": "object",
                "properties": {
                  "paths": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "pathPrefix": {
                          "type": "string"
                        },
                        "readOnly": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "pathPrefix",
                        "readOnly"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                "required": [
                  "paths"
                ],
                "additionalProperties": false
              }
            },
            "excludedContainers": {
              "type": "Array",
              "metadata": {
                "displayName": "Containers exclusions",
                "description": "The list of InitContainers and Containers to exclude from readonly evaluation. It will not exclude the disallowed host path. The identify is the name of container. Use an empty list to apply this policy to all containers in all namespaces."
              },
              "defaultValue": []
            },
            "excludedImages": {
              "type": "Array",
              "metadata": {
                "displayName": "Image exclusions",
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository."
              },
              "defaultValue": []
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "AKS Engine",
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/allowed-host-paths/v3/template.yaml"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ],
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "namespaces": "[parameters('namespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "values": {
                  "allowedHostPaths": "[parameters('allowedHostPaths').paths]",
                  "excludedContainers": "[parameters('excludedContainers')]",
                  "excludedImages": "[parameters('excludedImages')]"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/098fc59e-46c7-4d99-9b16-64990e543d75"
      },
      {
        "Name": "4fa4b6c0-31ca-4c0d-b10d-24b96f62a751",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/4fa4b6c0-31ca-4c0d-b10d-24b96f62a751",
        "ResourceName": "4fa4b6c0-31ca-4c0d-b10d-24b96f62a751",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Anonymous public read access to containers and blobs in Azure Storage is a convenient way to share data but might present security risks. To prevent data breaches caused by undesired anonymous access, Microsoft recommends preventing public access to a storage account unless your scenario requires it.",
          "DisplayName": "[Preview]: Storage account public access should be disallowed",
          "Metadata": {
            "version": "3.1.0-preview",
            "category": "Storage",
            "preview": true
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "The effect determines what happens when the policy rule is evaluated to match"
              },
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Storage/storageAccounts"
                },
                {
                  "not": {
                    "allOf": [
                      {
                        "field": "id",
                        "contains": "/resourceGroups/aro-"
                      },
                      {
                        "anyOf": [
                          {
                            "field": "name",
                            "like": "cluster*"
                          },
                          {
                            "field": "name",
                            "like": "imageregistry*"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "not": {
                    "field": "Microsoft.Storage/storageAccounts/allowBlobPublicAccess",
                    "equals": "false"
                  }
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4fa4b6c0-31ca-4c0d-b10d-24b96f62a751"
      },
      {
        "Name": "013e242c-8828-4970-87b3-ab247555486d",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/013e242c-8828-4970-87b3-ab247555486d",
        "ResourceName": "013e242c-8828-4970-87b3-ab247555486d",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Ensure protection of your Azure Virtual Machines by enabling Azure Backup. Azure Backup is a secure and cost effective data protection solution for Azure.",
          "DisplayName": "Azure Backup should be enabled for Virtual Machines",
          "Metadata": {
            "version": "3.0.0",
            "category": "Backup"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                  "field": "id",
                  "notContains": "/resourceGroups/databricks-rg-"
                },
                {
                  "field": "Microsoft.Compute/imagePublisher",
                  "notEquals": "azureopenshift"
                },
                {
                  "field": "Microsoft.Compute/imagePublisher",
                  "notEquals": "AzureDatabricks"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.RecoveryServices/backupprotecteditems"
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/013e242c-8828-4970-87b3-ab247555486d"
      },
      {
        "Name": "0da106f2-4ca3-48e8-bc85-c638fe6aea8f",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0da106f2-4ca3-48e8-bc85-c638fe6aea8f",
        "ResourceName": "0da106f2-4ca3-48e8-bc85-c638fe6aea8f",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Use a managed identity for enhanced authentication security",
          "DisplayName": "Function apps should use managed identity",
          "Metadata": {
            "version": "3.0.0",
            "category": "App Service"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "contains": "functionapp"
                },
                {
                  "field": "kind",
                  "notContains": "workflowapp"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "name": "web",
                "existenceCondition": {
                  "anyOf": [
                    {
                      "field": "Microsoft.Web/sites/config/managedServiceIdentityId",
                      "exists": "true"
                    },
                    {
                      "field": "Microsoft.Web/sites/config/xmanagedServiceIdentityId",
                      "exists": "true"
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0da106f2-4ca3-48e8-bc85-c638fe6aea8f"
      },
      {
        "Name": "0ec47710-77ff-4a3d-9181-6aa50af424d0",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0ec47710-77ff-4a3d-9181-6aa50af424d0",
        "ResourceName": "0ec47710-77ff-4a3d-9181-6aa50af424d0",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Database for MariaDB allows you to choose the redundancy option for your database server. It can be set to a geo-redundant backup storage in which the data is not only stored within the region in which your server is hosted, but is also replicated to a paired region to provide recovery option in case of a region failure. Configuring geo-redundant storage for backup is only allowed during server create.",
          "DisplayName": "Geo-redundant backup should be enabled for Azure Database for MariaDB",
          "Metadata": {
            "version": "1.0.1",
            "category": "SQL"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.DBforMariaDB/servers"
                },
                {
                  "field": "Microsoft.DBforMariaDB/servers/storageProfile.geoRedundantBackup",
                  "notEquals": "Enabled"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0ec47710-77ff-4a3d-9181-6aa50af424d0"
      },
      {
        "Name": "2b9ad585-36bc-4615-b300-fd4435808332",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/2b9ad585-36bc-4615-b300-fd4435808332",
        "ResourceName": "2b9ad585-36bc-4615-b300-fd4435808332",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Use a managed identity for enhanced authentication security",
          "DisplayName": "App Service apps should use managed identity",
          "Metadata": {
            "version": "3.0.0",
            "category": "App Service"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "notContains": "functionapp"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "name": "web",
                "existenceCondition": {
                  "anyOf": [
                    {
                      "field": "Microsoft.Web/sites/config/managedServiceIdentityId",
                      "exists": "true"
                    },
                    {
                      "field": "Microsoft.Web/sites/config/xmanagedServiceIdentityId",
                      "exists": "true"
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2b9ad585-36bc-4615-b300-fd4435808332"
      },
      {
        "Name": "48af4db5-9b8b-401c-8e74-076be876a430",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/48af4db5-9b8b-401c-8e74-076be876a430",
        "ResourceName": "48af4db5-9b8b-401c-8e74-076be876a430",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Database for PostgreSQL allows you to choose the redundancy option for your database server. It can be set to a geo-redundant backup storage in which the data is not only stored within the region in which your server is hosted, but is also replicated to a paired region to provide recovery option in case of a region failure. Configuring geo-redundant storage for backup is only allowed during server create.",
          "DisplayName": "Geo-redundant backup should be enabled for Azure Database for PostgreSQL",
          "Metadata": {
            "version": "1.0.1",
            "category": "SQL"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.DBforPostgreSQL/servers"
                },
                {
                  "field": "Microsoft.DBforPostgreSQL/servers/storageProfile.geoRedundantBackup",
                  "notEquals": "Enabled"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/48af4db5-9b8b-401c-8e74-076be876a430"
      },
      {
        "Name": "5bb220d9-2698-4ee4-8404-b9c30c9df609",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/5bb220d9-2698-4ee4-8404-b9c30c9df609",
        "ResourceName": "5bb220d9-2698-4ee4-8404-b9c30c9df609",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Client certificates allow for the app to request a certificate for incoming requests. Only clients that have a valid certificate will be able to reach the app.",
          "DisplayName": "App Service apps should have 'Client Certificates (Incoming client certificates)' enabled",
          "Metadata": {
            "version": "2.0.0",
            "category": "App Service"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "kind",
                  "notContains": "functionapp"
                },
                {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Web/sites"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Web/sites/clientCertEnabled",
                              "exists": "false"
                            },
                            {
                              "field": "Microsoft.Web/sites/clientCertEnabled",
                              "equals": "false"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Web/sites/slots"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Web/sites/slots/clientCertEnabled",
                              "exists": "false"
                            },
                            {
                              "field": "Microsoft.Web/sites/slots/clientCertEnabled",
                              "equals": "false"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5bb220d9-2698-4ee4-8404-b9c30c9df609"
      },
      {
        "Name": "82339799-d096-41ae-8538-b108becf0970",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/82339799-d096-41ae-8538-b108becf0970",
        "ResourceName": "82339799-d096-41ae-8538-b108becf0970",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Database for MySQL allows you to choose the redundancy option for your database server. It can be set to a geo-redundant backup storage in which the data is not only stored within the region in which your server is hosted, but is also replicated to a paired region to provide recovery option in case of a region failure. Configuring geo-redundant storage for backup is only allowed during server create.",
          "DisplayName": "Geo-redundant backup should be enabled for Azure Database for MySQL",
          "Metadata": {
            "version": "1.0.1",
            "category": "SQL"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.DBforMySQL/servers"
                },
                {
                  "field": "Microsoft.DBforMySQL/servers/storageProfile.geoRedundantBackup",
                  "notEquals": "Enabled"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/82339799-d096-41ae-8538-b108becf0970"
      },
      {
        "Name": "91a78b24-f231-4a8a-8da9-02c35b2b6510",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/91a78b24-f231-4a8a-8da9-02c35b2b6510",
        "ResourceName": "91a78b24-f231-4a8a-8da9-02c35b2b6510",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Audit enabling of resource logs on the app. This enables you to recreate activity trails for investigation purposes if a security incident occurs or your network is compromised.",
          "DisplayName": "App Service apps should have resource logs enabled",
          "Metadata": {
            "version": "2.0.1",
            "category": "App Service"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            },
            "requiredRetentionDays": {
              "type": "String",
              "metadata": {
                "displayName": "Required retention (days)",
                "description": "The required resource logs retention in days"
              },
              "defaultValue": "365"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "notContains": "functionapp"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/91a78b24-f231-4a8a-8da9-02c35b2b6510"
      },
      {
        "Name": "d158790f-bfb0-486c-8631-2dc6b4e8e6af",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/d158790f-bfb0-486c-8631-2dc6b4e8e6af",
        "ResourceName": "d158790f-bfb0-486c-8631-2dc6b4e8e6af",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Database for PostgreSQL supports connecting your Azure Database for PostgreSQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
          "DisplayName": "Enforce SSL connection should be enabled for PostgreSQL database servers",
          "Metadata": {
            "version": "1.0.1",
            "category": "SQL"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.DBforPostgreSQL/servers"
                },
                {
                  "field": "Microsoft.DBforPostgreSQL/servers/sslEnforcement",
                  "exists": "true"
                },
                {
                  "field": "Microsoft.DBforPostgreSQL/servers/sslEnforcement",
                  "notEquals": "Enabled"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d158790f-bfb0-486c-8631-2dc6b4e8e6af"
      },
      {
        "Name": "e802a67a-daf5-4436-9ea6-f6d821dd0c5d",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/e802a67a-daf5-4436-9ea6-f6d821dd0c5d",
        "ResourceName": "e802a67a-daf5-4436-9ea6-f6d821dd0c5d",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Database for MySQL supports connecting your Azure Database for MySQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
          "DisplayName": "Enforce SSL connection should be enabled for MySQL database servers",
          "Metadata": {
            "version": "1.0.1",
            "category": "SQL"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.DBforMySQL/servers"
                },
                {
                  "field": "Microsoft.DBforMySQL/servers/sslEnforcement",
                  "exists": "true"
                },
                {
                  "field": "Microsoft.DBforMySQL/servers/sslEnforcement",
                  "notEquals": "Enabled"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e802a67a-daf5-4436-9ea6-f6d821dd0c5d"
      },
      {
        "Name": "f0e6e85b-9b9f-4a4b-b67b-f730d42f1b0b",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/f0e6e85b-9b9f-4a4b-b67b-f730d42f1b0b",
        "ResourceName": "f0e6e85b-9b9f-4a4b-b67b-f730d42f1b0b",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Upgrade to the latest TLS version.",
          "DisplayName": "App Service apps should use the latest TLS version",
          "Metadata": {
            "version": "2.0.0",
            "category": "App Service"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "notContains": "functionapp"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "name": "web",
                "existenceCondition": {
                  "field": "Microsoft.Web/sites/config/minTlsVersion",
                  "equals": "1.2"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f0e6e85b-9b9f-4a4b-b67b-f730d42f1b0b"
      },
      {
        "Name": "f9d614c5-c173-4d56-95a7-b4437057d193",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/f9d614c5-c173-4d56-95a7-b4437057d193",
        "ResourceName": "f9d614c5-c173-4d56-95a7-b4437057d193",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Upgrade to the latest TLS version.",
          "DisplayName": "Function apps should use the latest TLS version",
          "Metadata": {
            "version": "2.0.0",
            "category": "App Service"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "contains": "functionapp"
                },
                {
                  "field": "kind",
                  "notContains": "workflowapp"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "name": "web",
                "existenceCondition": {
                  "field": "Microsoft.Web/sites/config/minTlsVersion",
                  "equals": "1.2"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f9d614c5-c173-4d56-95a7-b4437057d193"
      },
      {
        "Name": "7261b898-8a84-4db8-9e04-18527132abb3",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/7261b898-8a84-4db8-9e04-18527132abb3",
        "ResourceName": "7261b898-8a84-4db8-9e04-18527132abb3",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Periodically, newer versions are released for PHP software either due to security flaws or to include additional functionality. Using the latest PHP version for App Service apps is recommended in order to take advantage of security fixes, if any, and/or new functionalities of the latest version. Currently, this policy only applies to Linux apps.",
          "DisplayName": "App Service apps that use PHP should use the latest 'PHP version'",
          "Metadata": {
            "version": "3.0.0",
            "category": "App Service"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            },
            "PHPLatestVersion": {
              "type": "String",
              "metadata": {
                "displayName": "Latest PHP version",
                "description": "Latest supported PHP version for App Services"
              },
              "defaultValue": "8.0"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "notContains": "functionapp"
                },
                {
                  "field": "kind",
                  "contains": "linux"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "name": "web",
                "existenceCondition": {
                  "anyOf": [
                    {
                      "field": "Microsoft.Web/sites/config/web.linuxFxVersion",
                      "notContains": "PHP"
                    },
                    {
                      "field": "Microsoft.Web/sites/config/web.linuxFxVersion",
                      "equals": "[concat('PHP|', parameters('PHPLatestVersion'))]"
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7261b898-8a84-4db8-9e04-18527132abb3"
      },
      {
        "Name": "496223c3-ad65-4ecd-878a-bae78737e9ed",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/496223c3-ad65-4ecd-878a-bae78737e9ed",
        "ResourceName": "496223c3-ad65-4ecd-878a-bae78737e9ed",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Periodically, newer versions are released for Java software either due to security flaws or to include additional functionality. Using the latest Java version for web apps is recommended in order to take advantage of security fixes, if any, and/or new functionalities of the latest version. Currently, this policy only applies to Linux apps.",
          "DisplayName": "App Service apps that use Java should use the latest 'Java version'",
          "Metadata": {
            "version": "3.0.0",
            "category": "App Service"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            },
            "JavaLatestVersion": {
              "type": "String",
              "metadata": {
                "displayName": "Latest Java version",
                "description": "Latest supported Java version for App Services"
              },
              "defaultValue": "11"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "notContains": "functionapp"
                },
                {
                  "field": "kind",
                  "contains": "linux"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "name": "web",
                "existenceCondition": {
                  "anyOf": [
                    {
                      "field": "Microsoft.Web/sites/config/web.linuxFxVersion",
                      "notContains": "JAVA"
                    },
                    {
                      "field": "Microsoft.Web/sites/config/web.linuxFxVersion",
                      "like": "[concat('*', parameters('JavaLatestVersion'))]"
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/496223c3-ad65-4ecd-878a-bae78737e9ed"
      },
      {
        "Name": "9d0b6ea4-93e2-4578-bf2f-6bb17d22b4bc",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/9d0b6ea4-93e2-4578-bf2f-6bb17d22b4bc",
        "ResourceName": "9d0b6ea4-93e2-4578-bf2f-6bb17d22b4bc",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Periodically, newer versions are released for Java software either due to security flaws or to include additional functionality. Using the latest Java version for Function apps is recommended in order to take advantage of security fixes, if any, and/or new functionalities of the latest version. Currently, this policy only applies to Linux apps.",
          "DisplayName": "Function apps that use Java should use the latest 'Java version'",
          "Metadata": {
            "version": "3.0.0",
            "category": "App Service"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            },
            "JavaLatestVersion": {
              "type": "String",
              "metadata": {
                "displayName": "Latest Java version",
                "description": "Latest supported Java version for App Services"
              },
              "defaultValue": "11"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "contains": "functionapp"
                },
                {
                  "field": "kind",
                  "notContains": "workflowapp"
                },
                {
                  "field": "kind",
                  "contains": "linux"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "name": "web",
                "existenceCondition": {
                  "anyOf": [
                    {
                      "field": "Microsoft.Web/sites/config/web.linuxFxVersion",
                      "notContains": "JAVA"
                    },
                    {
                      "field": "Microsoft.Web/sites/config/web.linuxFxVersion",
                      "like": "[concat('*', parameters('JavaLatestVersion'))]"
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9d0b6ea4-93e2-4578-bf2f-6bb17d22b4bc"
      },
      {
        "Name": "7008174a-fd10-4ef0-817e-fc820a951d73",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/7008174a-fd10-4ef0-817e-fc820a951d73",
        "ResourceName": "7008174a-fd10-4ef0-817e-fc820a951d73",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Periodically, newer versions are released for Python software either due to security flaws or to include additional functionality. Using the latest Python version for App Service apps is recommended in order to take advantage of security fixes, if any, and/or new functionalities of the latest version. This policy only applies to Linux apps.",
          "DisplayName": "App Service apps that use Python should use the latest 'Python version'",
          "Metadata": {
            "version": "4.0.0",
            "category": "App Service"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            },
            "WindowsPythonLatestVersion": {
              "type": "String",
              "metadata": {
                "displayName": "[Deprecated]: Latest Windows Python version",
                "description": "Latest supported Python version for App Services",
                "deprecated": true
              },
              "defaultValue": "3.6"
            },
            "LinuxPythonLatestVersion": {
              "type": "String",
              "metadata": {
                "displayName": "Linux Latest Python version",
                "description": "Latest supported Python version for App Services"
              },
              "defaultValue": "3.9"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "notContains": "functionapp"
                },
                {
                  "field": "kind",
                  "contains": "linux"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "name": "web",
                "existenceCondition": {
                  "anyOf": [
                    {
                      "field": "Microsoft.Web/sites/config/web.linuxFxVersion",
                      "notContains": "PYTHON"
                    },
                    {
                      "field": "Microsoft.Web/sites/config/web.linuxFxVersion",
                      "equals": "[concat('PYTHON|', parameters('LinuxPythonLatestVersion'))]"
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7008174a-fd10-4ef0-817e-fc820a951d73"
      },
      {
        "Name": "7238174a-fd10-4ef0-817e-fc820a951d73",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/7238174a-fd10-4ef0-817e-fc820a951d73",
        "ResourceName": "7238174a-fd10-4ef0-817e-fc820a951d73",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Periodically, newer versions are released for Python software either due to security flaws or to include additional functionality. Using the latest Python version for Function apps is recommended in order to take advantage of security fixes, if any, and/or new functionalities of the latest version. This policy only applies to Linux apps since Python is not supported on Windows apps.",
          "DisplayName": "Function apps that use Python should use the latest 'Python version'",
          "Metadata": {
            "version": "4.0.0",
            "category": "App Service"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            },
            "WindowsPythonLatestVersion": {
              "type": "String",
              "metadata": {
                "displayName": "[Deprecated]: Latest Windows Python version",
                "description": "Latest supported Python version for App Services",
                "deprecated": true
              },
              "defaultValue": "3.6"
            },
            "LinuxPythonLatestVersion": {
              "type": "String",
              "metadata": {
                "displayName": "Linux Latest Python version",
                "description": "Latest supported Python version for App Services"
              },
              "defaultValue": "3.9"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "contains": "functionapp"
                },
                {
                  "field": "kind",
                  "notContains": "workflowapp"
                },
                {
                  "field": "kind",
                  "contains": "linux"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "name": "web",
                "existenceCondition": {
                  "anyOf": [
                    {
                      "field": "Microsoft.Web/sites/config/web.linuxFxVersion",
                      "notContains": "PYTHON"
                    },
                    {
                      "field": "Microsoft.Web/sites/config/web.linuxFxVersion",
                      "equals": "[concat('PYTHON|', parameters('LinuxPythonLatestVersion'))]"
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7238174a-fd10-4ef0-817e-fc820a951d73"
      },
      {
        "Name": "0564d078-92f5-4f97-8398-b9f58a51f70b",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0564d078-92f5-4f97-8398-b9f58a51f70b",
        "ResourceName": "0564d078-92f5-4f97-8398-b9f58a51f70b",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Private endpoint connections enforce secure communication by enabling private connectivity to Azure Database for PostgreSQL. Configure a private endpoint connection to enable access to traffic coming only from known networks and prevent access from all other IP addresses, including within Azure.",
          "DisplayName": "Private endpoint should be enabled for PostgreSQL servers",
          "Metadata": {
            "version": "1.0.2",
            "category": "SQL"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.DBforPostgreSQL/servers"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.DBforPostgreSQL/servers/privateEndpointConnections",
                "existenceCondition": {
                  "field": "Microsoft.DBforPostgreSQL/servers/privateEndpointConnections/privateLinkServiceConnectionState.status",
                  "equals": "Approved"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0564d078-92f5-4f97-8398-b9f58a51f70b"
      },
      {
        "Name": "0a1302fb-a631-4106-9753-f3d494733990",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0a1302fb-a631-4106-9753-f3d494733990",
        "ResourceName": "0a1302fb-a631-4106-9753-f3d494733990",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Private endpoint connections enforce secure communication by enabling private connectivity to Azure Database for MariaDB. Configure a private endpoint connection to enable access to traffic coming only from known networks and prevent access from all other IP addresses, including within Azure.",
          "DisplayName": "Private endpoint should be enabled for MariaDB servers",
          "Metadata": {
            "version": "1.0.2",
            "category": "SQL"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.DBforMariaDB/servers"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.DBforMariaDB/servers/privateEndpointConnections",
                "existenceCondition": {
                  "field": "Microsoft.DBforMariaDB/servers/privateEndpointConnections/privateLinkServiceConnectionState.status",
                  "equals": "Approved"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a1302fb-a631-4106-9753-f3d494733990"
      },
      {
        "Name": "7595c971-233d-4bcf-bd18-596129188c49",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/7595c971-233d-4bcf-bd18-596129188c49",
        "ResourceName": "7595c971-233d-4bcf-bd18-596129188c49",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Private endpoint connections enforce secure communication by enabling private connectivity to Azure Database for MySQL. Configure a private endpoint connection to enable access to traffic coming only from known networks and prevent access from all other IP addresses, including within Azure.",
          "DisplayName": "Private endpoint should be enabled for MySQL servers",
          "Metadata": {
            "version": "1.0.2",
            "category": "SQL"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.DBforMySQL/servers"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.DBforMySQL/servers/privateEndpointConnections",
                "existenceCondition": {
                  "field": "Microsoft.DBforMySQL/servers/privateEndpointConnections/privateLinkServiceConnectionState.status",
                  "equals": "Approved"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7595c971-233d-4bcf-bd18-596129188c49"
      },
      {
        "Name": "89099bee-89e0-4b26-a5f4-165451757743",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/89099bee-89e0-4b26-a5f4-165451757743",
        "ResourceName": "89099bee-89e0-4b26-a5f4-165451757743",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "For incident investigation purposes, we recommend setting the data retention for your SQL Server' auditing to storage account destination to at least 90 days. Confirm that you are meeting the necessary retention rules for the regions in which you are operating. This is sometimes required for compliance with regulatory standards.",
          "DisplayName": "SQL servers with auditing to storage account destination should be configured with 90 days retention or higher",
          "Metadata": {
            "version": "3.0.0",
            "category": "SQL"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Sql/servers"
                },
                {
                  "field": "kind",
                  "notContains": "analytics"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Sql/servers/auditingSettings",
                "name": "default",
                "existenceCondition": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Sql/servers/auditingSettings/isAzureMonitorTargetEnabled",
                          "equals": true
                        },
                        {
                          "field": "Microsoft.Sql/servers/auditingSettings/storageEndpoint",
                          "equals": ""
                        }
                      ]
                    },
                    {
                      "field": "Microsoft.Sql/servers/auditingSettings/retentionDays",
                      "equals": 0
                    },
                    {
                      "field": "Microsoft.Sql/servers/auditingSettings/retentionDays",
                      "greaterOrEquals": 90
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/89099bee-89e0-4b26-a5f4-165451757743"
      },
      {
        "Name": "399b2637-a50f-4f95-96f8-3a145476eb15",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/399b2637-a50f-4f95-96f8-3a145476eb15",
        "ResourceName": "399b2637-a50f-4f95-96f8-3a145476eb15",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Enable FTPS enforcement for enhanced security.",
          "DisplayName": "Function apps should require FTPS only",
          "Metadata": {
            "version": "3.0.0",
            "category": "App Service"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "contains": "functionapp"
                },
                {
                  "field": "kind",
                  "notContains": "workflowapp"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "name": "web",
                "existenceCondition": {
                  "field": "Microsoft.Web/sites/config/ftpsState",
                  "in": [
                    "FtpsOnly",
                    "Disabled"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/399b2637-a50f-4f95-96f8-3a145476eb15"
      },
      {
        "Name": "4d24b6d4-5e53-4a4f-a7f4-618fa573ee4b",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/4d24b6d4-5e53-4a4f-a7f4-618fa573ee4b",
        "ResourceName": "4d24b6d4-5e53-4a4f-a7f4-618fa573ee4b",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Enable FTPS enforcement for enhanced security.",
          "DisplayName": "App Service apps should require FTPS only",
          "Metadata": {
            "version": "3.0.0",
            "category": "App Service"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "notContains": "functionapp"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "name": "web",
                "existenceCondition": {
                  "field": "Microsoft.Web/sites/config/ftpsState",
                  "in": [
                    "FtpsOnly",
                    "Disabled"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4d24b6d4-5e53-4a4f-a7f4-618fa573ee4b"
      },
      {
        "Name": "eaebaea7-8013-4ceb-9d14-7eb32271373c",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/eaebaea7-8013-4ceb-9d14-7eb32271373c",
        "ResourceName": "eaebaea7-8013-4ceb-9d14-7eb32271373c",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Client certificates allow for the app to request a certificate for incoming requests. Only clients with valid certificates will be able to reach the app.",
          "DisplayName": "Function apps should have 'Client Certificates (Incoming client certificates)' enabled",
          "Metadata": {
            "version": "2.0.0",
            "category": "App Service"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "kind",
                  "contains": "functionapp"
                },
                {
                  "field": "kind",
                  "notContains": "workflowapp"
                },
                {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Web/sites"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Web/sites/clientCertEnabled",
                              "exists": "false"
                            },
                            {
                              "field": "Microsoft.Web/sites/clientCertEnabled",
                              "equals": "false"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Web/sites/slots"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Web/sites/slots/clientCertEnabled",
                              "exists": "false"
                            },
                            {
                              "field": "Microsoft.Web/sites/slots/clientCertEnabled",
                              "equals": "false"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/eaebaea7-8013-4ceb-9d14-7eb32271373c"
      },
      {
        "Name": "67121cc7-ff39-4ab8-b7e3-95b84dab487d",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/67121cc7-ff39-4ab8-b7e3-95b84dab487d",
        "ResourceName": "67121cc7-ff39-4ab8-b7e3-95b84dab487d",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data stored in Cognitive Services to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about customer-managed keys at https://go.microsoft.com/fwlink/?linkid=2121321.",
          "DisplayName": "Cognitive Services accounts should enable data encryption with a customer-managed key",
          "Metadata": {
            "version": "2.0.0",
            "category": "Cognitive Services"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "The effect determines what happens when the policy rule is evaluated to match"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.CognitiveServices/accounts"
                },
                {
                  "field": "Microsoft.CognitiveServices/accounts/encryption.keySource",
                  "notEquals": "Microsoft.KeyVault"
                },
                {
                  "count": {
                    "field": "Microsoft.CognitiveServices/accounts/capabilities[*]",
                    "where": {
                      "field": "Microsoft.CognitiveServices/accounts/capabilities[*].name",
                      "equals": "CustomerManagedKey"
                    }
                  },
                  "greater": 0
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/67121cc7-ff39-4ab8-b7e3-95b84dab487d"
      },
      {
        "Name": "1f905d99-2ab7-462c-a6b0-f709acca6c8f",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1f905d99-2ab7-462c-a6b0-f709acca6c8f",
        "ResourceName": "1f905d99-2ab7-462c-a6b0-f709acca6c8f",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Use customer-managed keys to manage the encryption at rest of your Azure Cosmos DB. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more at https://aka.ms/cosmosdb-cmk.",
          "DisplayName": "Azure Cosmos DB accounts should use customer-managed keys to encrypt data at rest",
          "Metadata": {
            "version": "1.1.0",
            "category": "Cosmos DB"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "The desired effect of the policy."
              },
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "Microsoft.DocumentDB/databaseAccounts/keyVaultKeyUri",
                  "exists": false
                },
                {
                  "field": "type",
                  "equals": "Microsoft.DocumentDB/databaseAccounts"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1f905d99-2ab7-462c-a6b0-f709acca6c8f"
      },
      {
        "Name": "5450f5bd-9c72-4390-a9c4-a7aba4edfdd2",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/5450f5bd-9c72-4390-a9c4-a7aba4edfdd2",
        "ResourceName": "5450f5bd-9c72-4390-a9c4-a7aba4edfdd2",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Disabling local authentication methods improves security by ensuring that Cosmos DB database accounts exclusively require Azure Active Directory identities for authentication. Learn more at: https://docs.microsoft.com/azure/cosmos-db/how-to-setup-rbac#disable-local-auth.",
          "DisplayName": "Cosmos DB database accounts should have local authentication methods disabled",
          "Metadata": {
            "version": "1.0.0",
            "category": "Cosmos DB"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.DocumentDB/databaseAccounts"
                },
                {
                  "field": "Microsoft.DocumentDB/databaseAccounts/disableLocalAuth",
                  "notEquals": true
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5450f5bd-9c72-4390-a9c4-a7aba4edfdd2"
      },
      {
        "Name": "0b60c0b2-2dc2-4e1c-b5c9-abbed971de53",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0b60c0b2-2dc2-4e1c-b5c9-abbed971de53",
        "ResourceName": "0b60c0b2-2dc2-4e1c-b5c9-abbed971de53",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Malicious deletion of a key vault can lead to permanent data loss. A malicious insider in your organization can potentially delete and purge key vaults. Purge protection protects you from insider attacks by enforcing a mandatory retention period for soft deleted key vaults. No one inside your organization or Microsoft will be able to purge your key vaults during the soft delete retention period.",
          "DisplayName": "Key vaults should have purge protection enabled",
          "Metadata": {
            "version": "2.0.0",
            "category": "Key Vault"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.KeyVault/vaults"
                },
                {
                  "not": {
                    "field": "Microsoft.KeyVault/vaults/createMode",
                    "equals": "recover"
                  }
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.KeyVault/vaults/enablePurgeProtection",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                      "equals": "false"
                    },
                    {
                      "field": "Microsoft.KeyVault/vaults/enablePurgeProtection",
                      "equals": "false"
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0b60c0b2-2dc2-4e1c-b5c9-abbed971de53"
      },
      {
        "Name": "1e66c121-a66a-4b1f-9b83-0fd99bf0fc2d",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1e66c121-a66a-4b1f-9b83-0fd99bf0fc2d",
        "ResourceName": "1e66c121-a66a-4b1f-9b83-0fd99bf0fc2d",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Deleting a key vault without soft delete enabled permanently deletes all secrets, keys, and certificates stored in the key vault. Accidental deletion of a key vault can lead to permanent data loss. Soft delete allows you to recover an accidentally deleted key vault for a configurable retention period.",
          "DisplayName": "Key vaults should have soft delete enabled",
          "Metadata": {
            "version": "3.0.0",
            "category": "Key Vault"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.KeyVault/vaults"
                },
                {
                  "not": {
                    "field": "Microsoft.KeyVault/vaults/createMode",
                    "equals": "recover"
                  }
                },
                {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "value": "[requestContext().apiVersion]",
                          "less": "2019-09-01"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                              "equals": "false"
                            },
                            {
                              "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                              "exists": "false"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "value": "[requestContext().apiVersion]",
                          "greaterOrEquals": "2019-09-01"
                        },
                        {
                          "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                          "equals": "false"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1e66c121-a66a-4b1f-9b83-0fd99bf0fc2d"
      },
      {
        "Name": "7803067c-7d34-46e3-8c79-0ca68fc4036d",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/7803067c-7d34-46e3-8c79-0ca68fc4036d",
        "ResourceName": "7803067c-7d34-46e3-8c79-0ca68fc4036d",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Private endpoints lets you connect your virtual network to Azure services without a public IP address at the source or destination. By mapping private endpoints to your Azure Cache for Redis instances, data leakage risks are reduced. Learn more at: https://docs.microsoft.com/azure/azure-cache-for-redis/cache-private-link.",
          "DisplayName": "Azure Cache for Redis should use private link",
          "Metadata": {
            "version": "1.0.0",
            "category": "Cache"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Cache/redis"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Cache/redis/privateEndpointConnections",
                "existenceCondition": {
                  "field": "Microsoft.Cache/redis/privateEndpointConnections/privateLinkServiceConnectionState.status",
                  "equals": "Approved"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7803067c-7d34-46e3-8c79-0ca68fc4036d"
      },
      {
        "Name": "6fac406b-40ca-413b-bf8e-0bf964659c25",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/6fac406b-40ca-413b-bf8e-0bf964659c25",
        "ResourceName": "6fac406b-40ca-413b-bf8e-0bf964659c25",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Secure your blob and file storage account with greater flexibility using customer-managed keys. When you specify a customer-managed key, that key is used to protect and control access to the key that encrypts your data. Using customer-managed keys provides additional capabilities to control rotation of the key encryption key or cryptographically erase data.",
          "DisplayName": "Storage accounts should use customer-managed key for encryption",
          "Metadata": {
            "version": "1.0.3",
            "category": "Storage"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Storage/storageAccounts"
                },
                {
                  "not": {
                    "field": "Microsoft.Storage/storageAccounts/encryption.keySource",
                    "equals": "Microsoft.Keyvault"
                  }
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6fac406b-40ca-413b-bf8e-0bf964659c25"
      },
      {
        "Name": "2a1a9cdf-e04d-429a-8416-3bfb72a1b26f",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/2a1a9cdf-e04d-429a-8416-3bfb72a1b26f",
        "ResourceName": "2a1a9cdf-e04d-429a-8416-3bfb72a1b26f",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Protect your storage accounts from potential threats using virtual network rules as a preferred method instead of IP-based filtering. Disabling IP-based filtering prevents public IPs from accessing your storage accounts.",
          "DisplayName": "Storage accounts should restrict network access using virtual network rules",
          "Metadata": {
            "version": "1.0.1",
            "category": "Storage"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the audit policy"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Storage/storageAccounts"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.Storage/storageAccounts/networkAcls.defaultAction",
                      "notEquals": "Deny"
                    },
                    {
                      "count": {
                        "field": "Microsoft.Storage/storageAccounts/networkAcls.ipRules[*]"
                      },
                      "greaterOrEquals": 1
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2a1a9cdf-e04d-429a-8416-3bfb72a1b26f"
      },
      {
        "Name": "5b9159ae-1701-4a6f-9a7a-aa9c8ddd0580",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/5b9159ae-1701-4a6f-9a7a-aa9c8ddd0580",
        "ResourceName": "5b9159ae-1701-4a6f-9a7a-aa9c8ddd0580",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Use customer-managed keys to manage the encryption at rest of the contents of your registries. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more at https://aka.ms/acr/CMK.",
          "DisplayName": "Container registries should be encrypted with a customer-managed key",
          "Metadata": {
            "version": "1.1.2",
            "category": "Container Registry"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ContainerRegistry/registries"
                },
                {
                  "field": "Microsoft.ContainerRegistry/registries/encryption.status",
                  "notEquals": "enabled"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5b9159ae-1701-4a6f-9a7a-aa9c8ddd0580"
      },
      {
        "Name": "d0793b48-0edc-4296-a390-4c75d1bdfd71",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/d0793b48-0edc-4296-a390-4c75d1bdfd71",
        "ResourceName": "d0793b48-0edc-4296-a390-4c75d1bdfd71",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure container registries by default accept connections over the internet from hosts on any network. To protect your registries from potential threats, allow access from only specific private endpoints, public IP addresses or address ranges. If your registry doesn't have network rules configured, it will appear in the unhealthy resources. Learn more about Container Registry network rules here: https://aka.ms/acr/privatelink, https://aka.ms/acr/portal/public-network and https://aka.ms/acr/vnet.",
          "DisplayName": "Container registries should not allow unrestricted network access",
          "Metadata": {
            "version": "2.0.0",
            "category": "Container Registry"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ContainerRegistry/registries"
                },
                {
                  "allOf": [
                    {
                      "anyof": [
                        {
                          "field": "Microsoft.ContainerRegistry/registries/networkRuleSet.defaultAction",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.ContainerRegistry/registries/networkRuleSet.defaultAction",
                          "equals": "Allow"
                        }
                      ]
                    },
                    {
                      "anyof": [
                        {
                          "field": "Microsoft.ContainerRegistry/registries/publicNetworkAccess",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.ContainerRegistry/registries/publicNetworkAccess",
                          "equals": "Enabled"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d0793b48-0edc-4296-a390-4c75d1bdfd71"
      },
      {
        "Name": "e8eef0a8-67cf-4eb4-9386-14b0e78733d4",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/e8eef0a8-67cf-4eb4-9386-14b0e78733d4",
        "ResourceName": "e8eef0a8-67cf-4eb4-9386-14b0e78733d4",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The private link platform handles the connectivity between the consumer and services over the Azure backbone network.By mapping private endpoints to your container registries instead of the entire service, you'll also be protected against data leakage risks. Learn more at: https://aka.ms/acr/private-link.",
          "DisplayName": "Container registries should use private link",
          "Metadata": {
            "version": "1.0.1",
            "category": "Container Registry"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ContainerRegistry/registries"
                },
                {
                  "count": {
                    "field": "Microsoft.ContainerRegistry/registries/privateEndpointConnections[*]",
                    "where": {
                      "field": "Microsoft.ContainerRegistry/registries/privateEndpointConnections[*].privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    }
                  },
                  "less": 1
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e8eef0a8-67cf-4eb4-9386-14b0e78733d4"
      },
      {
        "Name": "ca610c1d-041c-4332-9d88-7ed3094967c7",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/ca610c1d-041c-4332-9d88-7ed3094967c7",
        "ResourceName": "ca610c1d-041c-4332-9d88-7ed3094967c7",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The private link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to your app configuration instances instead of the entire service, you'll also be protected against data leakage risks. Learn more at: https://aka.ms/appconfig/private-endpoint.",
          "DisplayName": "App Configuration should use private link",
          "Metadata": {
            "version": "1.0.2",
            "category": "App Configuration"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.AppConfiguration/configurationStores"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.AppConfiguration/configurationStores/privateEndpointConnections",
                "existenceCondition": {
                  "field": "Microsoft.AppConfiguration/configurationStores/privateEndpointConnections/privateLinkServiceConnectionState.status",
                  "equals": "Approved"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ca610c1d-041c-4332-9d88-7ed3094967c7"
      },
      {
        "Name": "9830b652-8523-49cc-b1b3-e17dce1127ca",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/9830b652-8523-49cc-b1b3-e17dce1127ca",
        "ResourceName": "9830b652-8523-49cc-b1b3-e17dce1127ca",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The Private Link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to your Event Grid domain instead of the entire service, you'll also be protected against data leakage risks. Learn more at: https://aka.ms/privateendpoints.",
          "DisplayName": "Azure Event Grid domains should use private link",
          "Metadata": {
            "version": "1.0.2",
            "category": "Event Grid"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.EventGrid/domains"
                },
                {
                  "count": {
                    "field": "Microsoft.EventGrid/domains/privateEndpointConnections[*]",
                    "where": {
                      "field": "Microsoft.EventGrid/domains/privateEndpointConnections[*].privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    }
                  },
                  "less": 1
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9830b652-8523-49cc-b1b3-e17dce1127ca"
      },
      {
        "Name": "4b90e17e-8448-49db-875e-bd83fb6f804f",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/4b90e17e-8448-49db-875e-bd83fb6f804f",
        "ResourceName": "4b90e17e-8448-49db-875e-bd83fb6f804f",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The Private Link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to your Event Grid topic instead of the entire service, you'll also be protected against data leakage risks. Learn more at: https://aka.ms/privateendpoints.",
          "DisplayName": "Azure Event Grid topics should use private link",
          "Metadata": {
            "version": "1.0.2",
            "category": "Event Grid"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.EventGrid/topics"
                },
                {
                  "field": "kind",
                  "notEquals": "AzureArc"
                },
                {
                  "count": {
                    "field": "Microsoft.EventGrid/topics/privateEndpointConnections[*]",
                    "where": {
                      "field": "Microsoft.EventGrid/topics/privateEndpointConnections[*].privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    }
                  },
                  "less": 1
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4b90e17e-8448-49db-875e-bd83fb6f804f"
      },
      {
        "Name": "2393d2cf-a342-44cd-a2e2-fe0188fd1234",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/2393d2cf-a342-44cd-a2e2-fe0188fd1234",
        "ResourceName": "2393d2cf-a342-44cd-a2e2-fe0188fd1234",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The private link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to your Azure SignalR Service resource instead of the entire service, you'll reduce your data leakage risks. Learn more about private links at: https://aka.ms/asrs/privatelink.",
          "DisplayName": "Azure SignalR Service should use private link",
          "Metadata": {
            "version": "1.0.0",
            "category": "SignalR"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.SignalRService/SignalR"
                },
                {
                  "count": {
                    "field": "Microsoft.SignalRService/SignalR/privateEndpointConnections[*]",
                    "where": {
                      "field": "Microsoft.SignalRService/SignalR/privateEndpointConnections[*].privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    }
                  },
                  "less": 1
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2393d2cf-a342-44cd-a2e2-fe0188fd1234"
      },
      {
        "Name": "ba769a63-b8cc-4b2d-abf6-ac33c7204be8",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/ba769a63-b8cc-4b2d-abf6-ac33c7204be8",
        "ResourceName": "ba769a63-b8cc-4b2d-abf6-ac33c7204be8",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Manage encryption at rest of Azure Machine Learning workspace data with customer-managed keys. By default, customer data is encrypted with service-managed keys, but customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more at https://aka.ms/azureml-workspaces-cmk.",
          "DisplayName": "Azure Machine Learning workspaces should be encrypted with a customer-managed key",
          "Metadata": {
            "version": "1.0.3",
            "category": "Machine Learning"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.MachineLearningServices/workspaces"
                },
                {
                  "not": {
                    "field": "Microsoft.MachineLearningServices/workspaces/encryption.status",
                    "equals": "enabled"
                  }
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ba769a63-b8cc-4b2d-abf6-ac33c7204be8"
      },
      {
        "Name": "40cec1dd-a100-4920-b15b-3024fe8901ab",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/40cec1dd-a100-4920-b15b-3024fe8901ab",
        "ResourceName": "40cec1dd-a100-4920-b15b-3024fe8901ab",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The Private Link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to Azure Machine Learning workspaces, data leakage risks are reduced. Learn more about private links at: https://docs.microsoft.com/azure/machine-learning/how-to-configure-private-link.",
          "DisplayName": "Azure Machine Learning workspaces should use private link",
          "Metadata": {
            "version": "1.1.0",
            "category": "Machine Learning"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.MachineLearningServices/workspaces"
                },
                {
                  "count": {
                    "field": "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections[*]",
                    "where": {
                      "field": "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections[*].privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    }
                  },
                  "less": 1
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/40cec1dd-a100-4920-b15b-3024fe8901ab"
      },
      {
        "Name": "055aa869-bc98-4af8-bafc-23f1ab6ffe2c",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/055aa869-bc98-4af8-bafc-23f1ab6ffe2c",
        "ResourceName": "055aa869-bc98-4af8-bafc-23f1ab6ffe2c",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Deploy Azure Web Application Firewall (WAF) in front of public facing web applications for additional inspection of incoming traffic. Web Application Firewall (WAF) provides centralized protection of your web applications from common exploits and vulnerabilities such as SQL injections, Cross-Site Scripting, local and remote file executions. You can also restrict access to your web applications by countries, IP address ranges, and other http(s) parameters via custom rules.",
          "DisplayName": "Azure Web Application Firewall should be enabled for Azure Front Door entry-points",
          "Metadata": {
            "version": "1.0.2",
            "category": "Network"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Network/frontdoors"
                },
                {
                  "field": "Microsoft.Network/frontdoors/frontendEndpoints[*].webApplicationFirewallPolicyLink.id",
                  "exists": "false"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/055aa869-bc98-4af8-bafc-23f1ab6ffe2c"
      },
      {
        "Name": "564feb30-bf6a-4854-b4bb-0d2d2d1e6c66",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/564feb30-bf6a-4854-b4bb-0d2d2d1e6c66",
        "ResourceName": "564feb30-bf6a-4854-b4bb-0d2d2d1e6c66",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Deploy Azure Web Application Firewall (WAF) in front of public facing web applications for additional inspection of incoming traffic. Web Application Firewall (WAF) provides centralized protection of your web applications from common exploits and vulnerabilities such as SQL injections, Cross-Site Scripting, local and remote file executions. You can also restrict access to your web applications by countries, IP address ranges, and other http(s) parameters via custom rules.",
          "DisplayName": "Web Application Firewall (WAF) should be enabled for Application Gateway",
          "Metadata": {
            "version": "2.0.0",
            "category": "Network"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Network/applicationGateways"
                },
                {
                  "field": "Microsoft.Network/applicationGateways/webApplicationFirewallConfiguration",
                  "exists": "false"
                },
                {
                  "field": "Microsoft.Network/applicationGateways/firewallPolicy",
                  "exists": "false"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/564feb30-bf6a-4854-b4bb-0d2d2d1e6c66"
      },
      {
        "Name": "fdccbe47-f3e3-4213-ad5d-ea459b2fa077",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/fdccbe47-f3e3-4213-ad5d-ea459b2fa077",
        "ResourceName": "fdccbe47-f3e3-4213-ad5d-ea459b2fa077",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Disable the public network access property to improve security and ensure your Azure Database for MariaDB can only be accessed from a private endpoint. This configuration strictly disables access from any public address space outside of Azure IP range, and denies all logins that match IP or virtual network-based firewall rules.",
          "DisplayName": "Public network access should be disabled for MariaDB servers",
          "Metadata": {
            "version": "2.0.0",
            "category": "SQL"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.DBforMariaDB/servers"
                },
                {
                  "field": "Microsoft.DBforMariaDB/servers/publicNetworkAccess",
                  "notEquals": "Disabled"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/fdccbe47-f3e3-4213-ad5d-ea459b2fa077"
      },
      {
        "Name": "d9844e8a-1437-4aeb-a32c-0c992f056095",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/d9844e8a-1437-4aeb-a32c-0c992f056095",
        "ResourceName": "d9844e8a-1437-4aeb-a32c-0c992f056095",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Disable the public network access property to improve security and ensure your Azure Database for MySQL can only be accessed from a private endpoint. This configuration strictly disables access from any public address space outside of Azure IP range, and denies all logins that match IP or virtual network-based firewall rules.",
          "DisplayName": "Public network access should be disabled for MySQL servers",
          "Metadata": {
            "version": "2.0.0",
            "category": "SQL"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.DBforMySQL/servers"
                },
                {
                  "field": "Microsoft.DBforMySQL/servers/publicNetworkAccess",
                  "notEquals": "Disabled"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d9844e8a-1437-4aeb-a32c-0c992f056095"
      },
      {
        "Name": "83cef61d-dbd1-4b20-a4fc-5fbc7da10833",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/83cef61d-dbd1-4b20-a4fc-5fbc7da10833",
        "ResourceName": "83cef61d-dbd1-4b20-a4fc-5fbc7da10833",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Use customer-managed keys to manage the encryption at rest of your MySQL servers. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management.",
          "DisplayName": "MySQL servers should use customer-managed keys to encrypt data at rest",
          "Metadata": {
            "version": "1.0.4",
            "category": "SQL"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.DBforMySQL/servers"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.DBforMySQL/servers/keys",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.DBforMySQL/servers/keys/serverKeyType",
                      "equals": "AzureKeyVault"
                    },
                    {
                      "field": "Microsoft.DBforMySQL/servers/keys/uri",
                      "notEquals": ""
                    },
                    {
                      "field": "Microsoft.DBforMySQL/servers/keys/uri",
                      "exists": "true"
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/83cef61d-dbd1-4b20-a4fc-5fbc7da10833"
      },
      {
        "Name": "b52376f7-9612-48a1-81cd-1ffe4b61032c",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/b52376f7-9612-48a1-81cd-1ffe4b61032c",
        "ResourceName": "b52376f7-9612-48a1-81cd-1ffe4b61032c",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Disable the public network access property to improve security and ensure your Azure Database for PostgreSQL can only be accessed from a private endpoint. This configuration disables access from any public address space outside of Azure IP range, and denies all logins that match IP or virtual network-based firewall rules.",
          "DisplayName": "Public network access should be disabled for PostgreSQL servers",
          "Metadata": {
            "version": "2.0.0",
            "category": "SQL"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.DBforPostgreSQL/servers"
                },
                {
                  "field": "Microsoft.DBforPostgreSQL/servers/publicNetworkAccess",
                  "notEquals": "Disabled"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b52376f7-9612-48a1-81cd-1ffe4b61032c"
      },
      {
        "Name": "18adea5e-f416-4d0f-8aa8-d24321e3e274",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/18adea5e-f416-4d0f-8aa8-d24321e3e274",
        "ResourceName": "18adea5e-f416-4d0f-8aa8-d24321e3e274",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Use customer-managed keys to manage the encryption at rest of your PostgreSQL servers. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management.",
          "DisplayName": "PostgreSQL servers should use customer-managed keys to encrypt data at rest",
          "Metadata": {
            "version": "1.0.4",
            "category": "SQL"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.DBforPostgreSQL/servers"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.DBforPostgreSQL/servers/keys",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.DBforPostgreSQL/servers/keys/serverKeyType",
                      "equals": "AzureKeyVault"
                    },
                    {
                      "field": "Microsoft.DBforPostgreSQL/servers/keys/uri",
                      "notEquals": ""
                    },
                    {
                      "field": "Microsoft.DBforPostgreSQL/servers/keys/uri",
                      "exists": "true"
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/18adea5e-f416-4d0f-8aa8-d24321e3e274"
      },
      {
        "Name": "2154edb9-244f-4741-9970-660785bccdaa",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/2154edb9-244f-4741-9970-660785bccdaa",
        "ResourceName": "2154edb9-244f-4741-9970-660785bccdaa",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The Private Link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to your VM Image Builder building resources, data leakage risks are reduced. Learn more about private links at: https://docs.microsoft.com/azure/virtual-machines/linux/image-builder-networking#deploy-using-an-existing-vnet.",
          "DisplayName": "VM Image Builder templates should use private link",
          "Metadata": {
            "version": "1.1.0",
            "category": "VM Image Builder"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled",
                "Deny"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.VirtualMachineImages/imageTemplates"
                },
                {
                  "field": "Microsoft.VirtualMachineImages/imageTemplates/vmProfile.vnetConfig",
                  "exists": "false"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2154edb9-244f-4741-9970-660785bccdaa"
      },
      {
        "Name": "55615ac9-af46-4a59-874e-391cc3dfb490",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/55615ac9-af46-4a59-874e-391cc3dfb490",
        "ResourceName": "55615ac9-af46-4a59-874e-391cc3dfb490",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Enable the key vault firewall so that the key vault is not accessible by default to any public IPs. You can then configure specific IP ranges to limit access to those networks. Learn more at: https://docs.microsoft.com/azure/key-vault/general/network-security",
          "DisplayName": "Azure Key Vault should have firewall enabled",
          "Metadata": {
            "version": "3.0.0",
            "category": "Key Vault"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.KeyVault/vaults"
                },
                {
                  "field": "Microsoft.KeyVault/vaults/createMode",
                  "notEquals": "recover"
                },
                {
                  "field": "Microsoft.KeyVault/vaults/networkAcls.defaultAction",
                  "notEquals": "Deny"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/55615ac9-af46-4a59-874e-391cc3dfb490"
      },
      {
        "Name": "5f0bc445-3935-4915-9981-011aa2b46147",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/5f0bc445-3935-4915-9981-011aa2b46147",
        "ResourceName": "5f0bc445-3935-4915-9981-011aa2b46147",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Private link provides a way to connect Key Vault to your Azure resources without sending traffic over the public internet. Private link provides defense in depth protection against data exfiltration.",
          "DisplayName": "[Preview]: Private endpoint should be configured for Key Vault",
          "Metadata": {
            "version": "1.1.0-preview",
            "category": "Key Vault",
            "preview": true
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.KeyVault/vaults"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.KeyVault/vaults/privateEndpointConnections",
                      "exists": "false"
                    },
                    {
                      "count": {
                        "field": "Microsoft.KeyVault/vaults/privateEndpointConnections[*]"
                      },
                      "equals": 0
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5f0bc445-3935-4915-9981-011aa2b46147"
      },
      {
        "Name": "af35e2a4-ef96-44e7-a9ae-853dd97032c4",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/af35e2a4-ef96-44e7-a9ae-853dd97032c4",
        "ResourceName": "af35e2a4-ef96-44e7-a9ae-853dd97032c4",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Spring Cloud instances should use virtual network injection for the following purposes: 1. Isolate Azure Spring Cloud from Internet. 2. Enable Azure Spring Cloud to interact with systems in either on premises data centers or Azure service in other virtual networks. 3. Empower customers to control inbound and outbound network communications for Azure Spring Cloud.",
          "DisplayName": "Azure Spring Cloud should use network injection",
          "Metadata": {
            "version": "1.1.0",
            "category": "App Platform"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled",
                "Deny"
              ],
              "defaultValue": "Audit"
            },
            "evaluatedSkuNames": {
              "type": "Array",
              "metadata": {
                "displayName": "Azure Spring Cloud SKU Names",
                "description": "List of Azure Spring Cloud SKUs against which this policy will be evaluated."
              },
              "allowedValues": [
                "Standard",
                "Enterprise"
              ],
              "defaultValue": [
                "Standard"
              ]
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.AppPlatform/Spring"
                },
                {
                  "field": "Microsoft.AppPlatform/Spring/sku.tier",
                  "in": "[parameters('evaluatedSkuNames')]"
                },
                {
                  "field": "Microsoft.AppPlatform/Spring/networkProfile.serviceRuntimeSubnetId",
                  "exists": false
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/af35e2a4-ef96-44e7-a9ae-853dd97032c4"
      },
      {
        "Name": "4f4f78b8-e367-4b10-a341-d9a4ad5cf1c7",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/4f4f78b8-e367-4b10-a341-d9a4ad5cf1c7",
        "ResourceName": "4f4f78b8-e367-4b10-a341-d9a4ad5cf1c7",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "To ensure the relevant people in your organization are notified when there is a potential security breach in one of your subscriptions, set a security contact to receive email notifications from Security Center.",
          "DisplayName": "Subscriptions should have a contact email address for security issues",
          "Metadata": {
            "version": "1.0.1",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/securityContacts",
                "existenceCondition": {
                  "field": "Microsoft.Security/securityContacts/email",
                  "notEquals": ""
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4f4f78b8-e367-4b10-a341-d9a4ad5cf1c7"
      },
      {
        "Name": "475aae12-b88a-4572-8b36-9b712b2b3a17",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/475aae12-b88a-4572-8b36-9b712b2b3a17",
        "ResourceName": "475aae12-b88a-4572-8b36-9b712b2b3a17",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "To monitor for security vulnerabilities and threats, Azure Security Center collects data from your Azure virtual machines. Data is collected by the Log Analytics agent, formerly known as the Microsoft Monitoring Agent (MMA), which reads various security-related configurations and event logs from the machine and copies the data to your Log Analytics workspace for analysis. We recommend enabling auto provisioning to automatically deploy the agent to all supported Azure VMs and any new ones that are created.",
          "DisplayName": "Auto provisioning of the Log Analytics agent should be enabled on your subscription",
          "Metadata": {
            "version": "1.0.1",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/autoProvisioningSettings",
                "existenceCondition": {
                  "field": "Microsoft.Security/autoProvisioningSettings/autoProvision",
                  "equals": "On"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/475aae12-b88a-4572-8b36-9b712b2b3a17"
      },
      {
        "Name": "6e2593d9-add6-4083-9c9b-4b7d2188c899",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/6e2593d9-add6-4083-9c9b-4b7d2188c899",
        "ResourceName": "6e2593d9-add6-4083-9c9b-4b7d2188c899",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "To ensure the relevant people in your organization are notified when there is a potential security breach in one of your subscriptions, enable email notifications for high severity alerts in Security Center.",
          "DisplayName": "Email notification for high severity alerts should be enabled",
          "Metadata": {
            "version": "1.0.1",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/securityContacts",
                "existenceCondition": {
                  "field": "Microsoft.Security/securityContacts/alertNotifications",
                  "notEquals": "Off"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6e2593d9-add6-4083-9c9b-4b7d2188c899"
      },
      {
        "Name": "0b15565f-aa9e-48ba-8619-45960f2c314d",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0b15565f-aa9e-48ba-8619-45960f2c314d",
        "ResourceName": "0b15565f-aa9e-48ba-8619-45960f2c314d",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "To ensure your subscription owners are notified when there is a potential security breach in their subscription, set email notifications to subscription owners for high severity alerts in Security Center.",
          "DisplayName": "Email notification to subscription owner for high severity alerts should be enabled",
          "Metadata": {
            "version": "2.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/securityContacts",
                "existenceScope": "subscription",
                "existenceCondition": {
                  "not": {
                    "allOf": [
                      {
                        "field": "Microsoft.Security/securityContacts/alertsToAdmins",
                        "equals": "Off"
                      },
                      {
                        "field": "Microsoft.Security/securityContacts/alertNotifications.minimalSeverity",
                        "equals": "High"
                      }
                    ]
                  }
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0b15565f-aa9e-48ba-8619-45960f2c314d"
      },
      {
        "Name": "6edd7eda-6dd8-40f7-810d-67160c639cd9",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/6edd7eda-6dd8-40f7-810d-67160c639cd9",
        "ResourceName": "6edd7eda-6dd8-40f7-810d-67160c639cd9",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The Private Link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to your storage account, data leakage risks are reduced. Learn more about private links at - https://aka.ms/azureprivatelinkoverview",
          "DisplayName": "Storage accounts should use private link",
          "Metadata": {
            "version": "2.0.0",
            "category": "Storage"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Storage/storageAccounts"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Storage/storageAccounts/privateEndpointConnections",
                "existenceCondition": {
                  "field": "Microsoft.Storage/storageAccounts/privateEndpointConnections/privateLinkServiceConnectionState.status",
                  "equals": "Approved"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6edd7eda-6dd8-40f7-810d-67160c639cd9"
      },
      {
        "Name": "630c64f9-8b6b-4c64-b511-6544ceff6fd6",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/630c64f9-8b6b-4c64-b511-6544ceff6fd6",
        "ResourceName": "630c64f9-8b6b-4c64-b511-6544ceff6fd6",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Although SSH itself provides an encrypted connection, using passwords with SSH still leaves the VM vulnerable to brute-force attacks. The most secure option for authenticating to an Azure Linux virtual machine over SSH is with a public-private key pair, also known as SSH keys. Learn more: https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed.",
          "DisplayName": "Authentication to Linux machines should require SSH keys",
          "Metadata": {
            "category": "Guest Configuration",
            "version": "3.0.0",
            "requiredProviders": [
              "Microsoft.GuestConfiguration"
            ],
            "guestConfiguration": {
              "name": "LinuxNoPasswordForSSH",
              "version": "1.*"
            }
          },
          "Mode": "Indexed",
          "Parameters": {
            "IncludeArcMachines": {
              "type": "String",
              "metadata": {
                "displayName": "Include Arc connected servers",
                "description": "By selecting this option, you agree to be charged monthly per Arc connected machine.",
                "portalReview": "true"
              },
              "allowedValues": [
                "true",
                "false"
              ],
              "defaultValue": "false"
            },
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of this policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "anyOf": [
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "in": [
                            "microsoft-aks",
                            "qubole-inc",
                            "datastax",
                            "couchbase",
                            "scalegrid",
                            "checkpoint",
                            "paloaltonetworks",
                            "debian"
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "OpenLogic"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "CentOS*"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "6*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Oracle"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Oracle-Linux"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "6*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "RedHat"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "RHEL",
                                "RHEL-HA",
                                "RHEL-SAP",
                                "RHEL-SAP-APPS",
                                "RHEL-SAP-HA",
                                "RHEL-SAP-HANA"
                              ]
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "6*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "RedHat"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "osa",
                                "rhel-byos"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "center-for-internet-security-inc"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "cis-centos-7-l1",
                                "cis-centos-7-v2-1-1-l1",
                                "cis-centos-8-l1",
                                "cis-debian-linux-8-l1",
                                "cis-debian-linux-9-l1",
                                "cis-nginx-centos-7-v1-1-0-l1",
                                "cis-oracle-linux-7-v2-0-0-l1",
                                "cis-oracle-linux-8-l1",
                                "cis-postgresql-11-centos-linux-7-level-1",
                                "cis-rhel-7-l2",
                                "cis-rhel-7-v2-2-0-l1",
                                "cis-rhel-8-l1",
                                "cis-suse-linux-12-v2-0-0-l1",
                                "cis-ubuntu-linux-1604-v1-0-0-l1",
                                "cis-ubuntu-linux-1804-l1"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "credativ"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "Debian"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "7*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Suse"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "SLES*"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "11*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Canonical"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "contains": "Ubuntu"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "12*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-dsvm"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "linux-data-science-vm-ubuntu",
                                "azureml",
                                "ubuntu-hpc",
                                "ubuntu-1804"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloudera"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "cloudera-centos-os"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "6*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloudera"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "cloudera-altus-centos-os"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "linux*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/virtualMachines/osProfile.linuxConfiguration",
                                  "exists": "true"
                                },
                                {
                                  "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                  "like": "Linux*"
                                }
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "exists": "false"
                                },
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "notIn": [
                                    "OpenLogic",
                                    "RedHat",
                                    "credativ",
                                    "Suse",
                                    "Canonical",
                                    "microsoft-dsvm",
                                    "cloudera",
                                    "microsoft-ads",
                                    "center-for-internet-security-inc",
                                    "Oracle",
                                    "AzureDatabricks",
                                    "azureopenshift"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "allOf": [
                    {
                      "value": "[parameters('IncludeArcMachines')]",
                      "equals": "true"
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "type",
                              "equals": "Microsoft.HybridCompute/machines"
                            },
                            {
                              "field": "Microsoft.HybridCompute/imageOffer",
                              "like": "linux*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "type",
                              "equals": "Microsoft.ConnectedVMwarevSphere/virtualMachines"
                            },
                            {
                              "field": "Microsoft.ConnectedVMwarevSphere/virtualMachines/osProfile.osType",
                              "like": "linux*"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                "name": "LinuxNoPasswordForSSH",
                "existenceCondition": {
                  "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                  "equals": "Compliant"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/630c64f9-8b6b-4c64-b511-6544ceff6fd6"
      },
      {
        "Name": "7698e800-9299-47a6-b3b6-5a0fee576eed",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/7698e800-9299-47a6-b3b6-5a0fee576eed",
        "ResourceName": "7698e800-9299-47a6-b3b6-5a0fee576eed",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Private endpoint connections enforce secure communication by enabling private connectivity to Azure SQL Database.",
          "DisplayName": "Private endpoint connections on Azure SQL Database should be enabled",
          "Metadata": {
            "version": "1.1.0",
            "category": "SQL"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Sql/servers"
                },
                {
                  "count": {
                    "field": "Microsoft.Sql/servers/privateEndpointConnections[*]",
                    "where": {
                      "field": "Microsoft.Sql/servers/privateEndpointConnections[*].privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    }
                  },
                  "less": 1
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7698e800-9299-47a6-b3b6-5a0fee576eed"
      },
      {
        "Name": "1b8ca024-1d5c-4dec-8995-b1a932b41780",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1b8ca024-1d5c-4dec-8995-b1a932b41780",
        "ResourceName": "1b8ca024-1d5c-4dec-8995-b1a932b41780",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Disabling the public network access property improves security by ensuring your Azure SQL Database can only be accessed from a private endpoint. This configuration denies all logins that match IP or virtual network based firewall rules.",
          "DisplayName": "Public network access on Azure SQL Database should be disabled",
          "Metadata": {
            "version": "1.1.0",
            "category": "SQL"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Sql/servers"
                },
                {
                  "field": "Microsoft.Sql/servers/publicNetworkAccess",
                  "notEquals": "Disabled"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1b8ca024-1d5c-4dec-8995-b1a932b41780"
      },
      {
        "Name": "1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d",
        "ResourceName": "1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Use of HTTPS ensures authentication and protects data in transit from network layer eavesdropping attacks. This capability is currently generally available for Kubernetes Service (AKS), and in preview for AKS Engine and Azure Arc enabled Kubernetes. For more info, visit https://aka.ms/kubepolicydoc",
          "DisplayName": "Kubernetes clusters should be accessible only over HTTPS",
          "Metadata": {
            "version": "7.0.0",
            "category": "Kubernetes"
          },
          "Mode": "Microsoft.Kubernetes.Data",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "'Audit' allows a non-compliant resource to be created, but flags it as non-compliant. 'Deny' blocks the resource creation. 'Disable' turns off the policy."
              },
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Deny"
            },
            "excludedNamespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace exclusions",
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design."
              },
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc"
              ]
            },
            "namespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace inclusions",
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces."
              },
              "defaultValue": []
            },
            "labelSelector": {
              "type": "Object",
              "metadata": {
                "displayName": "Kubernetes label selector",
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources."
              },
              "defaultValue": {},
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "properties": {
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  },
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "AKS Engine",
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/ingress-https-only/v1/template.yaml"
                },
                "apiGroups": [
                  "extensions",
                  "networking.k8s.io"
                ],
                "kinds": [
                  "Ingress"
                ],
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "namespaces": "[parameters('namespaces')]",
                "labelSelector": "[parameters('labelSelector')]"
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d"
      },
      {
        "Name": "5752e6d6-1206-46d8-8ab1-ecc2f71a8112",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/5752e6d6-1206-46d8-8ab1-ecc2f71a8112",
        "ResourceName": "5752e6d6-1206-46d8-8ab1-ecc2f71a8112",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "To protect the privacy of information communicated over the Internet, your web servers should use the latest version of the industry-standard cryptographic protocol, Transport Layer Security (TLS). TLS secures communications over a network by using security certificates to encrypt a connection between machines.",
          "DisplayName": "Windows web servers should be configured to use secure communication protocols",
          "Metadata": {
            "category": "Guest Configuration",
            "version": "4.0.0",
            "requiredProviders": [
              "Microsoft.GuestConfiguration"
            ],
            "guestConfiguration": {
              "name": "AuditSecureProtocol",
              "version": "1.*",
              "configurationParameter": {
                "MinimumTLSVersion": "[SecureWebServer]s1;MinimumTLSVersion"
              }
            }
          },
          "Mode": "Indexed",
          "Parameters": {
            "IncludeArcMachines": {
              "type": "String",
              "metadata": {
                "displayName": "Include Arc connected servers",
                "description": "By selecting this option, you agree to be charged monthly per Arc connected machine.",
                "portalReview": "true"
              },
              "allowedValues": [
                "true",
                "false"
              ],
              "defaultValue": "false"
            },
            "MinimumTLSVersion": {
              "type": "String",
              "metadata": {
                "displayName": "Minimum TLS version",
                "description": "The minimum TLS protocol version that should be enabled. Windows web servers with lower TLS versions will be marked as non-compliant."
              },
              "allowedValues": [
                "1.1",
                "1.2"
              ],
              "defaultValue": "1.1"
            },
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of this policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "anyOf": [
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "in": [
                            "esri",
                            "incredibuild",
                            "MicrosoftDynamicsAX",
                            "MicrosoftSharepoint",
                            "MicrosoftVisualStudio",
                            "MicrosoftWindowsServerHPCPack"
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "2008*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftSQLServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "notLike": "SQL2008*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-dsvm"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "dsvm-win*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "standard-data-science-vm",
                                "windows-data-science-vm"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "batch"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "rendering-windows2016"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "center-for-internet-security-inc"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "cis-windows-server-201*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "pivotal"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "bosh-windows-server*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloud-infrastructure-services"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "ad*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                  "exists": "true"
                                },
                                {
                                  "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                  "like": "Windows*"
                                }
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "exists": "false"
                                },
                                {
                                  "allOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "notLike": "2008*"
                                    },
                                    {
                                      "field": "Microsoft.Compute/imageOffer",
                                      "notLike": "SQL2008*"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "allOf": [
                    {
                      "value": "[parameters('IncludeArcMachines')]",
                      "equals": "true"
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "type",
                              "equals": "Microsoft.HybridCompute/machines"
                            },
                            {
                              "field": "Microsoft.HybridCompute/imageOffer",
                              "like": "windows*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "type",
                              "equals": "Microsoft.ConnectedVMwarevSphere/virtualMachines"
                            },
                            {
                              "field": "Microsoft.ConnectedVMwarevSphere/virtualMachines/osProfile.osType",
                              "like": "windows*"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                "name": "AuditSecureProtocol",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                      "equals": "Compliant"
                    },
                    {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                      "equals": "[base64(concat('[SecureWebServer]s1;MinimumTLSVersion', '=', parameters('MinimumTLSVersion')))]"
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5752e6d6-1206-46d8-8ab1-ecc2f71a8112"
      },
      {
        "Name": "037eea7a-bd0a-46c5-9a66-03aea78705d3",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/037eea7a-bd0a-46c5-9a66-03aea78705d3",
        "ResourceName": "037eea7a-bd0a-46c5-9a66-03aea78705d3",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Network access to Cognitive Services accounts should be restricted. Configure network rules so only applications from allowed networks can access the Cognitive Services account. To allow connections from specific internet or on-premises clients, access can be granted to traffic from specific Azure virtual networks or to public internet IP address ranges.",
          "DisplayName": "Cognitive Services accounts should restrict network access",
          "Metadata": {
            "version": "3.0.0",
            "category": "Cognitive Services"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "The effect determines what happens when the policy rule is evaluated to match"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.CognitiveServices/accounts"
                },
                {
                  "field": "Microsoft.CognitiveServices/accounts/networkAcls.defaultAction",
                  "notEquals": "Deny"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/037eea7a-bd0a-46c5-9a66-03aea78705d3"
      },
      {
        "Name": "0725b4dd-7e76-479c-a735-68e7ee23d5ca",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0725b4dd-7e76-479c-a735-68e7ee23d5ca",
        "ResourceName": "0725b4dd-7e76-479c-a735-68e7ee23d5ca",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Disabling public network access improves security by ensuring that Cognitive Services account isn't exposed on the public internet. Creating private endpoints can limit exposure of Cognitive Services account. Learn more at: https://go.microsoft.com/fwlink/?linkid=2129800. ",
          "DisplayName": "Cognitive Services accounts should disable public network access",
          "Metadata": {
            "version": "3.0.0",
            "category": "Cognitive Services"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "The effect determines what happens when the policy rule is evaluated to match"
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.CognitiveServices/accounts"
                },
                {
                  "field": "Microsoft.CognitiveServices/accounts/publicNetworkAccess",
                  "notEquals": "Disabled"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0725b4dd-7e76-479c-a735-68e7ee23d5ca"
      },
      {
        "Name": "ef619a2c-cc4d-4d03-b2ba-8c94a834d85b",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/ef619a2c-cc4d-4d03-b2ba-8c94a834d85b",
        "ResourceName": "ef619a2c-cc4d-4d03-b2ba-8c94a834d85b",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Virtual Network deployment provides enhanced security, isolation and allows you to place your API Management service in a non-internet routable network that you control access to. These networks can then be connected to your on-premises networks using various VPN technologies, which enables access to your backend services within the network and/or on-premises. The developer portal and API gateway, can be configured to be accessible either from the Internet or only within the virtual network.",
          "DisplayName": "API Management services should use a virtual network",
          "Metadata": {
            "version": "1.0.1",
            "category": "API Management"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit"
            },
            "evaluatedSkuNames": {
              "type": "Array",
              "metadata": {
                "displayName": "API Management SKU Names",
                "description": "List of API Management SKUs against which this policy will be evaluated."
              },
              "allowedValues": [
                "Developer",
                "Basic",
                "Standard",
                "Premium",
                "Consumption"
              ],
              "defaultValue": [
                "Developer",
                "Premium"
              ]
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ApiManagement/service"
                },
                {
                  "field": "Microsoft.ApiManagement/service/sku.name",
                  "in": "[parameters('evaluatedSkuNames')]"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.ApiManagement/service/virtualNetworkType",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.ApiManagement/service/virtualNetworkType",
                      "equals": "None"
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ef619a2c-cc4d-4d03-b2ba-8c94a834d85b"
      },
      {
        "Name": "862e97cf-49fc-4a5c-9de4-40d4e2e7c8eb",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/862e97cf-49fc-4a5c-9de4-40d4e2e7c8eb",
        "ResourceName": "862e97cf-49fc-4a5c-9de4-40d4e2e7c8eb",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Firewall rules should be defined on your Azure Cosmos DB accounts to prevent traffic from unauthorized sources. Accounts that have at least one IP rule defined with the virtual network filter enabled are deemed compliant. Accounts disabling public access are also deemed compliant.",
          "DisplayName": "Azure Cosmos DB accounts should have firewall rules",
          "Metadata": {
            "version": "2.0.0",
            "category": "Cosmos DB"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Policy Effect",
                "description": "The desired effect of the policy."
              },
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Deny"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.DocumentDB/databaseAccounts"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.DocumentDB/databaseAccounts/publicNetworkAccess",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.DocumentDB/databaseAccounts/publicNetworkAccess",
                      "equals": "Enabled"
                    }
                  ]
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.DocumentDB/databaseAccounts/isVirtualNetworkFilterEnabled",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.DocumentDB/databaseAccounts/isVirtualNetworkFilterEnabled",
                      "equals": "false"
                    }
                  ]
                },
                {
                  "allOf": [
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/ipRules",
                          "exists": "false"
                        },
                        {
                          "count": {
                            "field": "Microsoft.DocumentDB/databaseAccounts/ipRules[*]"
                          },
                          "equals": 0
                        }
                      ]
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/ipRangeFilter",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/ipRangeFilter",
                          "equals": ""
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/862e97cf-49fc-4a5c-9de4-40d4e2e7c8eb"
      },
      {
        "Name": "b6e2945c-0b7b-40f5-9233-7a5323b5cdc6",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/b6e2945c-0b7b-40f5-9233-7a5323b5cdc6",
        "ResourceName": "b6e2945c-0b7b-40f5-9233-7a5323b5cdc6",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Network Watcher is a regional service that enables you to monitor and diagnose conditions at a network scenario level in, to, and from Azure. Scenario level monitoring enables you to diagnose problems at an end to end network level view. It is required to have a network watcher resource group to be created in every region where a virtual network is present. An alert is enabled if a network watcher resource group is not available in a particular region.",
          "DisplayName": "Network Watcher should be enabled",
          "Metadata": {
            "version": "3.0.0",
            "category": "Network"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            },
            "listOfLocations": {
              "type": "Array",
              "metadata": {
                "displayName": "[Deprecated]: Locations",
                "description": "Audit if Network Watcher is not enabled for region(s).",
                "strongType": "location",
                "deprecated": true
              },
              "defaultValue": []
            },
            "resourceGroupName": {
              "type": "String",
              "metadata": {
                "displayName": "NetworkWatcher resource group name",
                "description": "Name of the resource group of NetworkWatcher, such as NetworkWatcherRG. This is the resource group where the Network Watchers are located."
              },
              "defaultValue": "NetworkWatcherRG"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Network/virtualNetworks"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Network/networkWatchers",
                "resourceGroupName": "[parameters('resourceGroupName')]",
                "existenceCondition": {
                  "field": "location",
                  "equals": "[field('location')]"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b6e2945c-0b7b-40f5-9233-7a5323b5cdc6"
      },
      {
        "Name": "c3d20c29-b36d-48fe-808b-99a87530ad99",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/c3d20c29-b36d-48fe-808b-99a87530ad99",
        "ResourceName": "c3d20c29-b36d-48fe-808b-99a87530ad99",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Defender for Resource Manager automatically monitors the resource management operations in your organization. Azure Defender detects threats and alerts you about suspicious activity. Learn more about the capabilities of Azure Defender for Resource Manager at https://aka.ms/defender-for-resource-manager . Enabling this Azure Defender plan results in charges. Learn about the pricing details per region on Security Center's pricing page: https://aka.ms/pricing-security-center .",
          "DisplayName": "Azure Defender for Resource Manager should be enabled",
          "Metadata": {
            "version": "1.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/pricings",
                "name": "Arm",
                "existenceScope": "subscription",
                "existenceCondition": {
                  "field": "Microsoft.Security/pricings/pricingTier",
                  "equals": "Standard"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c3d20c29-b36d-48fe-808b-99a87530ad99"
      },
      {
        "Name": "bdc59948-5574-49b3-bb91-76b7c986428d",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/bdc59948-5574-49b3-bb91-76b7c986428d",
        "ResourceName": "bdc59948-5574-49b3-bb91-76b7c986428d",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Defender for DNS provides an additional layer of protection for your cloud resources by continuously monitoring all DNS queries from your Azure resources. Azure Defender alerts you about suspicious activity at the DNS layer. Learn more about the capabilities of Azure Defender for DNS at https://aka.ms/defender-for-dns . Enabling this Azure Defender plan results in charges. Learn about the pricing details per region on Security Center's pricing page: https://aka.ms/pricing-security-center .",
          "DisplayName": "Azure Defender for DNS should be enabled",
          "Metadata": {
            "version": "1.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/pricings",
                "name": "Dns",
                "existenceScope": "subscription",
                "existenceCondition": {
                  "field": "Microsoft.Security/pricings/pricingTier",
                  "equals": "Standard"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bdc59948-5574-49b3-bb91-76b7c986428d"
      },
      {
        "Name": "9f061a12-e40d-4183-a00e-171812443373",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/9f061a12-e40d-4183-a00e-171812443373",
        "ResourceName": "9f061a12-e40d-4183-a00e-171812443373",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Prevent usage of the default namespace in Kubernetes clusters to protect against unauthorized access for ConfigMap, Pod, Secret, Service, and ServiceAccount resource types. For more information, see https://aka.ms/kubepolicydoc.",
          "DisplayName": "Kubernetes clusters should not use the default namespace",
          "Metadata": {
            "version": "3.0.1",
            "category": "Kubernetes"
          },
          "Mode": "Microsoft.Kubernetes.Data",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy."
              },
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit"
            },
            "excludedNamespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace exclusions",
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design."
              },
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc"
              ]
            },
            "namespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace inclusions",
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces."
              },
              "defaultValue": [
                "default"
              ]
            },
            "labelSelector": {
              "type": "Object",
              "metadata": {
                "displayName": "Kubernetes label selector",
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources."
              },
              "defaultValue": {},
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "properties": {
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  },
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "AKS Engine",
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/block-default-namespace/v1/template.yaml"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod",
                  "Service",
                  "ServiceAccount"
                ],
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "namespaces": "[parameters('namespaces')]",
                "labelSelector": "[parameters('labelSelector')]"
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9f061a12-e40d-4183-a00e-171812443373"
      },
      {
        "Name": "423dd1ba-798e-40e4-9c4d-b6902674b423",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/423dd1ba-798e-40e4-9c4d-b6902674b423",
        "ResourceName": "423dd1ba-798e-40e4-9c4d-b6902674b423",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Disable automounting API credentials to prevent a potentially compromised Pod resource to run API commands against Kubernetes clusters. For more information, see https://aka.ms/kubepolicydoc.",
          "DisplayName": "Kubernetes clusters should disable automounting API credentials",
          "Metadata": {
            "version": "3.0.1",
            "category": "Kubernetes"
          },
          "Mode": "Microsoft.Kubernetes.Data",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy."
              },
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit"
            },
            "excludedImages": {
              "type": "Array",
              "metadata": {
                "displayName": "Image exclusions",
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository."
              },
              "defaultValue": []
            },
            "excludedNamespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace exclusions",
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design."
              },
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc"
              ]
            },
            "namespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace inclusions",
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces."
              },
              "defaultValue": []
            },
            "labelSelector": {
              "type": "Object",
              "metadata": {
                "displayName": "Kubernetes label selector",
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources."
              },
              "defaultValue": {},
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "properties": {
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  },
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "AKS Engine",
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/block-automount-token/v2/template.yaml"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ],
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "namespaces": "[parameters('namespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "values": {
                  "excludedImages": "[parameters('excludedImages')]"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/423dd1ba-798e-40e4-9c4d-b6902674b423"
      },
      {
        "Name": "d2e7ea85-6b44-4317-a0be-1b951587f626",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/d2e7ea85-6b44-4317-a0be-1b951587f626",
        "ResourceName": "d2e7ea85-6b44-4317-a0be-1b951587f626",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "To reduce the attack surface of your containers, restrict CAP_SYS_ADMIN Linux capabilities. For more information, see https://aka.ms/kubepolicydoc.",
          "DisplayName": "Kubernetes clusters should not grant CAP_SYS_ADMIN security capabilities",
          "Metadata": {
            "version": "4.0.0",
            "category": "Kubernetes"
          },
          "Mode": "Microsoft.Kubernetes.Data",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy."
              },
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit"
            },
            "excludedNamespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace exclusions",
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design."
              },
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc"
              ]
            },
            "namespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace inclusions",
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces."
              },
              "defaultValue": []
            },
            "labelSelector": {
              "type": "Object",
              "metadata": {
                "displayName": "Kubernetes label selector",
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources."
              },
              "defaultValue": {},
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "properties": {
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  },
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "additionalProperties": false
              }
            },
            "excludedContainers": {
              "type": "Array",
              "metadata": {
                "displayName": "Containers exclusions",
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identify is the name of container. Use an empty list to apply this policy to all containers in all namespaces."
              },
              "defaultValue": []
            },
            "excludedImages": {
              "type": "Array",
              "metadata": {
                "displayName": "Image exclusions",
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository."
              },
              "defaultValue": []
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "AKS Engine",
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/container-disallowed-capabilities/v3/template.yaml"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ],
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "namespaces": "[parameters('namespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "values": {
                  "disallowedCapabilities": [
                    "SYS_ADMIN"
                  ],
                  "excludedContainers": "[parameters('excludedContainers')]",
                  "excludedImages": "[parameters('excludedImages')]"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d2e7ea85-6b44-4317-a0be-1b951587f626"
      },
      {
        "Name": "1c30f9cd-b84c-49cc-aa2c-9288447cc3b3",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1c30f9cd-b84c-49cc-aa2c-9288447cc3b3",
        "ResourceName": "1c30f9cd-b84c-49cc-aa2c-9288447cc3b3",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Enable virtual TPM device on supported virtual machines to facilitate Measured Boot and other OS security features that require a TPM. Once enabled, vTPM can be used to attest boot integrity. This assessment only applies to trusted launch enabled virtual machines.",
          "DisplayName": "[Preview]: vTPM should be enabled on supported virtual machines",
          "Metadata": {
            "category": "Security Center",
            "version": "2.0.0-preview",
            "preview": true
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.securityType",
                  "equals": "TrustedLaunch"
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings",
                  "exists": "true"
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings.vTpmEnabled",
                  "notequals": "true"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1c30f9cd-b84c-49cc-aa2c-9288447cc3b3"
      },
      {
        "Name": "97566dd7-78ae-4997-8b36-1c7bfe0d8121",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/97566dd7-78ae-4997-8b36-1c7bfe0d8121",
        "ResourceName": "97566dd7-78ae-4997-8b36-1c7bfe0d8121",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Enable Secure Boot on supported Windows virtual machines to mitigate against malicious and unauthorized changes to the boot chain. Once enabled, only trusted bootloaders, kernel and kernel drivers will be allowed to run. This assessment only applies to trusted launch enabled Windows virtual machines.",
          "DisplayName": "[Preview]: Secure Boot should be enabled on supported Windows virtual machines",
          "Metadata": {
            "category": "Security Center",
            "version": "3.0.0-preview",
            "preview": true
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.Compute/virtualMachines/storageProfile.imageReference.offer",
                      "like": "windows*"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                      "like": "Windows*"
                    }
                  ]
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.securityType",
                  "equals": "TrustedLaunch"
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings",
                  "exists": "true"
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings.secureBootEnabled",
                  "notequals": "true"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/97566dd7-78ae-4997-8b36-1c7bfe0d8121"
      },
      {
        "Name": "672fe5a1-2fcd-42d7-b85d-902b6e28c6ff",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/672fe5a1-2fcd-42d7-b85d-902b6e28c6ff",
        "ResourceName": "672fe5a1-2fcd-42d7-b85d-902b6e28c6ff",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Install Guest Attestation extension on supported Linux virtual machines to allow Azure Security Center to proactively attest and monitor the boot integrity. Once installed, boot integrity will be attested via Remote Attestation. This assessment only applies to trusted launch enabled Linux virtual machines.",
          "DisplayName": "[Preview]: Guest Attestation extension should be installed on supported Linux virtual machines",
          "Metadata": {
            "category": "Security Center",
            "version": "5.0.0-preview",
            "preview": true
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                      "like": "Linux*"
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Canonical"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "UbuntuServer"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "like": "18_04-lts-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Canonical"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "0001-com-ubuntu-server-focal"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "like": "20_04-lts-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "RedHat"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "RHEL"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "like": "83-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "SUSE"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "SLES-15-SP2"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "like": "gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "OpenLogic"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "CENTOS"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "equals": "8_3-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Oracle"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "Oracle-Linux"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "equals": "ol83-lvm-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "microsoftcblmariner"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "cbl-mariner"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "equals": "1-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "debian"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "debian-11"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "equals": "11-gen2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.securityType",
                  "equals": "TrustedLaunch"
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings",
                  "exists": "true"
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings.secureBootEnabled",
                  "equals": "true"
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings.vTpmEnabled",
                  "equals": "true"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Compute/virtualMachines/extensions",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                      "equals": "Microsoft.Azure.Security.LinuxAttestation"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/type",
                      "equals": "GuestAttestation"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                      "in": [
                        "Succeeded",
                        "Provisioning succeeded"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/672fe5a1-2fcd-42d7-b85d-902b6e28c6ff"
      },
      {
        "Name": "a21f8c92-9e22-4f09-b759-50500d1d2dda",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/a21f8c92-9e22-4f09-b759-50500d1d2dda",
        "ResourceName": "a21f8c92-9e22-4f09-b759-50500d1d2dda",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Install Guest Attestation extension on supported Linux virtual machines scale sets to allow Azure Security Center to proactively attest and monitor the boot integrity. Once installed, boot integrity will be attested via Remote Attestation. This assessment only applies to trusted launch enabled Linux virtual machine scale sets.",
          "DisplayName": "[Preview]: Guest Attestation extension should be installed on supported Linux virtual machines scale sets",
          "Metadata": {
            "category": "Security Center",
            "version": "4.0.0-preview",
            "preview": true
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachineScaleSets"
                },
                {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Canonical"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "UbuntuServer"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "like": "18_04-lts-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Canonical"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "0001-com-ubuntu-server-focal"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "like": "20_04-lts-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "RedHat"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "RHEL"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "like": "83-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "SUSE"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "SLES-15-SP2"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "like": "gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "OpenLogic"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "CENTOS"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "equals": "8_3-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Oracle"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "Oracle-Linux"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "equals": "ol83-lvm-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "microsoftcblmariner"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "cbl-mariner"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "equals": "1-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "debian"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "debian-11"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "equals": "11-gen2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.securityProfile.securityType",
                  "equals": "TrustedLaunch"
                },
                {
                  "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.securityProfile.uefiSettings",
                  "exists": "true"
                },
                {
                  "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.securityProfile.uefiSettings.vTpmEnabled",
                  "equals": "true"
                },
                {
                  "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.securityProfile.uefiSettings.secureBootEnabled",
                  "equals": "true"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/publisher",
                      "equals": "Microsoft.Azure.Security.LinuxAttestation"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/type",
                      "equals": "GuestAttestation"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/provisioningState",
                      "in": [
                        "Succeeded",
                        "Provisioning succeeded"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a21f8c92-9e22-4f09-b759-50500d1d2dda"
      },
      {
        "Name": "1cb4d9c2-f88f-4069-bee0-dba239a57b09",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1cb4d9c2-f88f-4069-bee0-dba239a57b09",
        "ResourceName": "1cb4d9c2-f88f-4069-bee0-dba239a57b09",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Install Guest Attestation extension on supported virtual machines to allow Azure Security Center to proactively attest and monitor the boot integrity. Once installed, boot integrity will be attested via Remote Attestation. This assessment only applies to trusted launch enabled virtual machines.",
          "DisplayName": "[Preview]: Guest Attestation extension should be installed on supported Windows virtual machines",
          "Metadata": {
            "category": "Security Center",
            "version": "3.0.0-preview",
            "preview": true
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.Compute/virtualMachines/storageProfile.imageReference.offer",
                      "like": "windows*"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                      "like": "Windows*"
                    }
                  ]
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.securityType",
                  "equals": "TrustedLaunch"
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings",
                  "exists": "true"
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings.secureBootEnabled",
                  "equals": "true"
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings.vTpmEnabled",
                  "equals": "true"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Compute/virtualMachines/extensions",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                      "equals": "Microsoft.Azure.Security.WindowsAttestation"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/type",
                      "equals": "GuestAttestation"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                      "in": [
                        "Succeeded",
                        "Provisioning succeeded"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1cb4d9c2-f88f-4069-bee0-dba239a57b09"
      },
      {
        "Name": "f655e522-adff-494d-95c2-52d4f6d56a42",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/f655e522-adff-494d-95c2-52d4f6d56a42",
        "ResourceName": "f655e522-adff-494d-95c2-52d4f6d56a42",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Install Guest Attestation extension on supported virtual machines scale sets to allow Azure Security Center to proactively attest and monitor the boot integrity. Once installed, boot integrity will be attested via Remote Attestation. This assessment only applies to trusted launch enabled virtual machine scale sets.",
          "DisplayName": "[Preview]: Guest Attestation extension should be installed on supported Windows virtual machines scale sets",
          "Metadata": {
            "category": "Security Center",
            "version": "2.0.0-preview",
            "preview": true
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachineScaleSets"
                },
                {
                  "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.storageProfile.imageReference.offer",
                  "like": "windows*"
                },
                {
                  "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.securityProfile.securityType",
                  "equals": "TrustedLaunch"
                },
                {
                  "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.securityProfile.uefiSettings",
                  "exists": "true"
                },
                {
                  "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.securityProfile.uefiSettings.vTpmEnabled",
                  "equals": "true"
                },
                {
                  "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.securityProfile.uefiSettings.secureBootEnabled",
                  "equals": "true"
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/publisher",
                      "equals": "Microsoft.Azure.Security.WindowsAttestation"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/type",
                      "equals": "GuestAttestation"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/provisioningState",
                      "in": [
                        "Succeeded",
                        "Provisioning succeeded"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f655e522-adff-494d-95c2-52d4f6d56a42"
      },
      {
        "Name": "1f7c564c-0a90-4d44-b7e1-9d456cffaee8",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1f7c564c-0a90-4d44-b7e1-9d456cffaee8",
        "ResourceName": "1f7c564c-0a90-4d44-b7e1-9d456cffaee8",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "To protect your machines from threats and vulnerabilities, install a supported endpoint protection solution.",
          "DisplayName": "Endpoint protection should be installed on your machines",
          "Metadata": {
            "version": "1.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "in": [
                    "Microsoft.Compute/virtualMachines",
                    "Microsoft.ClassicCompute/virtualMachines",
                    "Microsoft.HybridCompute/machines"
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "4fb67663-9ab9-475d-b026-8c544cced439",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1f7c564c-0a90-4d44-b7e1-9d456cffaee8"
      },
      {
        "Name": "8e42c1f2-a2ab-49bc-994a-12bcd0dc4ac2",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/8e42c1f2-a2ab-49bc-994a-12bcd0dc4ac2",
        "ResourceName": "8e42c1f2-a2ab-49bc-994a-12bcd0dc4ac2",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Resolve endpoint protection health issues on your virtual machines to protect them from latest threats and vulnerabilities. Azure Security Center supported endpoint protection solutions are documented here - https://docs.microsoft.com/azure/security-center/security-center-services?tabs=features-windows#supported-endpoint-protection-solutions. Endpoint protection assessment is documented here - https://docs.microsoft.com/azure/security-center/security-center-endpoint-protection.",
          "DisplayName": "Endpoint protection health issues should be resolved on your machines",
          "Metadata": {
            "version": "1.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "in": [
                    "Microsoft.Compute/virtualMachines",
                    "Microsoft.ClassicCompute/virtualMachines",
                    "Microsoft.HybridCompute/machines"
                  ]
                }
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "37a3689a-818e-4a0e-82ac-b1392b9bb000",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8e42c1f2-a2ab-49bc-994a-12bcd0dc4ac2"
      },
      {
        "Name": "245fc9df-fa96-4414-9a0b-3738c2f7341c",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/245fc9df-fa96-4414-9a0b-3738c2f7341c",
        "ResourceName": "245fc9df-fa96-4414-9a0b-3738c2f7341c",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Kubernetes Service's resource logs can help recreate activity trails when investigating security incidents. Enable it to make sure the logs will exist when needed",
          "DisplayName": "Resource logs in Azure Kubernetes Service should be enabled",
          "Metadata": {
            "version": "1.0.0",
            "category": "Kubernetes"
          },
          "Mode": "Indexed",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            },
            "requiredRetentionDays": {
              "type": "String",
              "metadata": {
                "displayName": "Required retention (days)",
                "description": "The required resource logs retention (in days)"
              },
              "defaultValue": "365"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.ContainerService/managedClusters"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/245fc9df-fa96-4414-9a0b-3738c2f7341c"
      },
      {
        "Name": "0a9fbe0d-c5c4-4da8-87d8-f4fd77338835",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0a9fbe0d-c5c4-4da8-87d8-f4fd77338835",
        "ResourceName": "0a9fbe0d-c5c4-4da8-87d8-f4fd77338835",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "Azure Defender for open-source relational databases detects anomalous activities indicating unusual and potentially harmful attempts to access or exploit databases. Learn more about the capabilities of Azure Defender for open-source relational databases at https://aka.ms/AzDforOpenSourceDBsDocu. Important: Enabling this plan will result in charges for protecting your open-source relational databases. Learn about the pricing on Security Center's pricing page: https://aka.ms/pricing-security-center",
          "DisplayName": "Azure Defender for open-source relational databases should be enabled",
          "Metadata": {
            "version": "1.0.0",
            "category": "Security Center"
          },
          "Mode": "All",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "Enable or disable the execution of the policy"
              },
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists"
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/pricings",
                "name": "OpenSourceRelationalDatabases",
                "existenceScope": "subscription",
                "existenceCondition": {
                  "field": "Microsoft.Security/pricings/pricingTier",
                  "equals": "Standard"
                }
              }
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a9fbe0d-c5c4-4da8-87d8-f4fd77338835"
      }
    ]
  },
  {
    "Identity": null,
    "Location": null,
    "Name": "CustomAllowedLocations-eastus",
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyAssignments/CustomAllowedLocations-eastus",
    "ResourceName": "CustomAllowedLocations-eastus",
    "ResourceGroupName": null,
    "ResourceType": "Microsoft.Authorization/policyAssignments",
    "SubscriptionId": "00000000-0000-0000-0000-000000000000",
    "Sku": null,
    "PolicyAssignmentId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyAssignments/CustomAllowedLocations-eastus",
    "Properties": {
      "Scope": "/subscriptions/00000000-0000-0000-0000-000000000000",
      "NotScopes": [],
      "DisplayName": "Allowed locations (eastus)",
      "Description": null,
      "Metadata": {
        "assignedBy": "Bernie White",
        "parameterScopes": {
          "listOfAllowedLocations": "/subscriptions/00000000-0000-0000-0000-000000000000"
        }
      },
      "EnforcementMode": 1,
      "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c",
      "Parameters": {
        "listOfAllowedLocations": {
          "value": [
            "eastus"
          ]
        }
      },
      "NonComplianceMessages": [
        {
          "Message": "See corp policy for azure resource deployment.",
          "PolicyDefinitionReferenceId": null
        }
      ]
    },
    "PolicyDefinitions": [
      {
        "Name": "e56962a6-4747-49cd-b67b-bf8b01975c4c",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c",
        "ResourceName": "e56962a6-4747-49cd-b67b-bf8b01975c4c",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "This policy enables you to restrict the locations your organization can specify when deploying resources. Use to enforce your geo-compliance requirements. Excludes resource groups, Microsoft.AzureActiveDirectory/b2cDirectories, and resources that use the 'global' region.",
          "DisplayName": "Allowed locations",
          "Metadata": {
            "version": "1.0.0",
            "category": "General"
          },
          "Mode": "Indexed",
          "Parameters": {
            "listOfAllowedLocations": {
              "type": "Array",
              "metadata": {
                "description": "The list of locations that can be specified when deploying resources.",
                "strongType": "location",
                "displayName": "Allowed locations"
              }
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "location",
                  "notIn": "[parameters('listOfAllowedLocations')]"
                },
                {
                  "field": "location",
                  "notEquals": "global"
                },
                {
                  "field": "type",
                  "notEquals": "Microsoft.AzureActiveDirectory/b2cDirectories"
                }
              ]
            },
            "then": {
              "effect": "deny"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c"
      }
    ]
  },
  {
    "Identity": null,
    "Location": null,
    "Name": "CustomAllowedLocations-australiaeast",
    "ResourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyAssignments/CustomAllowedLocations-australiaeast",
    "ResourceName": "CustomAllowedLocations-australiaeast",
    "ResourceGroupName": null,
    "ResourceType": "Microsoft.Authorization/policyAssignments",
    "SubscriptionId": "00000000-0000-0000-0000-000000000000",
    "Sku": null,
    "PolicyAssignmentId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyAssignments/CustomAllowedLocations-australiaeast",
    "Properties": {
      "Scope": "/subscriptions/00000000-0000-0000-0000-000000000000",
      "NotScopes": [],
      "DisplayName": "Allowed locations (australiaeast)",
      "Description": null,
      "Metadata": {
        "assignedBy": "Bernie White",
        "parameterScopes": {
          "listOfAllowedLocations": "/subscriptions/00000000-0000-0000-0000-000000000000"
        },
        "updatedBy": null,
        "updatedOn": null
      },
      "EnforcementMode": 1,
      "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c",
      "Parameters": {
        "listOfAllowedLocations": {
          "value": [
            "australiaeast"
          ]
        }
      },
      "NonComplianceMessages": [
        {
          "Message": "See corp policy for azure resource deployment.",
          "PolicyDefinitionReferenceId": null
        }
      ]
    },
    "PolicyDefinitions": [
      {
        "Name": "e56962a6-4747-49cd-b67b-bf8b01975c4c",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c",
        "ResourceName": "e56962a6-4747-49cd-b67b-bf8b01975c4c",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "SubscriptionId": null,
        "Properties": {
          "Description": "This policy enables you to restrict the locations your organization can specify when deploying resources. Use to enforce your geo-compliance requirements. Excludes resource groups, Microsoft.AzureActiveDirectory/b2cDirectories, and resources that use the 'global' region.",
          "DisplayName": "Allowed locations",
          "Metadata": {
            "version": "1.0.0",
            "category": "General"
          },
          "Mode": "Indexed",
          "Parameters": {
            "listOfAllowedLocations": {
              "type": "Array",
              "metadata": {
                "description": "The list of locations that can be specified when deploying resources.",
                "strongType": "location",
                "displayName": "Allowed locations"
              }
            }
          },
          "PolicyRule": {
            "if": {
              "allOf": [
                {
                  "field": "location",
                  "notIn": "[parameters('listOfAllowedLocations')]"
                },
                {
                  "field": "location",
                  "notEquals": "global"
                },
                {
                  "field": "type",
                  "notEquals": "Microsoft.AzureActiveDirectory/b2cDirectories"
                }
              ]
            },
            "then": {
              "effect": "deny"
            }
          },
          "PolicyType": 2
        },
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c"
      }
    ]
  }
]
