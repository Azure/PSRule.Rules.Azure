[
  {
    // Synopsis: Minmum TLS version must be used on Storage accounts
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Rule",
    "metadata": {
      "name": "Azure.Policy.0d486e605b3a",
      "tags": {
        "Azure.Policy/category": "Storage"
      },
      "annotations": {
        "Azure.Policy/id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-Account-Not-Using-Minimum-TLS-Version",
        "Azure.Policy/version": "1.0.0"
      }
    },
    "spec": {
      "type": [
        "Microsoft.Storage/storageAccounts"
      ],
      "with": [
        "PSRule.Rules.Azure\\Azure.Resource.SupportsTags"
      ],
      "where": {
        "allOf": [
          {
            "field": "properties.minimumTlsVersion",
            "notEquals": "TLS1_2"
          }
        ]
      },
      "condition": {
        "value": "Deny",
        "equals": false
      }
    }
  },
  {
    // Synopsis: Deploy Log Analytics extension for Linux VMs if the VM Image (OS) is in the list defined and the extension is not installed.
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Rule",
    "metadata": {
      "name": "Azure.Policy.3314b9415338",
      "tags": {
        "Azure.Policy/category": "Monitoring"
      },
      "annotations": {
        "Azure.Policy/id": "/providers/Microsoft.Authorization/policyDefinitions/00000000-0000-0000-0000-000000000000",
        "Azure.Policy/version": "2.0.1"
      }
    },
    "spec": {
      "type": [
        "Microsoft.Compute/virtualMachines"
      ],
      "with": [
        "PSRule.Rules.Azure\\Azure.Resource.SupportsTags"
      ],
      "where": {
        "allOf": [
          {
            "anyOf": [
              {
                "field": "properties.storageProfile.imageReference.id",
                "in": [
                  "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/PolicyRG/providers/Microsoft.Compute/galleries/gallery_image/images/image_name/versions/0.0.1"
                ]
              },
              {
                "allOf": [
                  {
                    "field": "properties.storageProfile.imageReference.publisher",
                    "equals": "RedHat"
                  },
                  {
                    "field": "properties.storageProfile.imageReference.offer",
                    "in": [
                      "RHEL",
                      "RHEL-SAP-HANA"
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "field": "properties.storageProfile.imageReference.sku",
                        "like": "6.*"
                      },
                      {
                        "field": "properties.storageProfile.imageReference.sku",
                        "like": "7*"
                      },
                      {
                        "field": "properties.storageProfile.imageReference.sku",
                        "like": "8*"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "field": "properties.storageProfile.imageReference.publisher",
                    "equals": "SUSE"
                  },
                  {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "field": "properties.storageProfile.imageReference.offer",
                            "in": [
                              "SLES",
                              "SLES-HPC",
                              "SLES-HPC-Priority",
                              "SLES-SAP",
                              "SLES-SAP-BYOS",
                              "SLES-Priority",
                              "SLES-BYOS",
                              "SLES-SAPCAL",
                              "SLES-Standard"
                            ]
                          },
                          {
                            "anyOf": [
                              {
                                "field": "properties.storageProfile.imageReference.sku",
                                "like": "12*"
                              },
                              {
                                "field": "properties.storageProfile.imageReference.sku",
                                "like": "15*"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "anyOf": [
                              {
                                "field": "properties.storageProfile.imageReference.offer",
                                "like": "sles-12-sp*"
                              },
                              {
                                "field": "properties.storageProfile.imageReference.offer",
                                "like": "sles-15-sp*"
                              }
                            ]
                          },
                          {
                            "field": "properties.storageProfile.imageReference.sku",
                            "in": [
                              "gen1",
                              "gen2"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "field": "properties.storageProfile.imageReference.publisher",
                    "equals": "Canonical"
                  },
                  {
                    "field": "properties.storageProfile.imageReference.offer",
                    "in": [
                      "UbuntuServer",
                      "0001-com-ubuntu-server-focal"
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "field": "properties.storageProfile.imageReference.sku",
                        "like": "14.04*LTS"
                      },
                      {
                        "field": "properties.storageProfile.imageReference.sku",
                        "like": "16.04*LTS"
                      },
                      {
                        "field": "properties.storageProfile.imageReference.sku",
                        "like": "16_04*lts-gen2"
                      },
                      {
                        "field": "properties.storageProfile.imageReference.sku",
                        "like": "18.04*LTS"
                      },
                      {
                        "field": "properties.storageProfile.imageReference.sku",
                        "like": "18_04*lts-gen2"
                      },
                      {
                        "field": "properties.storageProfile.imageReference.sku",
                        "like": "20_04*lts"
                      },
                      {
                        "field": "properties.storageProfile.imageReference.sku",
                        "like": "20_04*lts-gen2"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "field": "properties.storageProfile.imageReference.publisher",
                    "equals": "credativ"
                  },
                  {
                    "field": "properties.storageProfile.imageReference.offer",
                    "equals": "Debian"
                  },
                  {
                    "anyOf": [
                      {
                        "field": "properties.storageProfile.imageReference.sku",
                        "like": "8*"
                      },
                      {
                        "field": "properties.storageProfile.imageReference.sku",
                        "like": "9*"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "field": "properties.storageProfile.imageReference.publisher",
                    "equals": "Oracle"
                  },
                  {
                    "field": "properties.storageProfile.imageReference.offer",
                    "equals": "Oracle-Linux"
                  },
                  {
                    "anyOf": [
                      {
                        "field": "properties.storageProfile.imageReference.sku",
                        "like": "6.*"
                      },
                      {
                        "field": "properties.storageProfile.imageReference.sku",
                        "like": "7.*"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "field": "properties.storageProfile.imageReference.publisher",
                    "equals": "OpenLogic"
                  },
                  {
                    "field": "properties.storageProfile.imageReference.offer",
                    "in": [
                      "CentOS",
                      "Centos-LVM",
                      "CentOS-SRIOV"
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "field": "properties.storageProfile.imageReference.sku",
                        "like": "6.*"
                      },
                      {
                        "field": "properties.storageProfile.imageReference.sku",
                        "like": "7*"
                      },
                      {
                        "field": "properties.storageProfile.imageReference.sku",
                        "like": "8*"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "field": "properties.storageProfile.imageReference.publisher",
                    "equals": "cloudera"
                  },
                  {
                    "field": "properties.storageProfile.imageReference.offer",
                    "equals": "cloudera-centos-os"
                  },
                  {
                    "field": "properties.storageProfile.imageReference.sku",
                    "like": "7*"
                  }
                ]
              }
            ]
          }
        ]
      },
      "condition": {
        "field": "resources",
        "allOf": [
          {
            "allOf": [
              {
                "field": "properties.type",
                "equals": "OmsAgentForLinux"
              },
              {
                "field": "properties.publisher",
                "equals": "Microsoft.EnterpriseCloud.Monitoring"
              },
              {
                "field": "properties.provisioningState",
                "equals": "Succeeded"
              }
            ]
          }
        ],
        "where": {
          "type": ".",
          "equals": "Microsoft.Compute/virtualMachines/extensions"
        }
      }
    }
  },
  {
    // Synopsis: Function app must pull from specified registry
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Rule",
    "metadata": {
      "name": "Azure.Policy.3a83b926fd9e",
      "tags": {
        "Azure.Policy/category": "App Service"
      },
      "annotations": {
        "Azure.Policy/id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyDefinitions/0000000000-0000-0000-0000-000000000000",
        "Azure.Policy/version": "1.0.0"
      }
    },
    "spec": {
      "type": [
        "Microsoft.Web/sites"
      ],
      "with": [
        "PSRule.Rules.Azure\\Azure.Resource.SupportsTags"
      ],
      "where": {
        "allOf": [
          {
            "field": "kind",
            "contains": "functionapp"
          }
        ]
      },
      "condition": {
        "field": "resources",
        "allOf": [
          {
            "anyOf": [
              {
                "field": "properties.linuxFxVersion",
                "like": "DOCKER|acrtest.azurecr.io/*"
              },
              {
                "field": "properties.linuxFxVersion",
                "notLike": "DOCKER|*"
              }
            ]
          }
        ],
        "where": {
          "allOf": [
            {
              "type": ".",
              "equals": "Microsoft.Web/sites/config"
            },
            {
              "name": ".",
              "equals": "web"
            }
          ]
        }
      }
    }
  },
  {
    // Synopsis: Enforce disabling of SNAT on load balancing rules
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Rule",
    "metadata": {
      "name": "Azure.Policy.f421d4659ad1",
      "annotations": {
        "Azure.Policy/id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyDefinitions/00000000-0000-0000-0000-000000000000"
      }
    },
    "spec": {
      "type": [
        "Microsoft.Network/loadBalancers"
      ],
      "where": {
        "allOf": [
          {
            "greaterOrEqual": 1,
            "field": "properties.loadBalancingRules[*]",
            "allOf": [
              {
                "field": "properties.disableOutboundSnat",
                "equals": false
              }
            ]
          }
        ]
      },
      "condition": {
        "value": "deny",
        "equals": false
      }
    }
  },
  {
    // Synopsis: Enforce atleast more than one LB rule
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Rule",
    "metadata": {
      "name": "Azure.Policy.97914be0519e",
      "annotations": {
        "Azure.Policy/id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyDefinitions/00000000-0000-0000-0000-000000000000"
      }
    },
    "spec": {
      "type": [
        "Microsoft.Network/loadBalancers"
      ],
      "where": {
        "allOf": [
          {
            "greaterOrEquals": 1,
            "field": "properties.loadBalancingRules[*]",
            "convert": true
          }
        ]
      },
      "condition": {
        "value": "deny",
        "equals": false
      }
    }
  },
  {
    // Synopsis: Enforce unique description on one NSG rule
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Rule",
    "metadata": {
      "name": "Azure.Policy.7e58484baa4c",
      "annotations": {
        "Azure.Policy/id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyDefinitions/00000000-0000-0000-0000-000000000000"
      }
    },
    "spec": {
      "type": [
        "Microsoft.Network/networkSecurityGroups"
      ],
      "where": {
        "allOf": [
          {
            "count": 1,
            "field": "properties.securityRules[*]",
            "allOf": [
              {
                "field": "properties.description",
                "equals": "My unique description"
              }
            ]
          }
        ]
      },
      "condition": {
        "value": "deny",
        "equals": false
      }
    }
  },
  {
    // Synopsis: Denies RDP port on inbound NSG rules
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Rule",
    "metadata": {
      "name": "Azure.Policy.046f501cad45",
      "annotations": {
        "Azure.Policy/id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyDefinitions/00000000-0000-0000-0000-000000000000"
      }
    },
    "spec": {
      "type": [
        "Microsoft.Network/networkSecurityGroups/securityRules"
      ],
      "where": {
        "allOf": [
          {
            "greater": 0,
            "field": "properties.securityRules[*]",
            "allOf": [
              {
                "field": "properties.direction",
                "equals": "Inbound"
              },
              {
                "field": "properties.access",
                "equals": "Allow"
              },
              {
                "field": "properties.destinationPortRange",
                "equals": "3389"
              }
            ]
          }
        ]
      },
      "condition": {
        "value": "deny",
        "equals": false
      }
    }
  },
  {
    // Synopsis: Deny common ports on NSG rules
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Rule",
    "metadata": {
      "name": "Azure.Policy.9b51258eff45",
      "annotations": {
        "Azure.Policy/id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyDefinitions/00000000-0000-0000-0000-000000000000"
      }
    },
    "spec": {
      "type": [
        "Microsoft.Network/networkSecurityGroups/securityRules",
        "Microsoft.Network/networkSecurityGroups"
      ],
      "where": {
        "anyOf": [
          {
            "allOf": [
              {
                "equals": "Microsoft.Network/networkSecurityGroups/securityRules",
                "type": "."
              },
              {
                "not": {
                  "field": "properties.sourceAddressPrefix",
                  "notEquals": "*"
                }
              },
              {
                "anyOf": [
                  {
                    "field": "properties.destinationPortRange",
                    "equals": "22"
                  },
                  {
                    "field": "properties.destinationPortRange",
                    "equals": "3389"
                  }
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "equals": "Microsoft.Network/networkSecurityGroups",
                "type": "."
              },
              {
                "greater": 0,
                "field": "properties.securityRules[*]",
                "allOf": [
                  {
                    "field": "properties.sourceAddressPrefix",
                    "equals": "*"
                  },
                  {
                    "anyOf": [
                      {
                        "field": "properties.destinationPortRange",
                        "equals": "22"
                      },
                      {
                        "field": "properties.destinationPortRange",
                        "equals": "3389"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "condition": {
        "value": "deny",
        "equals": false
      }
    }
  },
  {
    // Synopsis: Prevent subnets without NSG
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Rule",
    "metadata": {
      "name": "Azure.Policy.df2cdebb72f5",
      "annotations": {
        "Azure.Policy/id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyDefinitions/00000000-0000-0000-0000-000000000000"
      }
    },
    "spec": {
      "type": [
        "Microsoft.Network/virtualNetworks/subnets",
        "Microsoft.Network/virtualNetworks"
      ],
      "where": {
        "anyOf": [
          {
            "allOf": [
              {
                "equals": "Microsoft.Network/virtualNetworks/subnets",
                "type": "."
              },
              {
                "exists": false,
                "field": "properties.routeTable.id"
              },
              {
                "field": "name",
                "notIn": [
                  "AzureFirewallSubnet",
                  "AzureFirewallManagementSubnet"
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "equals": "Microsoft.Network/virtualNetworks",
                "type": "."
              },
              {
                "greater": 0,
                "field": "properties.subnets[*]",
                "allOf": [
                  {
                    "exists": false,
                    "field": "properties.routeTable.id"
                  },
                  {
                    "field": "name",
                    "notIn": [
                      "AzureFirewallManagementSubnet",
                      "AzureFirewallSubnet"
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "condition": {
        "value": "deny",
        "equals": false
      }
    }
  },
  {
    // Synopsis: Prevent private endpoint being created in specific subnet
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Rule",
    "metadata": {
      "name": "Azure.Policy.fe294bf42b80",
      "annotations": {
        "Azure.Policy/id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyDefinitions/00000000-0000-0000-0000-000000000000"
      }
    },
    "spec": {
      "type": [
        "Microsoft.Network/privateEndpoints"
      ],
      "where": {
        "allOf": [
          {
            "field": "properties.subnet.id",
            "notContains": "pls"
          },
          {
            "greaterOrEqual": 1,
            "field": "properties.privateLinkServiceConnections[*].properties.groupIds[*]",
            "allOf": [
              {
                "field": ".",
                "notIn": [
                  "blob",
                  "sqlServer"
                ]
              }
            ]
          }
        ]
      },
      "condition": {
        "value": "deny",
        "equals": false
      }
    }
  },
  {
    // Synopsis: View and configure system diagnostic data
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Rule",
    "metadata": {
      "name": "Azure.Policy.237646e7bc12",
      "tags": {
        "Azure.Policy/category": "Regulatory Compliance"
      },
      "annotations": {
        "Azure.Policy/id": "/providers/Microsoft.Authorization/policyDefinitions/00000000-0000-0000-0000-000000000000",
        "Azure.Policy/version": "1.0.0"
      }
    },
    "spec": {
      "type": [
        "Microsoft.Resources/subscriptions"
      ],
      "condition": {
        "value": "Manual",
        "equals": false
      }
    }
  }
]
