[
  {
    // Synopsis: Minimum TLS version must be used on Storage accounts
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Rule",
    "metadata": {
      "name": "Azure.Policy.d81b1a6a2e42",
      "displayName": "Deny Storage Account Not Using Minimum TLS version",
      "tags": {
        "Azure.Policy/category": "Storage"
      },
      "annotations": {
        "Azure.Policy/id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-Account-Not-Using-Minimum-TLS-Version",
        "Azure.Policy/version": "1.0.0"
      }
    },
    "spec": {
      "recommend": "Minimum TLS version must be used on Storage accounts",
      "type": [
        "Microsoft.Storage/storageAccounts"
      ],
      "with": [
        "PSRule.Rules.Azure\\Azure.Policy.Indexed"
      ],
      "condition": {
        "field": "properties.minimumTlsVersion",
        "equals": "TLS1_2",
        "convert": true
      }
    }
  },
  {
    // Synopsis: Deploy Log Analytics extension for Linux VMs if the VM Image (OS) is in the list defined and the extension is not installed.
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Rule",
    "metadata": {
      "name": "Azure.Policy.22d1534810c7",
      "displayName": "Deploy Log Analytics extension for Linux VMs",
      "tags": {
        "Azure.Policy/category": "Monitoring"
      },
      "annotations": {
        "Azure.Policy/id": "/providers/Microsoft.Authorization/policyDefinitions/00000000-0000-0000-0000-000000000002",
        "Azure.Policy/version": "2.0.1"
      }
    },
    "spec": {
      "recommend": "Deploy Log Analytics extension for Linux VMs if the VM Image (OS) is in the list defined and the extension is not installed.",
      "type": [
        "Microsoft.Compute/virtualMachines"
      ],
      "with": [
        "PSRule.Rules.Azure\\Azure.Policy.Indexed"
      ],
      "where": {
        "anyOf": [
          {
            "field": "properties.storageProfile.imageReference.id",
            "in": [
              "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/PolicyRG/providers/Microsoft.Compute/galleries/gallery_image/images/image_name/versions/0.0.1"
            ]
          },
          {
            "allOf": [
              {
                "field": "properties.storageProfile.imageReference.publisher",
                "equals": "RedHat",
                "convert": true
              },
              {
                "field": "properties.storageProfile.imageReference.offer",
                "in": [
                  "RHEL",
                  "RHEL-SAP-HANA"
                ]
              },
              {
                "anyOf": [
                  {
                    "field": "properties.storageProfile.imageReference.sku",
                    "like": "6.*"
                  },
                  {
                    "field": "properties.storageProfile.imageReference.sku",
                    "like": "7*"
                  },
                  {
                    "field": "properties.storageProfile.imageReference.sku",
                    "like": "8*"
                  }
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "field": "properties.storageProfile.imageReference.publisher",
                "equals": "SUSE",
                "convert": true
              },
              {
                "anyOf": [
                  {
                    "allOf": [
                      {
                        "field": "properties.storageProfile.imageReference.offer",
                        "in": [
                          "SLES",
                          "SLES-HPC",
                          "SLES-HPC-Priority",
                          "SLES-SAP",
                          "SLES-SAP-BYOS",
                          "SLES-Priority",
                          "SLES-BYOS",
                          "SLES-SAPCAL",
                          "SLES-Standard"
                        ]
                      },
                      {
                        "anyOf": [
                          {
                            "field": "properties.storageProfile.imageReference.sku",
                            "like": "12*"
                          },
                          {
                            "field": "properties.storageProfile.imageReference.sku",
                            "like": "15*"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "allOf": [
                      {
                        "anyOf": [
                          {
                            "field": "properties.storageProfile.imageReference.offer",
                            "like": "sles-12-sp*"
                          },
                          {
                            "field": "properties.storageProfile.imageReference.offer",
                            "like": "sles-15-sp*"
                          }
                        ]
                      },
                      {
                        "field": "properties.storageProfile.imageReference.sku",
                        "in": [
                          "gen1",
                          "gen2"
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "field": "properties.storageProfile.imageReference.publisher",
                "equals": "Canonical",
                "convert": true
              },
              {
                "field": "properties.storageProfile.imageReference.offer",
                "in": [
                  "UbuntuServer",
                  "0001-com-ubuntu-server-focal"
                ]
              },
              {
                "anyOf": [
                  {
                    "field": "properties.storageProfile.imageReference.sku",
                    "like": "14.04*LTS"
                  },
                  {
                    "field": "properties.storageProfile.imageReference.sku",
                    "like": "16.04*LTS"
                  },
                  {
                    "field": "properties.storageProfile.imageReference.sku",
                    "like": "16_04*lts-gen2"
                  },
                  {
                    "field": "properties.storageProfile.imageReference.sku",
                    "like": "18.04*LTS"
                  },
                  {
                    "field": "properties.storageProfile.imageReference.sku",
                    "like": "18_04*lts-gen2"
                  },
                  {
                    "field": "properties.storageProfile.imageReference.sku",
                    "like": "20_04*lts"
                  },
                  {
                    "field": "properties.storageProfile.imageReference.sku",
                    "like": "20_04*lts-gen2"
                  }
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "field": "properties.storageProfile.imageReference.publisher",
                "equals": "credativ",
                "convert": true
              },
              {
                "field": "properties.storageProfile.imageReference.offer",
                "equals": "Debian",
                "convert": true
              },
              {
                "anyOf": [
                  {
                    "field": "properties.storageProfile.imageReference.sku",
                    "like": "8*"
                  },
                  {
                    "field": "properties.storageProfile.imageReference.sku",
                    "like": "9*"
                  }
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "field": "properties.storageProfile.imageReference.publisher",
                "equals": "Oracle",
                "convert": true
              },
              {
                "field": "properties.storageProfile.imageReference.offer",
                "equals": "Oracle-Linux",
                "convert": true
              },
              {
                "anyOf": [
                  {
                    "field": "properties.storageProfile.imageReference.sku",
                    "like": "6.*"
                  },
                  {
                    "field": "properties.storageProfile.imageReference.sku",
                    "like": "7.*"
                  }
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "field": "properties.storageProfile.imageReference.publisher",
                "equals": "OpenLogic",
                "convert": true
              },
              {
                "field": "properties.storageProfile.imageReference.offer",
                "in": [
                  "CentOS",
                  "Centos-LVM",
                  "CentOS-SRIOV"
                ]
              },
              {
                "anyOf": [
                  {
                    "field": "properties.storageProfile.imageReference.sku",
                    "like": "6.*"
                  },
                  {
                    "field": "properties.storageProfile.imageReference.sku",
                    "like": "7*"
                  },
                  {
                    "field": "properties.storageProfile.imageReference.sku",
                    "like": "8*"
                  }
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "field": "properties.storageProfile.imageReference.publisher",
                "equals": "cloudera",
                "convert": true
              },
              {
                "field": "properties.storageProfile.imageReference.offer",
                "equals": "cloudera-centos-os",
                "convert": true
              },
              {
                "field": "properties.storageProfile.imageReference.sku",
                "like": "7*"
              }
            ]
          }
        ]
      },
      "condition": {
        "field": "resources",
        "allOf": [
          {
            "field": "properties.type",
            "equals": "OmsAgentForLinux",
            "convert": true
          },
          {
            "field": "properties.publisher",
            "equals": "Microsoft.EnterpriseCloud.Monitoring",
            "convert": true
          },
          {
            "field": "properties.provisioningState",
            "equals": "Succeeded",
            "convert": true
          }
        ],
        "where": {
          "type": ".",
          "equals": "Microsoft.Compute/virtualMachines/extensions"
        }
      }
    }
  },
  {
    // Synopsis: Function app must pull from specified registry
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Rule",
    "metadata": {
      "name": "Azure.Policy.d56db8a16bcd",
      "displayName": "FunctionAppPullFromSpecifiedRegistry",
      "tags": {
        "Azure.Policy/category": "App Service"
      },
      "annotations": {
        "Azure.Policy/id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyDefinitions/0000000000-0000-0000-0000-000000000003",
        "Azure.Policy/version": "1.0.0"
      }
    },
    "spec": {
      "recommend": "Function app must pull from specified registry",
      "type": [
        "Microsoft.Web/sites"
      ],
      "with": [
        "PSRule.Rules.Azure\\Azure.Policy.Indexed"
      ],
      "where": {
        "field": "kind",
        "contains": "functionapp"
      },
      "condition": {
        "field": "resources",
        "allOf": [
          {
            "anyOf": [
              {
                "field": "properties.linuxFxVersion",
                "like": "DOCKER|acrtest.azurecr.io/*"
              },
              {
                "field": "properties.linuxFxVersion",
                "notLike": "DOCKER|*"
              }
            ]
          }
        ],
        "where": {
          "allOf": [
            {
              "type": ".",
              "equals": "Microsoft.Web/sites/config"
            },
            {
              "name": ".",
              "equals": "web"
            }
          ]
        }
      }
    }
  },
  {
    // Synopsis: Enforce disabling of SNAT on load balancing rules
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Rule",
    "metadata": {
      "name": "Azure.Policy.dacd34c75fe1",
      "displayName": "DisableLBRuleSNAT",
      "annotations": {
        "Azure.Policy/id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyDefinitions/00000000-0000-0000-0000-000000000004"
      }
    },
    "spec": {
      "recommend": "Enforce disabling of SNAT on load balancing rules",
      "type": [
        "Microsoft.Network/loadBalancers"
      ],
      "with": [
        "PSRule.Rules.Azure\\Azure.Policy.All"
      ],
      "condition": {
        "greaterOrEqual": 1,
        "field": "properties.loadBalancingRules[*]",
        "allOf": [
          {
            "field": "properties.disableOutboundSnat",
            "equals": false,
            "convert": true
          }
        ]
      }
    }
  },
  {
    // Synopsis: Enforce atleast more than one LB rule
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Rule",
    "metadata": {
      "name": "Azure.Policy.956f4a31128a",
      "displayName": "EnsureAtleastOneLBRule",
      "annotations": {
        "Azure.Policy/id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyDefinitions/00000000-0000-0000-0000-000000000005"
      }
    },
    "spec": {
      "recommend": "Enforce atleast more than one LB rule",
      "type": [
        "Microsoft.Network/loadBalancers"
      ],
      "with": [
        "PSRule.Rules.Azure\\Azure.Policy.All"
      ],
      "condition": {
        "greaterOrEquals": 1,
        "field": "properties.loadBalancingRules[*]",
        "convert": true
      }
    }
  },
  {
    // Synopsis: Enforce unique description on one NSG rule
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Rule",
    "metadata": {
      "name": "Azure.Policy.adfcc9477a6b",
      "displayName": "UniqueDescriptionNSG",
      "annotations": {
        "Azure.Policy/id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyDefinitions/00000000-0000-0000-0000-000000000006"
      }
    },
    "spec": {
      "recommend": "Enforce unique description on one NSG rule",
      "type": [
        "Microsoft.Network/networkSecurityGroups"
      ],
      "with": [
        "PSRule.Rules.Azure\\Azure.Policy.All"
      ],
      "condition": {
        "count": 1,
        "field": "properties.securityRules[*]",
        "allOf": [
          {
            "field": "properties.description",
            "equals": "My unique description",
            "convert": true
          }
        ]
      }
    }
  },
  {
    // Synopsis: Denies RDP port on inbound NSG rules
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Rule",
    "metadata": {
      "name": "Azure.Policy.aac3ff168ccf",
      "displayName": "DenyNSGRDPInboundPort",
      "annotations": {
        "Azure.Policy/id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyDefinitions/00000000-0000-0000-0000-000000000007"
      }
    },
    "spec": {
      "recommend": "Denies RDP port on inbound NSG rules",
      "type": [
        "Microsoft.Network/networkSecurityGroups/securityRules"
      ],
      "with": [
        "PSRule.Rules.Azure\\Azure.Policy.All"
      ],
      "condition": {
        "greater": 0,
        "field": "properties.securityRules[*]",
        "allOf": [
          {
            "field": "properties.direction",
            "equals": "Inbound",
            "convert": true
          },
          {
            "field": "properties.access",
            "equals": "Allow",
            "convert": true
          },
          {
            "field": "properties.destinationPortRange",
            "equals": "3389",
            "convert": true
          }
        ]
      }
    }
  },
  {
    // Synopsis: Deny common ports on NSG rules
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Rule",
    "metadata": {
      "name": "Azure.Policy.fe64397c8e69",
      "displayName": "DenyPortsNSG",
      "annotations": {
        "Azure.Policy/id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyDefinitions/00000000-0000-0000-0000-000000000008"
      }
    },
    "spec": {
      "recommend": "Deny common ports on NSG rules",
      "type": [
        "Microsoft.Network/networkSecurityGroups/securityRules",
        "Microsoft.Network/networkSecurityGroups"
      ],
      "with": [
        "PSRule.Rules.Azure\\Azure.Policy.All"
      ],
      "where": {
        "anyOf": [
          {
            "allOf": [
              {
                "equals": "Microsoft.Network/networkSecurityGroups/securityRules",
                "type": "."
              },
              {
                "field": "properties.sourceAddressPrefix",
                "equals": "*",
                "convert": true
              },
              {
                "anyOf": [
                  {
                    "field": "properties.destinationPortRange",
                    "equals": "22",
                    "convert": true
                  },
                  {
                    "field": "properties.destinationPortRange",
                    "equals": "3389",
                    "convert": true
                  }
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "equals": "Microsoft.Network/networkSecurityGroups",
                "type": "."
              },
              {
                "greater": 0,
                "field": "properties.securityRules[*]",
                "allOf": [
                  {
                    "field": "properties.sourceAddressPrefix",
                    "equals": "*",
                    "convert": true
                  },
                  {
                    "anyOf": [
                      {
                        "field": "properties.destinationPortRange",
                        "equals": "22",
                        "convert": true
                      },
                      {
                        "field": "properties.destinationPortRange",
                        "equals": "3389",
                        "convert": true
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "condition": {
        "value": "deny",
        "equals": false
      }
    }
  },
  {
    // Synopsis: Prevent subnets without NSG
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Rule",
    "metadata": {
      "name": "Azure.Policy.eac8effcedc0",
      "displayName": "PreventSubnetsWithoutNSG",
      "annotations": {
        "Azure.Policy/id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyDefinitions/00000000-0000-0000-0000-000000000009"
      }
    },
    "spec": {
      "recommend": "Prevent subnets without NSG",
      "type": [
        "Microsoft.Network/virtualNetworks/subnets",
        "Microsoft.Network/virtualNetworks"
      ],
      "with": [
        "PSRule.Rules.Azure\\Azure.Policy.All"
      ],
      "where": {
        "anyOf": [
          {
            "allOf": [
              {
                "equals": "Microsoft.Network/virtualNetworks/subnets",
                "type": "."
              },
              {
                "exists": false,
                "field": "properties.routeTable.id"
              },
              {
                "field": "name",
                "notIn": [
                  "AzureFirewallSubnet",
                  "AzureFirewallManagementSubnet"
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "equals": "Microsoft.Network/virtualNetworks",
                "type": "."
              },
              {
                "notCount": 0,
                "field": "properties.subnets[*]",
                "allOf": [
                  {
                    "exists": false,
                    "field": "properties.routeTable.id"
                  },
                  {
                    "field": "name",
                    "notIn": [
                      "AzureFirewallManagementSubnet",
                      "AzureFirewallSubnet"
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "condition": {
        "value": "deny",
        "equals": false
      }
    }
  },
  {
    // Synopsis: Prevent private endpoint being created in specific subnet
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Rule",
    "metadata": {
      "name": "Azure.Policy.6e7a9b50e524",
      "displayName": "DenyPrivateEndpointSpecificSubnet",
      "annotations": {
        "Azure.Policy/id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policyDefinitions/00000000-0000-0000-0000-000000000010"
      }
    },
    "spec": {
      "recommend": "Prevent private endpoint being created in specific subnet",
      "type": [
        "Microsoft.Network/privateEndpoints"
      ],
      "with": [
        "PSRule.Rules.Azure\\Azure.Policy.All"
      ],
      "where": {
        "allOf": [
          {
            "field": "properties.subnet.id",
            "notContains": "pls"
          },
          {
            "greaterOrEqual": 1,
            "field": "properties.privateLinkServiceConnections[*].properties.groupIds[*]",
            "allOf": [
              {
                "field": ".",
                "notIn": [
                  "blob",
                  "sqlServer"
                ]
              }
            ]
          }
        ]
      },
      "condition": {
        "value": "deny",
        "equals": false
      }
    }
  },
  {
    // Synopsis: View and configure system diagnostic data
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Rule",
    "metadata": {
      "name": "Azure.Policy.55eedf5a41fd",
      "displayName": "View and configure system diagnostic data",
      "tags": {
        "Azure.Policy/category": "Regulatory Compliance"
      },
      "annotations": {
        "Azure.Policy/id": "/providers/Microsoft.Authorization/policyDefinitions/00000000-0000-0000-0000-000000000011-A",
        "Azure.Policy/version": "1.0.0"
      }
    },
    "spec": {
      "recommend": "View and configure system diagnostic data",
      "type": [
        "Microsoft.Resources/subscriptions"
      ],
      "with": [
        "PSRule.Rules.Azure\\Azure.Policy.All"
      ],
      "condition": {
        "value": "Manual",
        "equals": false
      }
    }
  },
  {
    // Synopsis: View and configure system diagnostic data
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Rule",
    "metadata": {
      "name": "Azure.Policy.1cc127cf387a",
      "displayName": "View and configure system diagnostic data",
      "tags": {
        "Azure.Policy/category": "Regulatory Compliance"
      },
      "annotations": {
        "Azure.Policy/id": "/providers/Microsoft.Authorization/policyDefinitions/00000000-0000-0000-0000-000000000011-B",
        "Azure.Policy/version": "1.0.0"
      }
    },
    "spec": {
      "recommend": "View and configure system diagnostic data",
      "type": [
        "Microsoft.Resources/subscriptions"
      ],
      "with": [
        "PSRule.Rules.Azure\\Azure.Policy.All"
      ],
      "condition": {
        "value": "Manual",
        "equals": false
      }
    }
  },
  {
    // Synopsis: Generated automatically when exporting Azure Policy rules.
    "apiVersion": "github.com/microsoft/PSRule/v1",
    "kind": "Baseline",
    "metadata": {
      "name": "Azure.PolicyBaseline.All"
    },
    "spec": {
      "rule": {
        "include": [
          "Azure.Policy.d81b1a6a2e42",
          "Azure.Policy.22d1534810c7",
          "Azure.Policy.d56db8a16bcd",
          "Azure.Policy.dacd34c75fe1",
          "Azure.Policy.956f4a31128a",
          "Azure.Policy.adfcc9477a6b",
          "Azure.Policy.aac3ff168ccf",
          "Azure.Policy.fe64397c8e69",
          "Azure.Policy.eac8effcedc0",
          "Azure.Policy.6e7a9b50e524",
          "Azure.Policy.55eedf5a41fd",
          "Azure.Policy.1cc127cf387a"
        ]
      }
    }
  }
]
