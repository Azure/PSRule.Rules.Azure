{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.25.53.49325",
      "templateHash": "16025868691049564889"
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "defaultValue": "frontdoor",
      "metadata": {
        "description": "The name of the resource."
      }
    },
    "workspaceId": {
      "type": "string",
      "metadata": {
        "description": "A resource ID that specifies the Log Analytics workspace to send logs."
      }
    },
    "backendAddress": {
      "type": "string",
      "metadata": {
        "description": "The hostname of the backend. Must be an IP address or FQDN."
      }
    }
  },
  "variables": {
    "frontEndEndpointName": "frontEndEndpoint",
    "loadBalancingSettingsName": "loadBalancingSettings",
    "healthProbeSettingsName": "healthProbeSettings",
    "routingRuleName": "routingRule",
    "backendPoolName": "backendPool",
    "frontendEndpoints": [
      {
        "name": "[variables('frontEndEndpointName')]",
        "properties": {
          "hostName": "[format('{0}.azurefd.net', parameters('name'))]",
          "sessionAffinityEnabledState": "Disabled"
        }
      }
    ],
    "loadBalancingSettings": [
      {
        "name": "[variables('loadBalancingSettingsName')]",
        "properties": {
          "sampleSize": 4,
          "successfulSamplesRequired": 2
        }
      }
    ],
    "backendPools": [
      {
        "name": "[variables('backendPoolName')]",
        "properties": {
          "backends": [
            {
              "address": "[parameters('backendAddress')]",
              "backendHostHeader": "[parameters('backendAddress')]",
              "httpPort": 80,
              "httpsPort": 443,
              "weight": 50,
              "priority": 1,
              "enabledState": "Enabled"
            }
          ],
          "loadBalancingSettings": {
            "id": "[resourceId('Microsoft.Network/frontDoors/loadBalancingSettings', parameters('name'), variables('loadBalancingSettingsName'))]"
          },
          "healthProbeSettings": {
            "id": "[resourceId('Microsoft.Network/frontDoors/healthProbeSettings', parameters('name'), variables('healthProbeSettingsName'))]"
          }
        }
      }
    ],
    "routingRules": [
      {
        "name": "[variables('routingRuleName')]",
        "properties": {
          "frontendEndpoints": [
            {
              "id": "[resourceId('Microsoft.Network/frontDoors/frontEndEndpoints', parameters('name'), variables('frontEndEndpointName'))]"
            }
          ],
          "acceptedProtocols": [
            "Http",
            "Https"
          ],
          "patternsToMatch": [
            "/*"
          ],
          "routeConfiguration": {
            "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
            "cacheConfiguration": {
              "cacheDuration": "P12DT1H",
              "dynamicCompression": "Disabled",
              "queryParameters": "customerId",
              "queryParameterStripDirective": "StripAll"
            },
            "forwardingProtocol": "MatchRequest",
            "backendPool": {
              "id": "[resourceId('Microsoft.Network/frontDoors/backEndPools', parameters('name'), variables('backendPoolName'))]"
            }
          },
          "enabledState": "Enabled"
        }
      }
    ],
    "healthProbeSettings": [
      {
        "name": "[variables('healthProbeSettingsName')]",
        "properties": {
          "enabledState": "Enabled",
          "path": "/healthz",
          "protocol": "Http",
          "intervalInSeconds": 120,
          "healthProbeMethod": "HEAD"
        }
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Network/FrontDoorWebApplicationFirewallPolicies",
      "apiVersion": "2022-05-01",
      "name": "[parameters('name')]",
      "location": "Global",
      "sku": {
        "name": "Premium_AzureFrontDoor"
      },
      "properties": {
        "managedRules": {
          "managedRuleSets": [
            {
              "ruleSetType": "Microsoft_DefaultRuleSet",
              "ruleSetVersion": "2.0",
              "ruleSetAction": "Block",
              "exclusions": [],
              "ruleGroupOverrides": []
            },
            {
              "ruleSetType": "Microsoft_BotManagerRuleSet",
              "ruleSetVersion": "1.0",
              "ruleSetAction": "Block",
              "exclusions": [],
              "ruleGroupOverrides": []
            }
          ]
        },
        "policySettings": {
          "enabledState": "Enabled",
          "mode": "Prevention"
        }
      },
      "metadata": {
        "description": "Define a WAF policy for Front Door Premium."
      }
    },
    {
      "type": "Microsoft.Network/frontDoors",
      "apiVersion": "2021-06-01",
      "name": "[parameters('name')]",
      "location": "global",
      "properties": {
        "enabledState": "Enabled",
        "frontendEndpoints": [
          {
            "name": "[variables('frontEndEndpointName')]",
            "properties": {
              "hostName": "[format('{0}.azurefd.net', parameters('name'))]",
              "sessionAffinityEnabledState": "Disabled",
              "customHttpsConfiguration": {
                "minimumTlsVersion": "1.2"
              }
            }
          }
        ],
        "loadBalancingSettings": "[variables('loadBalancingSettings')]",
        "backendPools": "[variables('backendPools')]",
        "healthProbeSettings": "[variables('healthProbeSettings')]",
        "routingRules": "[variables('routingRules')]"
      },
      "metadata": {
        "description": "Define a Front Door Classic."
      }
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Network/frontDoors/{0}', parameters('name'))]",
      "name": "audit",
      "properties": {
        "workspaceId": "[parameters('workspaceId')]",
        "logs": [
          {
            "category": "FrontdoorAccessLog",
            "enabled": true
          },
          {
            "category": "FrontdoorWebApplicationFirewallLog",
            "enabled": true
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/frontDoors', parameters('name'))]"
      ]
    },
    {
      "type": "Microsoft.Cdn/profiles",
      "apiVersion": "2023-05-01",
      "name": "[parameters('name')]",
      "location": "Global",
      "sku": {
        "name": "Premium_AzureFrontDoor"
      }
    },
    {
      "type": "Microsoft.Cdn/profiles/afdEndpoints",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', parameters('name'), parameters('name'))]",
      "location": "Global",
      "properties": {
        "enabledState": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles', parameters('name'))]"
      ]
    },
    {
      "type": "Microsoft.Cdn/profiles/originGroups",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', parameters('name'), parameters('name'))]",
      "properties": {
        "loadBalancingSettings": {
          "sampleSize": 4,
          "successfulSamplesRequired": 3
        },
        "healthProbeSettings": {
          "probePath": "/healthz",
          "probeRequestType": "HEAD",
          "probeProtocol": "Http",
          "probeIntervalInSeconds": 100
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles', parameters('name'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Cdn/profiles/{0}', parameters('name'))]",
      "name": "audit",
      "properties": {
        "workspaceId": "[parameters('workspaceId')]",
        "logs": [
          {
            "category": "FrontdoorAccessLog",
            "enabled": true
          },
          {
            "category": "FrontdoorWebApplicationFirewallLog",
            "enabled": true
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles', parameters('name'))]"
      ]
    }
  ]
}